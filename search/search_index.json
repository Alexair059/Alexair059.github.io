{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome To My Blog \u00b6 2023-5 \u00b6 \u7f51\u7edc\u7ed3\u6784\u53ef\u89c6\u5316 & \u5c55\u793a\u90e8\u7f72 2023-4 \u00b6 \u53d8\u5206\u81ea\u7f16\u7801\u5668 | VAE mkdocs\u52a0\u5bc6 2023-3 \u00b6 SVM\uff08\u672a\u5b8c\u6210\uff09 \u57fa\u4e8e mkdocs-material \u7684 Blog \u5de5\u4f5c\u6d41 2023-1 \u00b6 \u611f\u77e5\u673a \u6734\u7d20\u8d1d\u53f6\u65af 2022-12 \u00b6 uWSGI Nginx 2022-11 \u00b6 SLIC Pixelation & \u56fe\u7247\u50cf\u7d20\u5316\u98ce\u683c\u751f\u6210\u5668 FGSM\u653b\u51fb \u4e71\u6570\u5047\u6587&LSB\u9690\u5199","title":"Home"},{"location":"#welcome-to-my-blog","text":"","title":"Welcome To My Blog"},{"location":"#2023-5","text":"\u7f51\u7edc\u7ed3\u6784\u53ef\u89c6\u5316 & \u5c55\u793a\u90e8\u7f72","title":"2023-5"},{"location":"#2023-4","text":"\u53d8\u5206\u81ea\u7f16\u7801\u5668 | VAE mkdocs\u52a0\u5bc6","title":"2023-4"},{"location":"#2023-3","text":"SVM\uff08\u672a\u5b8c\u6210\uff09 \u57fa\u4e8e mkdocs-material \u7684 Blog \u5de5\u4f5c\u6d41","title":"2023-3"},{"location":"#2023-1","text":"\u611f\u77e5\u673a \u6734\u7d20\u8d1d\u53f6\u65af","title":"2023-1"},{"location":"#2022-12","text":"uWSGI Nginx","title":"2022-12"},{"location":"#2022-11","text":"SLIC Pixelation & \u56fe\u7247\u50cf\u7d20\u5316\u98ce\u683c\u751f\u6210\u5668 FGSM\u653b\u51fb \u4e71\u6570\u5047\u6587&LSB\u9690\u5199","title":"2022-11"},{"location":"ai/ch1_2/","text":"\u611f\u77e5\u673a \u00b6 \u611f\u77e5\u673a\uff08perceptron\uff09\u662f\u4e8c\u5206\u7c7b\u7684\u7ebf\u6027\u5224\u522b\u6a21\u578b\uff0c\u5176\u65e8\u5728\u6c42\u51fa\u5c06\u8bad\u7ec3\u6570\u636e\u6240\u5904\u7684\u7279\u5f81\u7a7a\u95f4\u8fdb\u884c\u7ebf\u6027\u5212\u5206\u7684\u5206\u79bb\u8d85\u5e73\u9762\u3002\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u7b80\u5355\uff0c\u6613\u4e8e\u5b9e\u73b0\uff0c\u5177\u6709\u539f\u59cb\u5f62\u5f0f\u4e0e\u5bf9\u5076\u5f62\u5f0f\uff0c\u662f\u795e\u7ecf\u7f51\u7edc\u4e0e\u652f\u6301\u5411\u91cf\u673a\u7684\u57fa\u7840 \u5206\u7c7b \u00b6 \u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u975e\u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u7ebf\u6027\u6a21\u578b \u5224\u522b\u5b66\u4e60\u65b9\u6cd5 \u4e8c\u5206\u7c7b\u65b9\u6cd5 \u611f\u77e5\u673a\u6a21\u578b \u00b6 \u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u4e3a \\[ T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\},\\quad x\\in \\mathcal{X},y\\in \\mathcal{Y} \\] \u5176\u4e2d\u8f93\u5165\u7a7a\u95f4 \\(\\mathcal{X}\\subseteq R^n\\) \u4e3a \\(n\\) \u7ef4\u7a7a\u95f4\u5411\u91cf\u7684\u96c6\u5408\uff0c\u8f93\u51fa\u7a7a\u95f4\u4e3a\u7c7b\u6807\u8bb0\u96c6\u5408 \\(\\mathcal{Y}=\\{+1,-1\\}\\) \u7531\u8f93\u5165\u7a7a\u95f4\u5230\u8f93\u51fa\u7a7a\u95f4\u7684\u5982\u4e0b\u51fd\u6570\u79f0\u4e3a\u611f\u77e5\u673a\uff1a \\[ f(x)=sgn(w \\cdot x +b) \\] \u5176\u4e2d\u611f\u77e5\u673a\u53c2\u6570 \\(w\\in R^n\\) \u79f0\u4e3a\u6743\u503c/\u6743\u91cd\uff0c \\(b\\in R\\) \u79f0\u4f5c\u504f\u7f6e \u6570\u636e\u96c6\u7684\u7ebf\u6027\u53ef\u5206\u6027 \u00b6 \u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u6570\u636e\u96c6 \\(T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\}\\) \uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e2a\u8d85\u5e73\u9762 \\(S:w \\cdot x +b=0\\) ,\u4f7f\u5f97\u6240\u6709 \\(y_i=+1\\) \u7684\u5b9e\u4f8b \\(i\\) \uff0c\u6709 \\(w\\cdot x_i +b > 0\\) \uff08\u53cd\u4e4b\u4ea6\u7136\uff09\uff0c\u5219\u79f0\u8be5\u6570\u636e\u96c6\u4e3a\u7ebf\u6027\u53ef\u5206\u7684 \u611f\u77e5\u673a\u5b66\u4e60\u7b56\u7565 \u00b6 \u5047\u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u662f\u7ebf\u6027\u53ef\u5206\u7684\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7684\u76ee\u6807\u5373\u662f\u6c42\u5f97\u4e00\u4e2a\u80fd\u591f\u5c06\u8bad\u7ec3\u96c6\u6b63\u8d1f\u5b9e\u4f8b\u70b9\u5b8c\u5168\u6b63\u786e\u5206\u5f00\u7684\u5206\u79bb\u8d85\u5e73\u9762\uff0c\u5373\u611f\u77e5\u673a\u53c2\u6570 \\(w,b\\) \u4e3a\u6b64\u9700\u8981\u5b9a\u4e49\uff08\u7ecf\u9a8c\uff09\u635f\u5931\u51fd\u6570\u5e76\u5c06\u635f\u5931\u51fd\u6570\u6781\u5c0f\u5316 \u635f\u5931\u51fd\u6570\u7684\u4e00\u4e2a\u76f4\u89c2\u9009\u62e9\u5373\u662f\u8bef\u5206\u7c7b\u70b9\u7684\u603b\u6570\uff0c\u4f46\u8fd9\u6837\u7684\u635f\u5931\u51fd\u6570\u4e0d\u662f\u53c2\u6570 \\(w,b\\) \u7684\u8fde\u7eed\u53ef\u5bfc\u51fd\u6570\uff0c\u4e0d\u6613\u4f18\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u9009\u62e9\u8bef\u5206\u7c7b\u70b9\u5230\u8d85\u5e73\u9762 \\(S\\) \u7684\u603b\u8ddd\u79bb \u5bf9\u4e8e\u4efb\u4e00\u8bef\u5206\u7c7b\u70b9 \\(x_0\\) \u5230\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\uff1a \\[ \\frac{1}{\\Vert w\\Vert _2}\\vert w \\cdot x_0 + b\\vert \\] \u5bf9\u4e8e\u8bef\u5206\u7c7b\u70b9 \\((x_i,y_i)\\) ,\u6709 \\[ -y_i(w \\cdot x_i +b) > 0 \\] \u6545\u6240\u6709\u8bef\u5206\u7c7b\u70b9\u5230\u8d85\u5e73\u9762 \\(S\\) \u7684\u603b\u8ddd\u79bb\u4e3a\uff1a \\[ -\\frac{1}{\\Vert w\\Vert}\\sum_{x_i \\in M}y_i(w \\cdot x_i +b) \\] \u4e8e\u662f\u6211\u4eec\u5c06\u611f\u77e5\u673a\u5b66\u4e60\u7684\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u4e3a\uff1a \\[ L(w,b) = - \\sum_{x_i \\in M}y_i(w \\cdot x_i +b) \\] \u5176\u4e2d \\(M\\) \u4e3a\u8bef\u5206\u7c7b\u70b9\u7684\u96c6\u5408\uff0c \\(y_i(w \\cdot x_i +b)\\) \u79f0\u4e3a\u6837\u672c\u70b9\u7684\u51fd\u6570\u95f4\u9694 \u53ef\u4ee5\u770b\u51fa\uff0c\u635f\u5931\u51fd\u6570 \\(L(w,b)\\) \u662f\u975e\u8d1f\u7684\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u6837\u672c\u70b9\uff0c\u5728\u8bef\u5206\u7c7b\u65f6\u662f\u53c2\u6570 \\(w,b\\) \u7684\u7ebf\u6027\u51fd\u6570\uff0c\u5728\u6b63\u786e\u5206\u7c7b\u65f6\u662f0\u3002\u56e0\u6b64\uff0c \\(L(w,b)\\) \u662f \\(w,b\\) \u7684\u8fde\u7eed\u53ef\u5bfc\u51fd\u6570 \u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5 \u00b6 \u611f\u77e5\u673a\u7684\u5b66\u4e60\u7b97\u6cd5\u91c7\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD\uff09\u5b9e\u73b0\uff1a \u9996\u5148\u968f\u673a\u521d\u59cb\u5316\u611f\u77e5\u673a\u53c2\u6570 \\(w_0,b_0\\) \uff0c\u7136\u540e\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u4e0d\u65ad\u6781\u5c0f\u5316\u76ee\u6807\u51fd\u6570 \\[ L(w,b)=-\\sum_{x_i \\in M}y_i(w \\cdot x_i +b) \\] \u5728\u6781\u5c0f\u5316\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u662f\u4e00\u6b21\u4f7f \\(M\\) \u7684\u6240\u6709\u8bef\u5206\u7c7b\u70b9\u7684\u68af\u5ea6\u4e0b\u964d\uff0c\u800c\u662f\u4e00\u6b21\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u8bef\u5206\u7c7b\u70b9\u4f7f\u5176\u68af\u5ea6\u4e0b\u964d\uff0c\u5176\u4e2d \\(L(w,b)\\) \u7684\u68af\u5ea6\u4e3a \\[ \\begin{aligned} \\nabla_{w}L(w,b)&=-\\sum_{x_i \\in M}y_ix_i \\\\ \\nabla_{b}L(w,b)&=-\\sum_{x_i \\in M}y_i \\end{aligned} \\] \u968f\u673a\u9009\u53d6\u4e00\u4e2a\u8bef\u5206\u7c7b\u70b9 \\((x_i,y_i)\\) \uff0c\u5bf9\u53c2\u6570\u8fdb\u884c\u66f4\u65b0 \\[ \\begin{aligned} w &\\gets w + \\eta y_ix_i \\\\ b &\\gets b + \\eta y_i \\end{aligned} \\] \u5176\u4e2d \\(\\eta\\) \u79f0\u4e3a\u5b66\u4e60\u7387\uff08learning rate\uff09 \u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\uff08\u539f\u59cb\u5f62\u5f0f\uff09 \u00b6 \u8f93\u5165\uff1a \u8bad\u7ec3\u6570\u636e\u96c6 \\(T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\}\\) \u5b66\u4e60\u7387 \\(\\eta\\) \u8f93\u51fa\uff1a\u611f\u77e5\u673a\u6a21\u578b \\(f(x)=sgn(w \\cdot x +b)\\) \uff1b\u611f\u77e5\u673a\u53c2\u6570 \\(w, b\\) \u9009\u53d6\u521d\u503c \\(w_0,b_0\\) ; \u5728\u8bad\u7ec3\u96c6\u4e2d\u9009\u53d6\u6570\u636e \\((x_i,y_i)\\) ; \u5982\u679c \\(y_i(w \\cdot x_i +b) \\leq 0\\) : \\[ \\begin{aligned} w &\\gets w + \\eta y_ix_i \\\\ b &\\gets b + \\eta y_i \\end{aligned} \\] \u8f6c\u81f3 2 \uff0c\u76f4\u81f3\u8bad\u7ec3\u96c6\u4e2d\u6ca1\u6709\u8bef\u5206\u7c7b\u70b9 \u5728\u5b9e\u9645\u5b66\u4e60\u4e2d\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u7531\u4e8e\u91c7\u53d6\u4e0d\u540c\u7684\u521d\u503c\u6216\u9009\u53d6\u4e0d\u540c\u7684\u8bef\u5206\u7c7b\u70b9\uff0c\u6700\u540e\u5f97\u5230\u7684\u6a21\u578b\uff0c\u5373\u53c2\u6570 \\(w,b\\) \u53ef\u80fd\u4e0d\u540c \u7b97\u6cd5\u6536\u655b\u6027\uff08Novikoff\u5b9a\u7406\uff09 \u00b6 \u7531Novikoff\u5b9a\u7406\u53ef\u77e5\uff0c\u5bf9\u4e8e\u7ebf\u6027\u53ef\u5206\u6570\u636e\u96c6\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u6536\u655b\uff0c\u5373\u7ecf\u8fc7\u6709\u9650\u6b21\u8fed\u4ee3\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5c06\u5176\u5b8c\u5168\u6b63\u786e\u5212\u5206\u7684\u611f\u77e5\u673a\u6a21\u578b \u5b9a\u7406\u8868\u660e\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u5728\u7ebf\u6027\u53ef\u5206\u6570\u636e\u96c6\u4e0a\u5b66\u4e60\u65f6\uff0c\u8bef\u5206\u7c7b\u7684\u6b21\u6570 \\(k\\) \u662f\u6709\u4e0a\u754c\u7684\uff0c\u7ecf\u8fc7\u6709\u9650\u6b21\u641c\u7d22\u53ef\u4ee5\u627e\u5230\u5c06\u8bad\u7ec3\u6570\u636e\u5b8c\u5168\u6b63\u786e\u5206\u5f00\u7684\u5206\u79bb\u8d85\u5e73\u9762 \u5f53\u8bad\u7ec3\u96c6\u7ebf\u6027\u4e0d\u53ef\u5206\u65f6\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u4e0d\u6536\u655b\uff0c\u8fed\u4ee3\u7ed3\u679c\u4f1a\u53d1\u751f\u9707\u8361 \u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u7684\u5bf9\u5076\u5f62\u5f0f \u00b6 \u5bf9\u5076\u5f62\u5f0f\u7684\u57fa\u672c\u60f3\u6cd5\u5728\u4e8e\uff0c\u5c06 \\(w\\) \u548c \\(b\\) \u8868\u793a\u4e3a\u5b9e\u4f8b \\(x_i\\) \u548c \u6807\u8bb0 \\(y_i\\) \u7684\u7ebf\u6027\u7ec4\u5408\u5f62\u5f0f\uff0c\u901a\u8fc7\u6c42\u89e3\u5176\u7cfb\u6570\u4ece\u800c\u6c42\u5f97 \\(w\\) \u548c \\(b\\) \uff1a \u8bbe\u521d\u59cb\u503c \\(w_0, b_0\\) \u5747\u4e3a0\uff0c\u7ecf\u8fc7\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u540e\uff0c\u8fed\u4ee3\u8fc7\u7684\u53c2\u6570\u53ef\u8868\u793a\u4e3a \\[ \\begin{aligned} w &=\\sum_{i=1}^{N}\\alpha_i y_i x_i\\\\ b &=\\sum_{i=1}^{N}\\alpha_i y_i \\end{aligned} \\] \u5176\u4e2d\uff0c \\(\\alpha_i=n_i\\eta \\geq 0, i=1,2,\u00b7\u00b7\u00b7,N\\) \uff0c\u5176\u4e2d \\(n_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u5b9e\u4f8b\u70b9\u7531\u4e8e\u8bef\u5206\u800c\u8fdb\u884c\u66f4\u65b0\u7684\u6b21\u6570\u3002\u5b9e\u4f8b\u70b9\u66f4\u65b0\u6b21\u6570\u8d8a\u591a\uff0c\u610f\u5473\u7740\u5b83\u8ddd\u79bb\u5206\u79bb\u8d85\u5e73\u9762\u8d8a\u8fd1\uff0c\u4e5f\u5c31\u8d8a\u96be\u6b63\u786e\u5206\u7c7b\uff0c\u8fd9\u6837\u7684\u5b9e\u4f8b\u5bf9\u5b66\u4e60\u7ed3\u679c\u5f71\u54cd\u6700\u5927 \u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\uff08\u5bf9\u5076\u5f62\u5f0f\uff09 \u00b6 \u8f93\u5165\uff1a \u8bad\u7ec3\u6570\u636e\u96c6 \\(T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\}\\) \u5b66\u4e60\u7387 \\(\\eta\\) \u8f93\u51fa\uff1a\u611f\u77e5\u673a\u6a21\u578b \\(f(x)=sgn\\left(\\sum_{j=1}^{N}\\alpha_j y_j x_j \\cdot x +b\\right)\\) \uff1b\u611f\u77e5\u673a\u53c2\u6570 \\(\\alpha, b\\) \uff1b \\(\\alpha = (\\alpha_1, \\alpha_2,\u00b7\u00b7\u00b7,\\alpha_N)^T\\) \\(\\alpha \\gets 0, b \\gets 0\\) \uff1b \u5728\u8bad\u7ec3\u96c6\u4e2d\u9009\u53d6\u6570\u636e \\((x_i, y_i)\\) \uff1b \u5982\u679c \\(\\left(\\sum_{j=1}^{N}\\alpha_j y_j x_j \\cdot x +b\\right)\\leq 0\\) \uff1a \\[ \\begin{aligned} \\alpha &\\gets \\alpha + \\eta\\\\ b &\\gets b + \\eta y_i \\end{aligned} \\] \u8f6c\u81f3 2 \u76f4\u5230\u6ca1\u6709\u8bef\u5206\u7c7b\u6570\u636e \u5728\u5bf9\u5076\u5f62\u5f0f\u4e2d\u8bad\u7ec3\u5b9e\u4f8b\u4ec5\u4ee5\u5185\u79ef\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u8ba1\u7b97\u51fa\u6837\u672c\u5b9e\u4f8b\u95f4\u7684\u5185\u79ef\u5e76\u4ee5\u77e9\u9635\u7684\u5f62\u5f0f\u5b58\u50a8\uff0c\u5373\u4e3a Gram \u77e9\u9635\uff08Gram matrix\uff09 \\[ G=[x_i \\cdot x_j]_{N \\times N} \\] \u53c2\u8003\u8d44\u6599 \u00b6 \u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\uff08\u7b2c\u4e8c\u7248\uff09\u300b\u674e\u822a","title":"\u611f\u77e5\u673a"},{"location":"ai/ch1_2/#_1","text":"\u611f\u77e5\u673a\uff08perceptron\uff09\u662f\u4e8c\u5206\u7c7b\u7684\u7ebf\u6027\u5224\u522b\u6a21\u578b\uff0c\u5176\u65e8\u5728\u6c42\u51fa\u5c06\u8bad\u7ec3\u6570\u636e\u6240\u5904\u7684\u7279\u5f81\u7a7a\u95f4\u8fdb\u884c\u7ebf\u6027\u5212\u5206\u7684\u5206\u79bb\u8d85\u5e73\u9762\u3002\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u7b80\u5355\uff0c\u6613\u4e8e\u5b9e\u73b0\uff0c\u5177\u6709\u539f\u59cb\u5f62\u5f0f\u4e0e\u5bf9\u5076\u5f62\u5f0f\uff0c\u662f\u795e\u7ecf\u7f51\u7edc\u4e0e\u652f\u6301\u5411\u91cf\u673a\u7684\u57fa\u7840","title":"\u611f\u77e5\u673a"},{"location":"ai/ch1_2/#_2","text":"\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u975e\u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u7ebf\u6027\u6a21\u578b \u5224\u522b\u5b66\u4e60\u65b9\u6cd5 \u4e8c\u5206\u7c7b\u65b9\u6cd5","title":"\u5206\u7c7b"},{"location":"ai/ch1_2/#_3","text":"\u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u4e3a \\[ T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\},\\quad x\\in \\mathcal{X},y\\in \\mathcal{Y} \\] \u5176\u4e2d\u8f93\u5165\u7a7a\u95f4 \\(\\mathcal{X}\\subseteq R^n\\) \u4e3a \\(n\\) \u7ef4\u7a7a\u95f4\u5411\u91cf\u7684\u96c6\u5408\uff0c\u8f93\u51fa\u7a7a\u95f4\u4e3a\u7c7b\u6807\u8bb0\u96c6\u5408 \\(\\mathcal{Y}=\\{+1,-1\\}\\) \u7531\u8f93\u5165\u7a7a\u95f4\u5230\u8f93\u51fa\u7a7a\u95f4\u7684\u5982\u4e0b\u51fd\u6570\u79f0\u4e3a\u611f\u77e5\u673a\uff1a \\[ f(x)=sgn(w \\cdot x +b) \\] \u5176\u4e2d\u611f\u77e5\u673a\u53c2\u6570 \\(w\\in R^n\\) \u79f0\u4e3a\u6743\u503c/\u6743\u91cd\uff0c \\(b\\in R\\) \u79f0\u4f5c\u504f\u7f6e","title":"\u611f\u77e5\u673a\u6a21\u578b"},{"location":"ai/ch1_2/#_4","text":"\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u6570\u636e\u96c6 \\(T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\}\\) \uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e2a\u8d85\u5e73\u9762 \\(S:w \\cdot x +b=0\\) ,\u4f7f\u5f97\u6240\u6709 \\(y_i=+1\\) \u7684\u5b9e\u4f8b \\(i\\) \uff0c\u6709 \\(w\\cdot x_i +b > 0\\) \uff08\u53cd\u4e4b\u4ea6\u7136\uff09\uff0c\u5219\u79f0\u8be5\u6570\u636e\u96c6\u4e3a\u7ebf\u6027\u53ef\u5206\u7684","title":"\u6570\u636e\u96c6\u7684\u7ebf\u6027\u53ef\u5206\u6027"},{"location":"ai/ch1_2/#_5","text":"\u5047\u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u662f\u7ebf\u6027\u53ef\u5206\u7684\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7684\u76ee\u6807\u5373\u662f\u6c42\u5f97\u4e00\u4e2a\u80fd\u591f\u5c06\u8bad\u7ec3\u96c6\u6b63\u8d1f\u5b9e\u4f8b\u70b9\u5b8c\u5168\u6b63\u786e\u5206\u5f00\u7684\u5206\u79bb\u8d85\u5e73\u9762\uff0c\u5373\u611f\u77e5\u673a\u53c2\u6570 \\(w,b\\) \u4e3a\u6b64\u9700\u8981\u5b9a\u4e49\uff08\u7ecf\u9a8c\uff09\u635f\u5931\u51fd\u6570\u5e76\u5c06\u635f\u5931\u51fd\u6570\u6781\u5c0f\u5316 \u635f\u5931\u51fd\u6570\u7684\u4e00\u4e2a\u76f4\u89c2\u9009\u62e9\u5373\u662f\u8bef\u5206\u7c7b\u70b9\u7684\u603b\u6570\uff0c\u4f46\u8fd9\u6837\u7684\u635f\u5931\u51fd\u6570\u4e0d\u662f\u53c2\u6570 \\(w,b\\) \u7684\u8fde\u7eed\u53ef\u5bfc\u51fd\u6570\uff0c\u4e0d\u6613\u4f18\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u9009\u62e9\u8bef\u5206\u7c7b\u70b9\u5230\u8d85\u5e73\u9762 \\(S\\) \u7684\u603b\u8ddd\u79bb \u5bf9\u4e8e\u4efb\u4e00\u8bef\u5206\u7c7b\u70b9 \\(x_0\\) \u5230\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\uff1a \\[ \\frac{1}{\\Vert w\\Vert _2}\\vert w \\cdot x_0 + b\\vert \\] \u5bf9\u4e8e\u8bef\u5206\u7c7b\u70b9 \\((x_i,y_i)\\) ,\u6709 \\[ -y_i(w \\cdot x_i +b) > 0 \\] \u6545\u6240\u6709\u8bef\u5206\u7c7b\u70b9\u5230\u8d85\u5e73\u9762 \\(S\\) \u7684\u603b\u8ddd\u79bb\u4e3a\uff1a \\[ -\\frac{1}{\\Vert w\\Vert}\\sum_{x_i \\in M}y_i(w \\cdot x_i +b) \\] \u4e8e\u662f\u6211\u4eec\u5c06\u611f\u77e5\u673a\u5b66\u4e60\u7684\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u4e3a\uff1a \\[ L(w,b) = - \\sum_{x_i \\in M}y_i(w \\cdot x_i +b) \\] \u5176\u4e2d \\(M\\) \u4e3a\u8bef\u5206\u7c7b\u70b9\u7684\u96c6\u5408\uff0c \\(y_i(w \\cdot x_i +b)\\) \u79f0\u4e3a\u6837\u672c\u70b9\u7684\u51fd\u6570\u95f4\u9694 \u53ef\u4ee5\u770b\u51fa\uff0c\u635f\u5931\u51fd\u6570 \\(L(w,b)\\) \u662f\u975e\u8d1f\u7684\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u6837\u672c\u70b9\uff0c\u5728\u8bef\u5206\u7c7b\u65f6\u662f\u53c2\u6570 \\(w,b\\) \u7684\u7ebf\u6027\u51fd\u6570\uff0c\u5728\u6b63\u786e\u5206\u7c7b\u65f6\u662f0\u3002\u56e0\u6b64\uff0c \\(L(w,b)\\) \u662f \\(w,b\\) \u7684\u8fde\u7eed\u53ef\u5bfc\u51fd\u6570","title":"\u611f\u77e5\u673a\u5b66\u4e60\u7b56\u7565"},{"location":"ai/ch1_2/#_6","text":"\u611f\u77e5\u673a\u7684\u5b66\u4e60\u7b97\u6cd5\u91c7\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD\uff09\u5b9e\u73b0\uff1a \u9996\u5148\u968f\u673a\u521d\u59cb\u5316\u611f\u77e5\u673a\u53c2\u6570 \\(w_0,b_0\\) \uff0c\u7136\u540e\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u4e0d\u65ad\u6781\u5c0f\u5316\u76ee\u6807\u51fd\u6570 \\[ L(w,b)=-\\sum_{x_i \\in M}y_i(w \\cdot x_i +b) \\] \u5728\u6781\u5c0f\u5316\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u662f\u4e00\u6b21\u4f7f \\(M\\) \u7684\u6240\u6709\u8bef\u5206\u7c7b\u70b9\u7684\u68af\u5ea6\u4e0b\u964d\uff0c\u800c\u662f\u4e00\u6b21\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u8bef\u5206\u7c7b\u70b9\u4f7f\u5176\u68af\u5ea6\u4e0b\u964d\uff0c\u5176\u4e2d \\(L(w,b)\\) \u7684\u68af\u5ea6\u4e3a \\[ \\begin{aligned} \\nabla_{w}L(w,b)&=-\\sum_{x_i \\in M}y_ix_i \\\\ \\nabla_{b}L(w,b)&=-\\sum_{x_i \\in M}y_i \\end{aligned} \\] \u968f\u673a\u9009\u53d6\u4e00\u4e2a\u8bef\u5206\u7c7b\u70b9 \\((x_i,y_i)\\) \uff0c\u5bf9\u53c2\u6570\u8fdb\u884c\u66f4\u65b0 \\[ \\begin{aligned} w &\\gets w + \\eta y_ix_i \\\\ b &\\gets b + \\eta y_i \\end{aligned} \\] \u5176\u4e2d \\(\\eta\\) \u79f0\u4e3a\u5b66\u4e60\u7387\uff08learning rate\uff09","title":"\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5"},{"location":"ai/ch1_2/#_7","text":"\u8f93\u5165\uff1a \u8bad\u7ec3\u6570\u636e\u96c6 \\(T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\}\\) \u5b66\u4e60\u7387 \\(\\eta\\) \u8f93\u51fa\uff1a\u611f\u77e5\u673a\u6a21\u578b \\(f(x)=sgn(w \\cdot x +b)\\) \uff1b\u611f\u77e5\u673a\u53c2\u6570 \\(w, b\\) \u9009\u53d6\u521d\u503c \\(w_0,b_0\\) ; \u5728\u8bad\u7ec3\u96c6\u4e2d\u9009\u53d6\u6570\u636e \\((x_i,y_i)\\) ; \u5982\u679c \\(y_i(w \\cdot x_i +b) \\leq 0\\) : \\[ \\begin{aligned} w &\\gets w + \\eta y_ix_i \\\\ b &\\gets b + \\eta y_i \\end{aligned} \\] \u8f6c\u81f3 2 \uff0c\u76f4\u81f3\u8bad\u7ec3\u96c6\u4e2d\u6ca1\u6709\u8bef\u5206\u7c7b\u70b9 \u5728\u5b9e\u9645\u5b66\u4e60\u4e2d\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u7531\u4e8e\u91c7\u53d6\u4e0d\u540c\u7684\u521d\u503c\u6216\u9009\u53d6\u4e0d\u540c\u7684\u8bef\u5206\u7c7b\u70b9\uff0c\u6700\u540e\u5f97\u5230\u7684\u6a21\u578b\uff0c\u5373\u53c2\u6570 \\(w,b\\) \u53ef\u80fd\u4e0d\u540c","title":"\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\uff08\u539f\u59cb\u5f62\u5f0f\uff09"},{"location":"ai/ch1_2/#novikoff","text":"\u7531Novikoff\u5b9a\u7406\u53ef\u77e5\uff0c\u5bf9\u4e8e\u7ebf\u6027\u53ef\u5206\u6570\u636e\u96c6\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u6536\u655b\uff0c\u5373\u7ecf\u8fc7\u6709\u9650\u6b21\u8fed\u4ee3\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5c06\u5176\u5b8c\u5168\u6b63\u786e\u5212\u5206\u7684\u611f\u77e5\u673a\u6a21\u578b \u5b9a\u7406\u8868\u660e\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u5728\u7ebf\u6027\u53ef\u5206\u6570\u636e\u96c6\u4e0a\u5b66\u4e60\u65f6\uff0c\u8bef\u5206\u7c7b\u7684\u6b21\u6570 \\(k\\) \u662f\u6709\u4e0a\u754c\u7684\uff0c\u7ecf\u8fc7\u6709\u9650\u6b21\u641c\u7d22\u53ef\u4ee5\u627e\u5230\u5c06\u8bad\u7ec3\u6570\u636e\u5b8c\u5168\u6b63\u786e\u5206\u5f00\u7684\u5206\u79bb\u8d85\u5e73\u9762 \u5f53\u8bad\u7ec3\u96c6\u7ebf\u6027\u4e0d\u53ef\u5206\u65f6\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u4e0d\u6536\u655b\uff0c\u8fed\u4ee3\u7ed3\u679c\u4f1a\u53d1\u751f\u9707\u8361","title":"\u7b97\u6cd5\u6536\u655b\u6027\uff08Novikoff\u5b9a\u7406\uff09"},{"location":"ai/ch1_2/#_8","text":"\u5bf9\u5076\u5f62\u5f0f\u7684\u57fa\u672c\u60f3\u6cd5\u5728\u4e8e\uff0c\u5c06 \\(w\\) \u548c \\(b\\) \u8868\u793a\u4e3a\u5b9e\u4f8b \\(x_i\\) \u548c \u6807\u8bb0 \\(y_i\\) \u7684\u7ebf\u6027\u7ec4\u5408\u5f62\u5f0f\uff0c\u901a\u8fc7\u6c42\u89e3\u5176\u7cfb\u6570\u4ece\u800c\u6c42\u5f97 \\(w\\) \u548c \\(b\\) \uff1a \u8bbe\u521d\u59cb\u503c \\(w_0, b_0\\) \u5747\u4e3a0\uff0c\u7ecf\u8fc7\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u540e\uff0c\u8fed\u4ee3\u8fc7\u7684\u53c2\u6570\u53ef\u8868\u793a\u4e3a \\[ \\begin{aligned} w &=\\sum_{i=1}^{N}\\alpha_i y_i x_i\\\\ b &=\\sum_{i=1}^{N}\\alpha_i y_i \\end{aligned} \\] \u5176\u4e2d\uff0c \\(\\alpha_i=n_i\\eta \\geq 0, i=1,2,\u00b7\u00b7\u00b7,N\\) \uff0c\u5176\u4e2d \\(n_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u5b9e\u4f8b\u70b9\u7531\u4e8e\u8bef\u5206\u800c\u8fdb\u884c\u66f4\u65b0\u7684\u6b21\u6570\u3002\u5b9e\u4f8b\u70b9\u66f4\u65b0\u6b21\u6570\u8d8a\u591a\uff0c\u610f\u5473\u7740\u5b83\u8ddd\u79bb\u5206\u79bb\u8d85\u5e73\u9762\u8d8a\u8fd1\uff0c\u4e5f\u5c31\u8d8a\u96be\u6b63\u786e\u5206\u7c7b\uff0c\u8fd9\u6837\u7684\u5b9e\u4f8b\u5bf9\u5b66\u4e60\u7ed3\u679c\u5f71\u54cd\u6700\u5927","title":"\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u7684\u5bf9\u5076\u5f62\u5f0f"},{"location":"ai/ch1_2/#_9","text":"\u8f93\u5165\uff1a \u8bad\u7ec3\u6570\u636e\u96c6 \\(T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\}\\) \u5b66\u4e60\u7387 \\(\\eta\\) \u8f93\u51fa\uff1a\u611f\u77e5\u673a\u6a21\u578b \\(f(x)=sgn\\left(\\sum_{j=1}^{N}\\alpha_j y_j x_j \\cdot x +b\\right)\\) \uff1b\u611f\u77e5\u673a\u53c2\u6570 \\(\\alpha, b\\) \uff1b \\(\\alpha = (\\alpha_1, \\alpha_2,\u00b7\u00b7\u00b7,\\alpha_N)^T\\) \\(\\alpha \\gets 0, b \\gets 0\\) \uff1b \u5728\u8bad\u7ec3\u96c6\u4e2d\u9009\u53d6\u6570\u636e \\((x_i, y_i)\\) \uff1b \u5982\u679c \\(\\left(\\sum_{j=1}^{N}\\alpha_j y_j x_j \\cdot x +b\\right)\\leq 0\\) \uff1a \\[ \\begin{aligned} \\alpha &\\gets \\alpha + \\eta\\\\ b &\\gets b + \\eta y_i \\end{aligned} \\] \u8f6c\u81f3 2 \u76f4\u5230\u6ca1\u6709\u8bef\u5206\u7c7b\u6570\u636e \u5728\u5bf9\u5076\u5f62\u5f0f\u4e2d\u8bad\u7ec3\u5b9e\u4f8b\u4ec5\u4ee5\u5185\u79ef\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u8ba1\u7b97\u51fa\u6837\u672c\u5b9e\u4f8b\u95f4\u7684\u5185\u79ef\u5e76\u4ee5\u77e9\u9635\u7684\u5f62\u5f0f\u5b58\u50a8\uff0c\u5373\u4e3a Gram \u77e9\u9635\uff08Gram matrix\uff09 \\[ G=[x_i \\cdot x_j]_{N \\times N} \\]","title":"\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\uff08\u5bf9\u5076\u5f62\u5f0f\uff09"},{"location":"ai/ch1_2/#_10","text":"\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\uff08\u7b2c\u4e8c\u7248\uff09\u300b\u674e\u822a","title":"\u53c2\u8003\u8d44\u6599"},{"location":"ai/ch1_4/","text":"\u6734\u7d20\u8d1d\u53f6\u65af \u00b6 \u6734\u7d20\u8d1d\u53f6\u65af\uff08Naive Bayes\uff09\u6cd5\u662f\u57fa\u4e8e\u8d1d\u53f6\u65af\u5b9a\u7406\u548c\u7279\u5f81\u6761\u4ef6\u72ec\u7acb\u5047\u8bbe\u7684\u5206\u7c7b\u65b9\u6cd5\uff0c\u5b9e\u73b0\u7b80\u5355\uff0c\u5b66\u4e60\u4e0e\u9884\u6d4b\u7684\u6548\u7387\u90fd\u5f88\u9ad8\uff0c\u662f\u4e00\u79cd\u5e38\u7528\u7684\u751f\u6210\u5b66\u4e60\u65b9\u6cd5 \u5206\u7c7b \u00b6 \u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u8d1d\u53f6\u65af\u5b66\u4e60 \u751f\u6210\u5b66\u4e60\u65b9\u6cd5 \u57fa\u672c\u65b9\u6cd5 \u00b6 \u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u4e3a \\[ T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\},\\quad x\\in \\mathcal{X},y\\in \\mathcal{Y} \\] \u5176\u4e2d\u8f93\u5165\u7a7a\u95f4 \\(\\mathcal{X}\\subseteq R^n\\) \u4e3a \\(n\\) \u7ef4\u7a7a\u95f4\u5411\u91cf\u7684\u96c6\u5408\uff0c\u8f93\u51fa\u7a7a\u95f4\u4e3a\u7c7b\u6807\u8bb0\u96c6\u5408 \\(\\mathcal{Y}=\\{c_1,c_2,\u00b7\u00b7\u00b7,c_K\\}\\) \u4ee4 \\(X\\) \u548c \\(Y\\) \u5206\u522b\u4e3a\u5b9a\u4e49\u5728\u8f93\u5165\u3001\u8f93\u51fa\u7a7a\u95f4\u4e0a\u7684\u968f\u673a\u53d8\u91cf\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u57fa\u4e8e\u8d1d\u53f6\u65af\u5b9a\u7406\u9996\u5148\u5c06\u6700\u7ec8\u76ee\u6807\uff0c\u5373\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\(P(Y=c_k \\mid X=x)\\) \u8f6c\u5316\u4e3a\u6c42\u89e3\u8054\u5408\u6982\u7387\u5206\u5e03 \\(P(X=x,Y=c_k)\\) \\[ \\begin{aligned} P(Y=c_k \\mid X = x) &= \\frac{P(X=x,Y=c_k)}{P(X=x)}\\\\ &=\\frac{P(Y=c_k)P(X=x \\mid Y=c_k)}{\\sum_{Y}P(Y)P(X = x \\mid Y)} \\end{aligned} \\] \u4e3a\u6b64\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u9700\u8981\u9996\u5148\u5b66\u4e60\u5230\u5148\u9a8c\u6982\u7387 \\[ P(Y=c_k),\\quad k=1,2,\u00b7\u00b7\u00b7,K \\] \u4ee5\u53ca\u76f8\u5e94\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\[ \\begin{aligned} P(X=x \\mid Y=c_k)=&(X^{(1)}=x^{(1)},\u00b7\u00b7\u00b7,X^{(n)}=x^{(n)}\\mid Y=c_k)\\\\ &k=1,2,\u00b7\u00b7\u00b7,K \\end{aligned} \\] \u95ee\u9898\u5728\u4e8e\u6734\u7d20\u8d1d\u53f6\u65af\u5bf9\u4e8e\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\(P(X=x \\mid Y=c_k)\\) \u7684\u4f30\u8ba1\uff0c\u5728\u5b9e\u9645\u7684\u6837\u672c\u4e2d\u8be5\u5206\u5e03\u6709\u7740\u6307\u6570\u7ea7\u6570\u91cf\u7684\u53c2\u6570\u9700\u8981\u4f30\u8ba1 \u8bbe \\(X^{(i)}\\) \u53ef\u53d6\u503c\u6709 \\(S_i\\) \u4e2a\uff0c \\(i=1,2,\u00b7\u00b7\u00b7,n\\) \uff0c \\(Y\\) \u7684\u53d6\u503c\u6709 \\(K\\) \u4e2a\uff0c\u5219\u6240\u9700\u5b66\u4e60\u53c2\u6570\u4e2a\u6570\u4e3a \\(K\\prod_{i=1}^{n}S_i\\) \u4e3a\u6b64\u6734\u7d20\u8d1d\u53f6\u65af\u5bf9\u6761\u4ef6\u6982\u7387\u4f5c\u4e86\u4e00\u4e2a\u8f83\u5f3a\u7684\u6761\u4ef6\u72ec\u7acb\u6027\u5047\u8bbe\uff1a \\[ \\begin{aligned} P(X=x \\mid Y=c_k)&=(X^{(1)}=x^{(1)},\u00b7\u00b7\u00b7,X^{(n)}=x^{(n)}\\mid Y=c_k)\\\\ &=\\prod_{i=1}^{n}P(X^{(i)}=x^{(i)} \\mid Y=c_k) \\end{aligned} \\] \u5177\u4f53\u800c\u8a00\uff0c\u8be5\u5047\u8bbe\u8ba4\u4e3a\u7528\u4e8e\u5206\u7c7b\u7684\u7279\u5f81\u5728\u7c7b\u786e\u5b9a\u7684\u524d\u63d0\u4e0b\u662f\u6761\u4ef6\u72ec\u7acb\u7684\u3002\u8fd9\u4e00\u5047\u8bbe\u4f7f\u53c2\u6570\u5b66\u4e60\u53d8\u5f97\u7b80\u5355\uff08\u53c2\u6570\u4e2a\u6570\u53d8\u4e3a\u4e86 \\(K\\sum_{i=1}^{n}S_i\\) \uff09\uff0c\u4f46\u4f1a\u727a\u7272\u4e00\u5b9a\u7684\u51c6\u786e\u7387 \u4e8e\u662f\uff0c\u5728\u5b66\u4e60\u5230\u53c2\u6570\u6a21\u578b\u540e\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u53ef\u8868\u793a\u4e3a\uff1a \\[ y = f(x) = \\mathop{\\arg\\max}\\limits_{c_k}\\frac{P(Y=c_k)\\prod_{i}P(X^{(i)}=x^{(i)} \\mid Y=c_k)}{\\sum_{k}P(Y)\\prod_{i}P(X^{(i)} = x^{(i)} \\mid Y=c_k)} \\] \u56e0\u4e3a\u5bf9\u6240\u6709 \\(c_k\\) \u4e0a\u5f0f\u5206\u6bcd\u90fd\u76f8\u540c\uff0c\u6240\u4ee5\u53ea\u9700\uff1a \\[ y = f(x) = \\mathop{\\arg\\max}\\limits_{c_k}P(Y=c_k)\\prod_{i}P(X^{(i)}=x^{(i)} \\mid Y=c_k) \\] \u53c2\u6570\u4f30\u8ba1 \u00b6 \u5728\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u4e2d\uff0c\u5b66\u4e60\u610f\u5473\u7740\u4f30\u8ba1 \\(P(Y=c_k)\\) \u548c \\(P(X^{(j)}=x^{(j)}\\mid Y=c_k)\\) \u5e38\u89c1\u7684\u4f30\u8ba1\u65b9\u6cd5\u4e3a\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u4e0e\u8d1d\u53f6\u65af\u4f30\u8ba1\uff0c\u540c\u65f6\u57fa\u4e8e\u4e0d\u540c\u7684\u5206\u5e03\u5047\u8bbe\uff08\u5982\u6b63\u6001\u5206\u5e03\uff09\uff0c\u6211\u4eec\u8fd8\u80fd\u8fdb\u4e00\u6b65\u5bf9\u6240\u9700\u6c42\u5f97\u7684\u53c2\u6570\u91cf\u8fdb\u884c\u7b80\u5316\uff0c\u8fd9\u70b9\u5c06\u5728\u540e\u9762\u7684\u4ee3\u7801\u90e8\u5206\u8fdb\u884c\u89e3\u91ca \u6781\u5927\u4f3c\u7136\u4f30\u8ba1 \u00b6 \u5bf9\u5148\u9a8c\u6982\u7387\u7684\u4f30\u8ba1\u4e3a \\[ P(Y=c_k)=\\frac{\\sum_{i=1}^NI(y_i=c_k)}{N},\\quad k=1,2,\u00b7\u00b7\u00b7,K \\] \u5bf9\u6761\u4ef6\u6982\u7387\u7684\u4f30\u8ba1\u4e3a \\[ \\begin{aligned} P(X^{(j)}=a_{jl}\\mid Y=c_k)=\\frac{\\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)}{\\sum_{i=1}^NI(y_i=c_k)}\\\\ j=1,2,\u00b7\u00b7\u00b7,n; \\quad l=1,2,\u00b7\u00b7\u00b7,S_j;\\quad k=1,2,\u00b7\u00b7\u00b7,K \\end{aligned} \\] \u5176\u4e2d\u7b2c \\(j\\) \u4e2a\u7279\u5f81 \\(x^{(i)}\\) \u53ef\u80fd\u53d6\u503c\u7684\u96c6\u5408\u4e3a \\(\\{a_{j1},a_{j2},\u00b7\u00b7\u00b7,a_{jS_j}\\}\\) \u8d1d\u53f6\u65af\u4f30\u8ba1 \u00b6 \u7528\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u53ef\u80fd\u4f1a\u51fa\u73b0\u6240\u8981\u4f30\u8ba1\u7684\u6982\u7387\u503c\u4e3a0\u7684\u60c5\u51b5\u3002\u8fd9\u4f1a\u5f71\u54cd\u5230\u540e\u7eed\u6982\u7387\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u4f7f\u5206\u7c7b\u4ea7\u751f\u504f\u5dee \u4e3a\u6b64\u5e38\u7528\u8d1d\u53f6\u65af\u4f30\u8ba1\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a \\[ P_{\\lambda}(Y=c_k)=\\frac{\\sum_{i=1}^NI(y_i=c_k)+\\lambda}{N+K\\lambda} \\] \\[ P_{\\lambda}(X^{(j)}=a_{jl}\\mid Y=c_k)=\\frac{\\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)+\\lambda}{\\sum_{i=1}^NI(y_i=c_k)+S_j\\lambda} \\] \u7ecf\u8fc7\u4e0a\u5f0f\u64cd\u4f5c\uff0c\u4f9d\u7136\u80fd\u8bc1\u660e\u5176\u4ecd\u4e3a\u4e00\u79cd\u6982\u7387\u5206\u5e03 \u5f53 \\(\\lambda\\) \u53d6 \\(1\\) \u65f6\uff0c\u88ab\u79f0\u4e3a\u62c9\u666e\u62c9\u65af\u5e73\u6ed1\uff08Laplacian smoothing\uff09 \u4ee3\u7801\u5b9e\u73b0 \u00b6 \u8fd9\u91cc\u5b9e\u73b0\u7684\u4e3a GaussianNaiveBayesClassifier 1 \uff0c\u5177\u4f53\u7684\uff0c\u5176\u5bf9 \\(P(X^{(j)}=x^{(j)}\\mid Y=c_k)\\) \u7684\u5047\u8bbe\u4e3a\u6b63\u6001\u5206\u5e03\uff1a \\[ P(X^{(j)}=x^{(j)}\\mid Y=c_k)=\\frac{1}{\\sqrt{2 \\pi \\sigma_{c_k}^2}} \\exp \\left(-\\frac{\\left(x_i-\\mu_{c_k}\\right)^2}{2 \\sigma_{c_k}^2}\\right) \\] \u53ef\u4ee5\u770b\u5230\u57fa\u4e8e\u5982\u4e0a\u5047\u8bbe\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u51fa\u6781\u5c11\u7684\u53c2\u6570\uff08 \\(\\sigma_{c_k}\\) \uff0c \\(\\mu_{c_k}\\) \uff09\u4fbf\u80fd\u5b8c\u6210\u5b66\u4e60 Python class GaussianNBClassifier : def __init__ ( self , eps = 1e-6 ): self . labels = None self . hyperparameters = { \"eps\" : eps } self . parameters = { \"mean\" : None , # shape: (K, M) \"sigma\" : None , # shape: (K, M) \"prior\" : None , # shape: (K,) } def fit ( self , X , y ): P = self . parameters H = self . hyperparameters self . labels = np . unique ( y ) K = len ( self . labels ) N , M = X . shape P [ \"mean\" ] = np . zeros (( K , M )) P [ \"sigma\" ] = np . zeros (( K , M )) P [ \"prior\" ] = np . zeros (( K ,)) for i , c in enumerate ( self . labels ): X_c = X [ y == c , :] P [ \"mean\" ][ i , :] = np . mean ( X_c , axis = 0 ) P [ \"sigma\" ][ i , :] = np . var ( X_c , axis = 0 ) + H [ \"eps\" ] P [ \"prior\" ][ i ] = X_c . shape [ 0 ] / N return self def predict ( self , X ): return self . labels [ self . _log_posterior ( X ) . argmax ( axis = 1 )] def _log_posterior ( self , X ): K = len ( self . labels ) log_posterior = np . zeros (( X . shape [ 0 ], K )) for i in range ( K ): log_posterior [:, i ] = self . _log_class_posterior ( X , i ) return log_posterior def _log_class_posterior ( self , X , class_idx ): P = self . parameters mu = P [ \"mean\" ][ class_idx ] prior = P [ \"prior\" ][ class_idx ] sigsq = P [ \"sigma\" ][ class_idx ] log_likelihood = - 0.5 * np . sum ( np . log ( 2 * np . pi * sigsq )) log_likelihood -= 0.5 * np . sum ((( X - mu ) ** 2 ) / sigsq , axis = 1 ) return log_likelihood + np . log ( prior ) \u5b8c\u6574\u4ee3\u7801\u5df2\u4e0a\u4f20\u81f3 Repo \u53c2\u8003\u8d44\u6599 \u00b6 \u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\uff08\u7b2c\u4e8c\u7248\uff09\u300b\u674e\u822a https://scikit-learn.org/stable/modules/naive_bayes.html#gaussian-naive-bayes \u21a9","title":"\u6734\u7d20\u8d1d\u53f6\u65af"},{"location":"ai/ch1_4/#_1","text":"\u6734\u7d20\u8d1d\u53f6\u65af\uff08Naive Bayes\uff09\u6cd5\u662f\u57fa\u4e8e\u8d1d\u53f6\u65af\u5b9a\u7406\u548c\u7279\u5f81\u6761\u4ef6\u72ec\u7acb\u5047\u8bbe\u7684\u5206\u7c7b\u65b9\u6cd5\uff0c\u5b9e\u73b0\u7b80\u5355\uff0c\u5b66\u4e60\u4e0e\u9884\u6d4b\u7684\u6548\u7387\u90fd\u5f88\u9ad8\uff0c\u662f\u4e00\u79cd\u5e38\u7528\u7684\u751f\u6210\u5b66\u4e60\u65b9\u6cd5","title":"\u6734\u7d20\u8d1d\u53f6\u65af"},{"location":"ai/ch1_4/#_2","text":"\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u8d1d\u53f6\u65af\u5b66\u4e60 \u751f\u6210\u5b66\u4e60\u65b9\u6cd5","title":"\u5206\u7c7b"},{"location":"ai/ch1_4/#_3","text":"\u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u4e3a \\[ T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\},\\quad x\\in \\mathcal{X},y\\in \\mathcal{Y} \\] \u5176\u4e2d\u8f93\u5165\u7a7a\u95f4 \\(\\mathcal{X}\\subseteq R^n\\) \u4e3a \\(n\\) \u7ef4\u7a7a\u95f4\u5411\u91cf\u7684\u96c6\u5408\uff0c\u8f93\u51fa\u7a7a\u95f4\u4e3a\u7c7b\u6807\u8bb0\u96c6\u5408 \\(\\mathcal{Y}=\\{c_1,c_2,\u00b7\u00b7\u00b7,c_K\\}\\) \u4ee4 \\(X\\) \u548c \\(Y\\) \u5206\u522b\u4e3a\u5b9a\u4e49\u5728\u8f93\u5165\u3001\u8f93\u51fa\u7a7a\u95f4\u4e0a\u7684\u968f\u673a\u53d8\u91cf\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u57fa\u4e8e\u8d1d\u53f6\u65af\u5b9a\u7406\u9996\u5148\u5c06\u6700\u7ec8\u76ee\u6807\uff0c\u5373\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\(P(Y=c_k \\mid X=x)\\) \u8f6c\u5316\u4e3a\u6c42\u89e3\u8054\u5408\u6982\u7387\u5206\u5e03 \\(P(X=x,Y=c_k)\\) \\[ \\begin{aligned} P(Y=c_k \\mid X = x) &= \\frac{P(X=x,Y=c_k)}{P(X=x)}\\\\ &=\\frac{P(Y=c_k)P(X=x \\mid Y=c_k)}{\\sum_{Y}P(Y)P(X = x \\mid Y)} \\end{aligned} \\] \u4e3a\u6b64\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u9700\u8981\u9996\u5148\u5b66\u4e60\u5230\u5148\u9a8c\u6982\u7387 \\[ P(Y=c_k),\\quad k=1,2,\u00b7\u00b7\u00b7,K \\] \u4ee5\u53ca\u76f8\u5e94\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\[ \\begin{aligned} P(X=x \\mid Y=c_k)=&(X^{(1)}=x^{(1)},\u00b7\u00b7\u00b7,X^{(n)}=x^{(n)}\\mid Y=c_k)\\\\ &k=1,2,\u00b7\u00b7\u00b7,K \\end{aligned} \\] \u95ee\u9898\u5728\u4e8e\u6734\u7d20\u8d1d\u53f6\u65af\u5bf9\u4e8e\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\(P(X=x \\mid Y=c_k)\\) \u7684\u4f30\u8ba1\uff0c\u5728\u5b9e\u9645\u7684\u6837\u672c\u4e2d\u8be5\u5206\u5e03\u6709\u7740\u6307\u6570\u7ea7\u6570\u91cf\u7684\u53c2\u6570\u9700\u8981\u4f30\u8ba1 \u8bbe \\(X^{(i)}\\) \u53ef\u53d6\u503c\u6709 \\(S_i\\) \u4e2a\uff0c \\(i=1,2,\u00b7\u00b7\u00b7,n\\) \uff0c \\(Y\\) \u7684\u53d6\u503c\u6709 \\(K\\) \u4e2a\uff0c\u5219\u6240\u9700\u5b66\u4e60\u53c2\u6570\u4e2a\u6570\u4e3a \\(K\\prod_{i=1}^{n}S_i\\) \u4e3a\u6b64\u6734\u7d20\u8d1d\u53f6\u65af\u5bf9\u6761\u4ef6\u6982\u7387\u4f5c\u4e86\u4e00\u4e2a\u8f83\u5f3a\u7684\u6761\u4ef6\u72ec\u7acb\u6027\u5047\u8bbe\uff1a \\[ \\begin{aligned} P(X=x \\mid Y=c_k)&=(X^{(1)}=x^{(1)},\u00b7\u00b7\u00b7,X^{(n)}=x^{(n)}\\mid Y=c_k)\\\\ &=\\prod_{i=1}^{n}P(X^{(i)}=x^{(i)} \\mid Y=c_k) \\end{aligned} \\] \u5177\u4f53\u800c\u8a00\uff0c\u8be5\u5047\u8bbe\u8ba4\u4e3a\u7528\u4e8e\u5206\u7c7b\u7684\u7279\u5f81\u5728\u7c7b\u786e\u5b9a\u7684\u524d\u63d0\u4e0b\u662f\u6761\u4ef6\u72ec\u7acb\u7684\u3002\u8fd9\u4e00\u5047\u8bbe\u4f7f\u53c2\u6570\u5b66\u4e60\u53d8\u5f97\u7b80\u5355\uff08\u53c2\u6570\u4e2a\u6570\u53d8\u4e3a\u4e86 \\(K\\sum_{i=1}^{n}S_i\\) \uff09\uff0c\u4f46\u4f1a\u727a\u7272\u4e00\u5b9a\u7684\u51c6\u786e\u7387 \u4e8e\u662f\uff0c\u5728\u5b66\u4e60\u5230\u53c2\u6570\u6a21\u578b\u540e\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u53ef\u8868\u793a\u4e3a\uff1a \\[ y = f(x) = \\mathop{\\arg\\max}\\limits_{c_k}\\frac{P(Y=c_k)\\prod_{i}P(X^{(i)}=x^{(i)} \\mid Y=c_k)}{\\sum_{k}P(Y)\\prod_{i}P(X^{(i)} = x^{(i)} \\mid Y=c_k)} \\] \u56e0\u4e3a\u5bf9\u6240\u6709 \\(c_k\\) \u4e0a\u5f0f\u5206\u6bcd\u90fd\u76f8\u540c\uff0c\u6240\u4ee5\u53ea\u9700\uff1a \\[ y = f(x) = \\mathop{\\arg\\max}\\limits_{c_k}P(Y=c_k)\\prod_{i}P(X^{(i)}=x^{(i)} \\mid Y=c_k) \\]","title":"\u57fa\u672c\u65b9\u6cd5"},{"location":"ai/ch1_4/#_4","text":"\u5728\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u4e2d\uff0c\u5b66\u4e60\u610f\u5473\u7740\u4f30\u8ba1 \\(P(Y=c_k)\\) \u548c \\(P(X^{(j)}=x^{(j)}\\mid Y=c_k)\\) \u5e38\u89c1\u7684\u4f30\u8ba1\u65b9\u6cd5\u4e3a\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u4e0e\u8d1d\u53f6\u65af\u4f30\u8ba1\uff0c\u540c\u65f6\u57fa\u4e8e\u4e0d\u540c\u7684\u5206\u5e03\u5047\u8bbe\uff08\u5982\u6b63\u6001\u5206\u5e03\uff09\uff0c\u6211\u4eec\u8fd8\u80fd\u8fdb\u4e00\u6b65\u5bf9\u6240\u9700\u6c42\u5f97\u7684\u53c2\u6570\u91cf\u8fdb\u884c\u7b80\u5316\uff0c\u8fd9\u70b9\u5c06\u5728\u540e\u9762\u7684\u4ee3\u7801\u90e8\u5206\u8fdb\u884c\u89e3\u91ca","title":"\u53c2\u6570\u4f30\u8ba1"},{"location":"ai/ch1_4/#_5","text":"\u5bf9\u5148\u9a8c\u6982\u7387\u7684\u4f30\u8ba1\u4e3a \\[ P(Y=c_k)=\\frac{\\sum_{i=1}^NI(y_i=c_k)}{N},\\quad k=1,2,\u00b7\u00b7\u00b7,K \\] \u5bf9\u6761\u4ef6\u6982\u7387\u7684\u4f30\u8ba1\u4e3a \\[ \\begin{aligned} P(X^{(j)}=a_{jl}\\mid Y=c_k)=\\frac{\\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)}{\\sum_{i=1}^NI(y_i=c_k)}\\\\ j=1,2,\u00b7\u00b7\u00b7,n; \\quad l=1,2,\u00b7\u00b7\u00b7,S_j;\\quad k=1,2,\u00b7\u00b7\u00b7,K \\end{aligned} \\] \u5176\u4e2d\u7b2c \\(j\\) \u4e2a\u7279\u5f81 \\(x^{(i)}\\) \u53ef\u80fd\u53d6\u503c\u7684\u96c6\u5408\u4e3a \\(\\{a_{j1},a_{j2},\u00b7\u00b7\u00b7,a_{jS_j}\\}\\)","title":"\u6781\u5927\u4f3c\u7136\u4f30\u8ba1"},{"location":"ai/ch1_4/#_6","text":"\u7528\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u53ef\u80fd\u4f1a\u51fa\u73b0\u6240\u8981\u4f30\u8ba1\u7684\u6982\u7387\u503c\u4e3a0\u7684\u60c5\u51b5\u3002\u8fd9\u4f1a\u5f71\u54cd\u5230\u540e\u7eed\u6982\u7387\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u4f7f\u5206\u7c7b\u4ea7\u751f\u504f\u5dee \u4e3a\u6b64\u5e38\u7528\u8d1d\u53f6\u65af\u4f30\u8ba1\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a \\[ P_{\\lambda}(Y=c_k)=\\frac{\\sum_{i=1}^NI(y_i=c_k)+\\lambda}{N+K\\lambda} \\] \\[ P_{\\lambda}(X^{(j)}=a_{jl}\\mid Y=c_k)=\\frac{\\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)+\\lambda}{\\sum_{i=1}^NI(y_i=c_k)+S_j\\lambda} \\] \u7ecf\u8fc7\u4e0a\u5f0f\u64cd\u4f5c\uff0c\u4f9d\u7136\u80fd\u8bc1\u660e\u5176\u4ecd\u4e3a\u4e00\u79cd\u6982\u7387\u5206\u5e03 \u5f53 \\(\\lambda\\) \u53d6 \\(1\\) \u65f6\uff0c\u88ab\u79f0\u4e3a\u62c9\u666e\u62c9\u65af\u5e73\u6ed1\uff08Laplacian smoothing\uff09","title":"\u8d1d\u53f6\u65af\u4f30\u8ba1"},{"location":"ai/ch1_4/#_7","text":"\u8fd9\u91cc\u5b9e\u73b0\u7684\u4e3a GaussianNaiveBayesClassifier 1 \uff0c\u5177\u4f53\u7684\uff0c\u5176\u5bf9 \\(P(X^{(j)}=x^{(j)}\\mid Y=c_k)\\) \u7684\u5047\u8bbe\u4e3a\u6b63\u6001\u5206\u5e03\uff1a \\[ P(X^{(j)}=x^{(j)}\\mid Y=c_k)=\\frac{1}{\\sqrt{2 \\pi \\sigma_{c_k}^2}} \\exp \\left(-\\frac{\\left(x_i-\\mu_{c_k}\\right)^2}{2 \\sigma_{c_k}^2}\\right) \\] \u53ef\u4ee5\u770b\u5230\u57fa\u4e8e\u5982\u4e0a\u5047\u8bbe\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u51fa\u6781\u5c11\u7684\u53c2\u6570\uff08 \\(\\sigma_{c_k}\\) \uff0c \\(\\mu_{c_k}\\) \uff09\u4fbf\u80fd\u5b8c\u6210\u5b66\u4e60 Python class GaussianNBClassifier : def __init__ ( self , eps = 1e-6 ): self . labels = None self . hyperparameters = { \"eps\" : eps } self . parameters = { \"mean\" : None , # shape: (K, M) \"sigma\" : None , # shape: (K, M) \"prior\" : None , # shape: (K,) } def fit ( self , X , y ): P = self . parameters H = self . hyperparameters self . labels = np . unique ( y ) K = len ( self . labels ) N , M = X . shape P [ \"mean\" ] = np . zeros (( K , M )) P [ \"sigma\" ] = np . zeros (( K , M )) P [ \"prior\" ] = np . zeros (( K ,)) for i , c in enumerate ( self . labels ): X_c = X [ y == c , :] P [ \"mean\" ][ i , :] = np . mean ( X_c , axis = 0 ) P [ \"sigma\" ][ i , :] = np . var ( X_c , axis = 0 ) + H [ \"eps\" ] P [ \"prior\" ][ i ] = X_c . shape [ 0 ] / N return self def predict ( self , X ): return self . labels [ self . _log_posterior ( X ) . argmax ( axis = 1 )] def _log_posterior ( self , X ): K = len ( self . labels ) log_posterior = np . zeros (( X . shape [ 0 ], K )) for i in range ( K ): log_posterior [:, i ] = self . _log_class_posterior ( X , i ) return log_posterior def _log_class_posterior ( self , X , class_idx ): P = self . parameters mu = P [ \"mean\" ][ class_idx ] prior = P [ \"prior\" ][ class_idx ] sigsq = P [ \"sigma\" ][ class_idx ] log_likelihood = - 0.5 * np . sum ( np . log ( 2 * np . pi * sigsq )) log_likelihood -= 0.5 * np . sum ((( X - mu ) ** 2 ) / sigsq , axis = 1 ) return log_likelihood + np . log ( prior ) \u5b8c\u6574\u4ee3\u7801\u5df2\u4e0a\u4f20\u81f3 Repo","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"ai/ch1_4/#_8","text":"\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\uff08\u7b2c\u4e8c\u7248\uff09\u300b\u674e\u822a https://scikit-learn.org/stable/modules/naive_bayes.html#gaussian-naive-bayes \u21a9","title":"\u53c2\u8003\u8d44\u6599"},{"location":"ai/ch1_7/","text":"SVM \u00b6 \u652f\u6301\u5411\u91cf\u673a\uff08support vector machines\uff0cSVM\uff09\u662f\u4e00\u79cd\u4e8c\u5206\u7c7b\u6a21\u578b\u3002\u5176\u57fa\u672c\u6a21\u578b\u662f\u5b9a\u4e49\u5728\u7279\u5f81\u7a7a\u95f4\u4e0a\u95f4\u9694\u6700\u5927\u7684\u7ebf\u6027\u5206\u7c7b\u5668\uff0c\u95f4\u9694\u6700\u5927\u4f7f\u5b83\u533a\u522b\u4e8e\u611f\u77e5\u673a SVM\u8fd8\u5305\u62ec\u6838\u6280\u5de7\uff0c\u8fd9\u4f7f\u5b83\u80fd\u591f\u5bf9\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u6570\u636e\u96c6\u8fdb\u884c\u5206\u7c7b SVM\u7684\u5b66\u4e60\u7b56\u7565\u4e3a\u95f4\u9694\u6700\u5927\u5316\uff0c\u53ef\u5f62\u5f0f\u5316\u4e3a\u4e00\u4e2a\u6c42\u89e3\u51f8\u4e8c\u6b21\u89c4\u5212\u7684\u95ee\u9898\uff0c\u4e5f\u7b49\u4ef7\u4e8e\u6b63\u5219\u5316\u7684\u5408\u9875\u635f\u5931\u51fd\u6570\u6700\u5c0f\u5316\u95ee\u9898\u3002\u5176\u5b66\u4e60\u7b97\u6cd5\u662f\u6c42\u89e3\u51f8\u4e8c\u6b21\u89c4\u5212\u7684\u6700\u4f18\u5316\u7b97\u6cd5 \u5206\u7c7b \u00b6 \u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u975e\u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u5224\u522b\u5b66\u4e60\u65b9\u6cd5 \u4e8c\u5206\u7c7b\u65b9\u6cd5 \u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a | \u786c\u95f4\u9694\u6700\u5927\u5316 \u00b6 \u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a \u00b6 \u8bbe\u8bad\u7ec3\u6570\u636e\u96c6 \\(T\\) \u662f\u7ebf\u6027\u53ef\u5206\u7684 \\[ T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\},\\quad x\\in \\mathcal{X},y\\in \\mathcal{Y} \\] \u5176\u4e2d \\(\\mathcal{X}\\subseteq R^n\\) \uff0c \\(\\mathcal{Y}=\\{+1,-1\\}\\) \u5bf9\u4e8e\u611f\u77e5\u673a\uff0c\u53ef\u5229\u7528\u8bef\u5206\u7c7b\u6700\u5c0f\u7684\u7b56\u7565\uff0c\u6c42\u5f97\u5206\u79bb\u8d85\u5e73\u9762\uff0c\u89e3\u6709\u65e0\u7a77\u591a\u4e2a\uff1b\u5bf9\u4e8e\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a\uff0c\u53ef\u5229\u7528\u786c\u95f4\u9694\u6700\u5927\u5316\u7684\u7b56\u7565\uff0c\u6c42\u5f97\u5206\u79bb\u8d85\u5e73\u9762\uff0c\u89e3\u662f\u552f\u4e00\u7684 \u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a \u00b6 \u7ed9\u5b9a\u7ebf\u6027\u53ef\u5206\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u901a\u8fc7\u95f4\u9694\u6700\u5927\u5316\u6216\u7b49\u4ef7\u6c42\u89e3\u76f8\u5e94\u7684\u51f8\u4e8c\u6b21\u89c4\u5212\u95ee\u9898\u5b66\u4e60\u5f97\u5230\u7684\u5206\u79bb\u8d85\u5e73\u9762\u4e3a \\[ w^* \\cdot x + b =0 \\] \u5df2\u7ecf\u76f8\u5e94\u7684\u51b3\u7b56\u51fd\u6570 \\[ f(x)=sgn(w^* \\cdot x + b^*) \\] \u79f0\u4e3a\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a","title":"SVM(\u672a\u5b8c\u6210)"},{"location":"ai/ch1_7/#svm","text":"\u652f\u6301\u5411\u91cf\u673a\uff08support vector machines\uff0cSVM\uff09\u662f\u4e00\u79cd\u4e8c\u5206\u7c7b\u6a21\u578b\u3002\u5176\u57fa\u672c\u6a21\u578b\u662f\u5b9a\u4e49\u5728\u7279\u5f81\u7a7a\u95f4\u4e0a\u95f4\u9694\u6700\u5927\u7684\u7ebf\u6027\u5206\u7c7b\u5668\uff0c\u95f4\u9694\u6700\u5927\u4f7f\u5b83\u533a\u522b\u4e8e\u611f\u77e5\u673a SVM\u8fd8\u5305\u62ec\u6838\u6280\u5de7\uff0c\u8fd9\u4f7f\u5b83\u80fd\u591f\u5bf9\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u6570\u636e\u96c6\u8fdb\u884c\u5206\u7c7b SVM\u7684\u5b66\u4e60\u7b56\u7565\u4e3a\u95f4\u9694\u6700\u5927\u5316\uff0c\u53ef\u5f62\u5f0f\u5316\u4e3a\u4e00\u4e2a\u6c42\u89e3\u51f8\u4e8c\u6b21\u89c4\u5212\u7684\u95ee\u9898\uff0c\u4e5f\u7b49\u4ef7\u4e8e\u6b63\u5219\u5316\u7684\u5408\u9875\u635f\u5931\u51fd\u6570\u6700\u5c0f\u5316\u95ee\u9898\u3002\u5176\u5b66\u4e60\u7b97\u6cd5\u662f\u6c42\u89e3\u51f8\u4e8c\u6b21\u89c4\u5212\u7684\u6700\u4f18\u5316\u7b97\u6cd5","title":"SVM"},{"location":"ai/ch1_7/#_1","text":"\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u975e\u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u5224\u522b\u5b66\u4e60\u65b9\u6cd5 \u4e8c\u5206\u7c7b\u65b9\u6cd5","title":"\u5206\u7c7b"},{"location":"ai/ch1_7/#_2","text":"","title":"\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a | \u786c\u95f4\u9694\u6700\u5927\u5316"},{"location":"ai/ch1_7/#_3","text":"\u8bbe\u8bad\u7ec3\u6570\u636e\u96c6 \\(T\\) \u662f\u7ebf\u6027\u53ef\u5206\u7684 \\[ T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\},\\quad x\\in \\mathcal{X},y\\in \\mathcal{Y} \\] \u5176\u4e2d \\(\\mathcal{X}\\subseteq R^n\\) \uff0c \\(\\mathcal{Y}=\\{+1,-1\\}\\) \u5bf9\u4e8e\u611f\u77e5\u673a\uff0c\u53ef\u5229\u7528\u8bef\u5206\u7c7b\u6700\u5c0f\u7684\u7b56\u7565\uff0c\u6c42\u5f97\u5206\u79bb\u8d85\u5e73\u9762\uff0c\u89e3\u6709\u65e0\u7a77\u591a\u4e2a\uff1b\u5bf9\u4e8e\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a\uff0c\u53ef\u5229\u7528\u786c\u95f4\u9694\u6700\u5927\u5316\u7684\u7b56\u7565\uff0c\u6c42\u5f97\u5206\u79bb\u8d85\u5e73\u9762\uff0c\u89e3\u662f\u552f\u4e00\u7684","title":"\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a"},{"location":"ai/ch1_7/#_4","text":"\u7ed9\u5b9a\u7ebf\u6027\u53ef\u5206\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u901a\u8fc7\u95f4\u9694\u6700\u5927\u5316\u6216\u7b49\u4ef7\u6c42\u89e3\u76f8\u5e94\u7684\u51f8\u4e8c\u6b21\u89c4\u5212\u95ee\u9898\u5b66\u4e60\u5f97\u5230\u7684\u5206\u79bb\u8d85\u5e73\u9762\u4e3a \\[ w^* \\cdot x + b =0 \\] \u5df2\u7ecf\u76f8\u5e94\u7684\u51b3\u7b56\u51fd\u6570 \\[ f(x)=sgn(w^* \\cdot x + b^*) \\] \u79f0\u4e3a\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a","title":"\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a"},{"location":"ai/ch2_1/","text":"\u57fa\u4e8eSLIC\u7b97\u6cd5\u7684\u50cf\u7d20\u5316\u98ce\u683c\u751f\u6210\u5668 \u00b6 \u5b9e\u73b0\u8d85\u50cf\u7d20\u9886\u57df\u7ecf\u5178\u7b97\u6cd5SLIC\uff0c\u9879\u76ee\u5df2\u653e\u81f3 Github \u8d85\u50cf\u7d20\uff08SuperPixel\uff09 \u00b6 \u8d85\u50cf\u7d20\u662f 2003 \u5e74 Xiaofeng Ren 1 \u63d0\u51fa\u548c\u53d1\u5c55\u8d77\u6765\u7684\u56fe\u50cf\u5206\u5272\u6280\u672f\uff0c\u662f\u6307\u5177\u6709\u76f8\u4f3c\u7eb9\u7406\u3001\u989c\u8272\u3001\u4eae\u5ea6\u7b49\u7279\u5f81\u7684\u76f8\u90bb\u50cf\u7d20\u6784\u6210\u7684\u6709\u4e00\u5b9a\u89c6\u89c9\u610f\u4e49\u7684\u4e0d\u89c4\u5219\u50cf\u7d20\u5757 \u5b83\u5229\u7528\u50cf\u7d20\u4e4b\u95f4\u7279\u5f81\u7684\u76f8\u4f3c\u6027\u5c06\u50cf\u7d20\u5206\u7ec4\uff0c\u7528\u5c11\u91cf\u7684\u8d85\u50cf\u7d20\u4ee3\u66ff\u5927\u91cf\u7684\u50cf\u7d20\u6765\u8868\u8fbe\u56fe\u7247\u7279\u5f81\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u964d\u4f4e\u4e86\u56fe\u50cf\u540e\u5904\u7406\u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u901a\u5e38\u4f5c\u4e3a\u5206\u5272\u7b97\u6cd5\u7684\u9884\u5904\u7406\u6b65\u9aa4 \u7b80\u5355\u7ebf\u6027\u8fed\u4ee3\u805a\u7c7b\uff08SLIC\uff09 \u00b6 \u8d85\u50cf\u7d20\u70b9\u5206\u5272\u7684\u65b9\u6cd5\u5305\u62ec\u4e86\u63d0\u53d6\u8f6e\u5ed3\u3001\u805a\u7c7b\u3001\u68af\u5ea6\u4e0a\u5347\u7b49\u591a\u79cd SLIC 2 \u662f\u57fa\u4e8eK-means\u805a\u7c7b\u7684\u8d85\u50cf\u7d20\u5206\u5272\u7b97\u6cd5\uff0c\u5177\u6709\u7b80\u5355\u7075\u6d3b\u3001\u6548\u679c\u597d\u3001\u5904\u7406\u901f\u5ea6\u5feb\u7b49\u4f18\u52bf 1. \u56fe\u50cf\u9884\u5904\u7406 \u00b6 \u5c06\u56fe\u50cf\u4ece RGB \u989c\u8272\u7a7a\u95f4\u8f6c\u6362\u5230 CIE-Lab \u989c\u8272\u7a7a\u95f4\uff0cLab \u989c\u8272\u7a7a\u95f4\u66f4\u7b26\u5408\u4eba\u7c7b\u5bf9\u989c\u8272\u7684\u89c6\u89c9\u611f\u77e5\u3002\u8fd9\u4e2a\u7a7a\u95f4\u91cc\u7684\u8ddd\u79bb\u80fd\u53cd\u6620\u4eba\u611f\u89c9\u5230\u7684\u989c\u8272\u5dee\u522b\uff0c\u76f8\u5173\u8ba1\u7b97\u66f4\u4e3a\u51c6\u786e 2. \u521d\u59cb\u5316\u805a\u7c7b\u4e2d\u5fc3 \u00b6 \u6839\u636e\u53c2\u6570\u786e\u5b9a\u8d85\u50cf\u7d20\u7684\u6570\u76ee\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5212\u5206\u4e3a\u591a\u5c11\u4e2a\u533a\u57df\u3002\u5047\u8bbe\u56fe\u7247\u6709 \\(N\\) \u4e2a\u50cf\u7d20\u70b9\uff0c\u9884\u8ba1\u5206\u5272\u4e3a \\(K\\) \u4e2a\u8d85\u50cf\u7d20\uff0c\u6bcf\u4e2a\u8d85\u50cf\u7d20\u5927\u5c0f\u4e3a \\(N/K\\) \uff0c\u76f8\u90bb\u4e2d\u5fc3\u8ddd\u79bb\u4e3a \\(S=Sqr(N/K)\\) \uff0c\u5f97\u5230 \\(K\\) \u4e2a\u805a\u7c7b\u5750\u6807 3. \u4f18\u5316\u521d\u59cb\u805a\u7c7b\u4e2d\u5fc3 \u00b6 \u805a\u7c7b\u4e2d\u5fc3\u7684 \\(3\\times3\\) \u90bb\u57df\u5185\u9009\u62e9\u68af\u5ea6\u6700\u5c0f\u7684\u50cf\u7d20\u70b9\u4f5c\u4e3a\u65b0\u7684\u805a\u7c7b\u4e2d\u5fc3 \u628a\u56fe\u50cf\u770b\u6210\u4e8c\u7ef4\u79bb\u6563\u51fd\u6570\uff0c\u68af\u5ea6\u4e5f\u5c31\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u6c42\u5bfc\uff0c\u5f53\u76f8\u90bb\u50cf\u7d20\u503c\u6709\u53d8\u5316\u5c31\u4f1a\u5b58\u5728\u68af\u5ea6\uff0c\u800c\u5728\u8fb9\u7f18\u4e0a\u7684\u50cf\u7d20\u70b9\u7684\u68af\u5ea6\u6700\u5927\u3002\u5c06\u805a\u7c7b\u4e2d\u5fc3\u632a\u5230\u68af\u5ea6\u6700\u5c0f\u7684\u5730\u65b9\u53ef\u4ee5\u907f\u514d\u5176\u843d\u5230\u8fb9\u7f18\u8f6e\u5ed3\u4e0a\uff0c\u5f71\u54cd\u805a\u7c7b\u6548\u679c \u79bb\u6563\u68af\u5ea6\u7684\u68af\u5ea6\u8ba1\u7b97\u8003\u8651\u5230\u8ba1\u7b97\u91cf\uff0c\u4e00\u822c\u4f1a\u7b80\u5316\u4e3a\u7528\u7edd\u5bf9\u503c\u6765\u8fd1\u4f3c\u5e73\u65b9\u548c\u5e73\u65b9\u6839\u7684\u64cd\u4f5c 4. \u8ba1\u7b97\u50cf\u7d20\u70b9\u4e0e\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb \u00b6 \u5728\u805a\u7c7b\u4e2d\u5fc3\u8ddd\u79bbS\u7684\u533a\u57df\u5185 \\(2S\\times2S\\) \u7684\u90bb\u57df\u5185\u8ba1\u7b97\u50cf\u7d20\u70b9\u4e0e\u6bcf\u4e2a\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb \u4f7f\u7528\u7684\u662f\u6b27\u5f0f\u8ddd\u79bb\uff0c\u603b\u8ddd\u79bb \\(D\\) \u7531 \\(d_c\\) \u989c\u8272\u8ddd\u79bb\u4e0e \\(d_s\\) \u7a7a\u95f4\u8ddd\u79bb\u4e24\u90e8\u5206\u7ec4\u6210\uff1a \\[ \\begin{aligned} \\mathrm{d}_c &=\\sqrt{\\left(l_j-l_i\\right)^2+\\left(a_j-a_i\\right)^2+\\left(b_j-b_i\\right)^2} \\\\ \\mathrm{~d}_s &=\\sqrt{\\left(x_j-x_k\\right)^2+\\left(y_j-y_k\\right)^2} \\\\ D &=\\sqrt{\\left(\\frac{\\mathrm{d}_c}{N_c}\\right)^2+\\left(\\frac{\\mathrm{d}_s}{N_s}\\right)^2} \\end{aligned} \\] \u5982\u679c\u76f4\u63a5\u5c06 \\(l\\) \uff0c \\(a\\) \uff0c \\(b\\) \uff0c \\(x\\) \uff0c \\(y\\) \u62fc\u63a5\u6210\u4e00\u4e2a\u77e2\u91cf\u8ba1\u7b97\u8ddd\u79bb\uff0c\u5f53\u8d85\u50cf\u7d20\u7684\u5927\u5c0f\u53d8\u5316\u65f6\uff0c \\(x\\) \uff0c \\(y\\) \u7684\u503c\u53ef\u4ee5\u53d6\u5230\u975e\u5e38\u5927 \uff0c\u6bd4\u5982\u4e00\u5f20 \\(1000\\times1000\\) \u7684\u56fe\uff0c\u7a7a\u95f4\u8ddd\u79bb\u53ef\u4ee5\u8fbe\u5230 \\(1000\\times Sqr(2)\\) \uff0c\u800c\u989c\u8272\u8ddd\u79bb\u6700\u5927\u4ec5 \\(10\\times Sqr(2)\\) \uff0c\u5bfc\u81f4\u6700\u7ec8\u8ba1\u7b97\u5f97\u5230\u7684\u8ddd\u79bb\u503c\u4e2d\uff0c\u7a7a\u95f4\u8ddd\u79bb \\(d_s\\) \u6743\u91cd\u5360\u6bd4\u8fc7\u5927 \u6240\u4ee5\u9700\u8981\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u9664\u4ee5\u6700\u5927\u503c\u5373\u8d85\u50cf\u7d20\u70b9\u7684\u521d\u59cb\u5bbd\u5ea6 \\(S\\) \uff0c\u5c06\u503c\u6620\u5c04\u5230 \\([0,1]\\) \u800c\u989c\u8272\u7a7a\u95f4\u8ddd\u79bb\u4e5f\u4f1a\u7531\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c \\(m\\) \u6765\u8c03\u8282\u989c\u8272\u8ddd\u79bb\u4e0e\u7a7a\u95f4\u8ddd\u79bb\u7684\u5f71\u54cd\u6743\u91cd\uff0c \\(m\\) \u53d6\u503c\u8303\u56f4\u4e3a \\([1,40]\\) \\[ \\begin{aligned} D^{\\prime} &=\\sqrt{\\left(\\frac{\\mathrm{d}_c}{m}\\right)^2+\\left(\\frac{\\mathrm{d}_s}{S}\\right)^2} \\end{aligned} \\] \u5f53 \\(m\\) \u8d8a\u5927\uff0c\u989c\u8272\u7a7a\u95f4\u9664\u4ee5 \\(m\\) \u540e\u7684\u503c\u8d8a\u5c0f\uff0c\u5373\u7a7a\u95f4\u8ddd\u79bb\u7684\u6743\u91cd\u8d8a\u5927\uff0c\u751f\u6210\u7684\u50cf\u7d20\u4f1a\u66f4\u4e3a\u5f62\u72b6\u89c4\u5219\uff0c\u5f53 \\(m\\) \u8d8a\u5c0f\uff0c\u989c\u8272\u8ddd\u79bb\u6743\u91cd\u66f4\u5927\uff0c\u8d85\u50cf\u7d20\u4f1a\u5728\u8fb9\u7f18\u66f4\u4e3a\u7d27\u51d1\uff0c\u800c\u5f62\u72b6\u5927\u5c0f\u8f83\u4e3a\u4e0d\u89c4\u5219 \u603b\u7ed3 \u00b6 SLIC\u57fa\u4e8eK-means\uff0c\u4e3b\u8981\u505a\u4e86\u4e24\u70b9\u4f18\u5316\uff1a \u8c03\u6574\u4e86 \u641c\u7d22\u8303\u56f4 \uff0c\u7531\u5168\u5c40\u7f29\u5c0f\u4e3a \\(2S \\times 2S\\) \u7a7a\u95f4 \u8c03\u6574\u4e86 \u8ddd\u79bb\u5b9a\u4e49 \uff0c\u9009\u7528CIE-Lab\u8272\u57df\uff0c\u5e76\u5f15\u5165\u4e86\u8d85\u53c2\u6570\u4ee5\u8c03\u8282\u8272\u5f69\u8ddd\u79bb\u4e0e\u7a7a\u95f4\u8ddd\u79bb\u7684\u6743\u91cd 5. \u50cf\u7d20\u70b9\u5206\u7c7b \u00b6 \u6807\u8bb0\u6bcf\u4e2a\u50cf\u7d20\u70b9\u7684\u7c7b\u522b\u4e3a\u8ddd\u79bb\u5176\u6700\u5c0f\u7684\u805a\u7c7b\u4e2d\u5fc3\u7684\u7c7b\u522b 6. \u91cd\u65b0\u8ba1\u7b97\u805a\u7c7b\u4e2d\u5fc3 \u00b6 \u8ba1\u7b97\u5c5e\u4e8e\u540c\u4e00\u4e2a\u805a\u7c7b\u7684\u6240\u6709\u50cf\u7d20\u70b9\u7684\u5e73\u5747\u5411\u91cf\u503c\uff0c\u91cd\u65b0\u5f97\u5230\u805a\u7c7b\u4e2d\u5fc3 7. \u8fed\u4ee34-6\u7684\u8fc7\u7a0b \u00b6 \u76f4\u5230\u65e7\u805a\u7c7b\u4e2d\u5fc3\u4e0e\u65b0\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb\u5c0f\u4e8e\u4e00\u5b9a\u9608\u503c\u6216\u8005\u8fbe\u5230\u4e00\u5b9a\u8fed\u4ee3\u6b21\u6570\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u5f53\u8fed\u4ee3\u6b21\u6570\u5230\u8fbe \\(10\\) \uff0c\u7b97\u6cd5\u80fd\u591f\u8fbe\u5230\u6536\u655b \u50cf\u7d20\u5316\u751f\u6210\uff1a\u805a\u7c7b\u4f18\u5316 \u00b6 \u8fed\u4ee3\u5230\u6700\u540e\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e0e\u805a\u7c7b\u4e2d\u5fc3\u4e0d\u5c5e\u4e8e\u540c\u4e00\u8fde\u901a\u57df\u7684\u5b64\u7acb\u50cf\u7d20\u70b9 \u5728SLIC\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u5c06\u5176\u89c6\u4e3a\u9700\u8981\u8fdb\u884c\u5f3a\u5236\u8fde\u901a\u7684\u53bb\u7a7a\u6d1e\u4efb\u52a1\uff0c\u53ef\u4ee5\u4f7f\u7528\u5230\u8fde\u901a\u7b97\u6cd5\u5c06\u5176\u5206\u914d\u5230\u6700\u8fd1\u7684\u805a\u7c7b\u6807\u7b7e \u5728\u672c\u6587\u4e2d\uff0c\u7531\u4e8e\u5e94\u7528\u573a\u666f\u662f\u56fe\u7247\u50cf\u7d20\u5316\uff0c\u4f1a\u5bf9\u50cf\u7d20\u8fdb\u884c\u4e0b\u53d6\u6837\uff0c\u5e76\u4e0d\u4f1a\u7ec6\u5316\u5230\u6bcf\u4e2a\u50cf\u7d20\uff0c\u56e0\u6b64\u4e0d\u505a\u805a\u7c7b\u4f18\u5316\u5904\u7406 \u5728\u5bf9\u56fe\u7247\u8fdb\u884cSLIC\u5206\u5272\u540e\uff0c\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u6bcf\u4e2a\u50cf\u7d20\u5bf9\u5e94\u7684\u8d85\u50cf\u7d20\u6807\u8bb0\uff0c\u8bbe\u5b9a\u4e00\u5b9a\u6b65\u957f stride \uff0c\u6bcf\u9694 stride \u4e2a\u50cf\u7d20\uff0c\u5c06\u50cf\u7d20\u8d4b\u503c\u4e3a\u5176\u805a\u7c7b\u4e2d\u5fc3\u7684\u989c\u8272\uff0c\u5373\u5f97\u5230\u6700\u7ec8\u7684\u50cf\u7d20\u5316\u7ed3\u679c \u9879\u76ee\u90e8\u7f72\uff1a\u56fe\u7247\u50cf\u7d20\u5316\u98ce\u683c\u751f\u6210\u5668 \u00b6 \u5e94\u7528\u90e8\u7f72\u5728 Github \uff0c\u76f8\u5173\u53c2\u6570\u5982\u4e0b\uff1a \u8fed\u4ee3\u6b21\u6570 iters \uff1b iters \u8d8a\u5927\uff0c\u5206\u5272\u7ed3\u679c\u66f4\u7cbe\u51c6\uff0c\u8ba1\u7b97\u65f6\u95f4\u8d8a\u957f \u8d85\u50cf\u7d20\u70b9\u5927\u5c0f blocksize \uff1b blocksize \u8d8a\u5c0f\uff0c\u8d85\u50cf\u7d20\u70b9\u5206\u5272\u8d8a\u7ec6\u817b \u53d6\u50cf\u7d20\u70b9\u6b65\u957f stride \uff1b stride \u8d8a\u5c0f\uff0c\u751f\u6210\u7684\u50cf\u7d20\u56fe\u8d8a\u63a5\u8fd1\u8d85\u50cf\u7d20\u70b9\uff0c\u4e5f\u5c31\u8d8a\u7ec6\u817b \u989c\u8272\u7a7a\u95f4\u6743\u91cd weight \uff1b weight \u8d8a\u5927\uff0c\u989c\u8272\u5bf9\u4e8e\u5206\u5272\u7ed3\u679c\u7684\u5f71\u54cd\u8d8a\u5927 Ren, Malik. Learning a classification model for segmentation[C]. international conference on computer vision, 2003: 10-17. \u21a9 Achanta R, Shaji A, Smith K, et al. SLIC superpixels compared to state-of-the-art superpixel methods[J]. IEEE transactions on pattern analysis and machine intelligence, 2012, 34(11): 2274-2282 \u21a9","title":"SLIC Pixelation"},{"location":"ai/ch2_1/#slic","text":"\u5b9e\u73b0\u8d85\u50cf\u7d20\u9886\u57df\u7ecf\u5178\u7b97\u6cd5SLIC\uff0c\u9879\u76ee\u5df2\u653e\u81f3 Github","title":"\u57fa\u4e8eSLIC\u7b97\u6cd5\u7684\u50cf\u7d20\u5316\u98ce\u683c\u751f\u6210\u5668"},{"location":"ai/ch2_1/#superpixel","text":"\u8d85\u50cf\u7d20\u662f 2003 \u5e74 Xiaofeng Ren 1 \u63d0\u51fa\u548c\u53d1\u5c55\u8d77\u6765\u7684\u56fe\u50cf\u5206\u5272\u6280\u672f\uff0c\u662f\u6307\u5177\u6709\u76f8\u4f3c\u7eb9\u7406\u3001\u989c\u8272\u3001\u4eae\u5ea6\u7b49\u7279\u5f81\u7684\u76f8\u90bb\u50cf\u7d20\u6784\u6210\u7684\u6709\u4e00\u5b9a\u89c6\u89c9\u610f\u4e49\u7684\u4e0d\u89c4\u5219\u50cf\u7d20\u5757 \u5b83\u5229\u7528\u50cf\u7d20\u4e4b\u95f4\u7279\u5f81\u7684\u76f8\u4f3c\u6027\u5c06\u50cf\u7d20\u5206\u7ec4\uff0c\u7528\u5c11\u91cf\u7684\u8d85\u50cf\u7d20\u4ee3\u66ff\u5927\u91cf\u7684\u50cf\u7d20\u6765\u8868\u8fbe\u56fe\u7247\u7279\u5f81\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u964d\u4f4e\u4e86\u56fe\u50cf\u540e\u5904\u7406\u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u901a\u5e38\u4f5c\u4e3a\u5206\u5272\u7b97\u6cd5\u7684\u9884\u5904\u7406\u6b65\u9aa4","title":"\u8d85\u50cf\u7d20\uff08SuperPixel\uff09"},{"location":"ai/ch2_1/#slic_1","text":"\u8d85\u50cf\u7d20\u70b9\u5206\u5272\u7684\u65b9\u6cd5\u5305\u62ec\u4e86\u63d0\u53d6\u8f6e\u5ed3\u3001\u805a\u7c7b\u3001\u68af\u5ea6\u4e0a\u5347\u7b49\u591a\u79cd SLIC 2 \u662f\u57fa\u4e8eK-means\u805a\u7c7b\u7684\u8d85\u50cf\u7d20\u5206\u5272\u7b97\u6cd5\uff0c\u5177\u6709\u7b80\u5355\u7075\u6d3b\u3001\u6548\u679c\u597d\u3001\u5904\u7406\u901f\u5ea6\u5feb\u7b49\u4f18\u52bf","title":"\u7b80\u5355\u7ebf\u6027\u8fed\u4ee3\u805a\u7c7b\uff08SLIC\uff09"},{"location":"ai/ch2_1/#1","text":"\u5c06\u56fe\u50cf\u4ece RGB \u989c\u8272\u7a7a\u95f4\u8f6c\u6362\u5230 CIE-Lab \u989c\u8272\u7a7a\u95f4\uff0cLab \u989c\u8272\u7a7a\u95f4\u66f4\u7b26\u5408\u4eba\u7c7b\u5bf9\u989c\u8272\u7684\u89c6\u89c9\u611f\u77e5\u3002\u8fd9\u4e2a\u7a7a\u95f4\u91cc\u7684\u8ddd\u79bb\u80fd\u53cd\u6620\u4eba\u611f\u89c9\u5230\u7684\u989c\u8272\u5dee\u522b\uff0c\u76f8\u5173\u8ba1\u7b97\u66f4\u4e3a\u51c6\u786e","title":"1. \u56fe\u50cf\u9884\u5904\u7406"},{"location":"ai/ch2_1/#2","text":"\u6839\u636e\u53c2\u6570\u786e\u5b9a\u8d85\u50cf\u7d20\u7684\u6570\u76ee\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5212\u5206\u4e3a\u591a\u5c11\u4e2a\u533a\u57df\u3002\u5047\u8bbe\u56fe\u7247\u6709 \\(N\\) \u4e2a\u50cf\u7d20\u70b9\uff0c\u9884\u8ba1\u5206\u5272\u4e3a \\(K\\) \u4e2a\u8d85\u50cf\u7d20\uff0c\u6bcf\u4e2a\u8d85\u50cf\u7d20\u5927\u5c0f\u4e3a \\(N/K\\) \uff0c\u76f8\u90bb\u4e2d\u5fc3\u8ddd\u79bb\u4e3a \\(S=Sqr(N/K)\\) \uff0c\u5f97\u5230 \\(K\\) \u4e2a\u805a\u7c7b\u5750\u6807","title":"2. \u521d\u59cb\u5316\u805a\u7c7b\u4e2d\u5fc3"},{"location":"ai/ch2_1/#3","text":"\u805a\u7c7b\u4e2d\u5fc3\u7684 \\(3\\times3\\) \u90bb\u57df\u5185\u9009\u62e9\u68af\u5ea6\u6700\u5c0f\u7684\u50cf\u7d20\u70b9\u4f5c\u4e3a\u65b0\u7684\u805a\u7c7b\u4e2d\u5fc3 \u628a\u56fe\u50cf\u770b\u6210\u4e8c\u7ef4\u79bb\u6563\u51fd\u6570\uff0c\u68af\u5ea6\u4e5f\u5c31\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u6c42\u5bfc\uff0c\u5f53\u76f8\u90bb\u50cf\u7d20\u503c\u6709\u53d8\u5316\u5c31\u4f1a\u5b58\u5728\u68af\u5ea6\uff0c\u800c\u5728\u8fb9\u7f18\u4e0a\u7684\u50cf\u7d20\u70b9\u7684\u68af\u5ea6\u6700\u5927\u3002\u5c06\u805a\u7c7b\u4e2d\u5fc3\u632a\u5230\u68af\u5ea6\u6700\u5c0f\u7684\u5730\u65b9\u53ef\u4ee5\u907f\u514d\u5176\u843d\u5230\u8fb9\u7f18\u8f6e\u5ed3\u4e0a\uff0c\u5f71\u54cd\u805a\u7c7b\u6548\u679c \u79bb\u6563\u68af\u5ea6\u7684\u68af\u5ea6\u8ba1\u7b97\u8003\u8651\u5230\u8ba1\u7b97\u91cf\uff0c\u4e00\u822c\u4f1a\u7b80\u5316\u4e3a\u7528\u7edd\u5bf9\u503c\u6765\u8fd1\u4f3c\u5e73\u65b9\u548c\u5e73\u65b9\u6839\u7684\u64cd\u4f5c","title":"3. \u4f18\u5316\u521d\u59cb\u805a\u7c7b\u4e2d\u5fc3"},{"location":"ai/ch2_1/#4","text":"\u5728\u805a\u7c7b\u4e2d\u5fc3\u8ddd\u79bbS\u7684\u533a\u57df\u5185 \\(2S\\times2S\\) \u7684\u90bb\u57df\u5185\u8ba1\u7b97\u50cf\u7d20\u70b9\u4e0e\u6bcf\u4e2a\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb \u4f7f\u7528\u7684\u662f\u6b27\u5f0f\u8ddd\u79bb\uff0c\u603b\u8ddd\u79bb \\(D\\) \u7531 \\(d_c\\) \u989c\u8272\u8ddd\u79bb\u4e0e \\(d_s\\) \u7a7a\u95f4\u8ddd\u79bb\u4e24\u90e8\u5206\u7ec4\u6210\uff1a \\[ \\begin{aligned} \\mathrm{d}_c &=\\sqrt{\\left(l_j-l_i\\right)^2+\\left(a_j-a_i\\right)^2+\\left(b_j-b_i\\right)^2} \\\\ \\mathrm{~d}_s &=\\sqrt{\\left(x_j-x_k\\right)^2+\\left(y_j-y_k\\right)^2} \\\\ D &=\\sqrt{\\left(\\frac{\\mathrm{d}_c}{N_c}\\right)^2+\\left(\\frac{\\mathrm{d}_s}{N_s}\\right)^2} \\end{aligned} \\] \u5982\u679c\u76f4\u63a5\u5c06 \\(l\\) \uff0c \\(a\\) \uff0c \\(b\\) \uff0c \\(x\\) \uff0c \\(y\\) \u62fc\u63a5\u6210\u4e00\u4e2a\u77e2\u91cf\u8ba1\u7b97\u8ddd\u79bb\uff0c\u5f53\u8d85\u50cf\u7d20\u7684\u5927\u5c0f\u53d8\u5316\u65f6\uff0c \\(x\\) \uff0c \\(y\\) \u7684\u503c\u53ef\u4ee5\u53d6\u5230\u975e\u5e38\u5927 \uff0c\u6bd4\u5982\u4e00\u5f20 \\(1000\\times1000\\) \u7684\u56fe\uff0c\u7a7a\u95f4\u8ddd\u79bb\u53ef\u4ee5\u8fbe\u5230 \\(1000\\times Sqr(2)\\) \uff0c\u800c\u989c\u8272\u8ddd\u79bb\u6700\u5927\u4ec5 \\(10\\times Sqr(2)\\) \uff0c\u5bfc\u81f4\u6700\u7ec8\u8ba1\u7b97\u5f97\u5230\u7684\u8ddd\u79bb\u503c\u4e2d\uff0c\u7a7a\u95f4\u8ddd\u79bb \\(d_s\\) \u6743\u91cd\u5360\u6bd4\u8fc7\u5927 \u6240\u4ee5\u9700\u8981\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u9664\u4ee5\u6700\u5927\u503c\u5373\u8d85\u50cf\u7d20\u70b9\u7684\u521d\u59cb\u5bbd\u5ea6 \\(S\\) \uff0c\u5c06\u503c\u6620\u5c04\u5230 \\([0,1]\\) \u800c\u989c\u8272\u7a7a\u95f4\u8ddd\u79bb\u4e5f\u4f1a\u7531\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c \\(m\\) \u6765\u8c03\u8282\u989c\u8272\u8ddd\u79bb\u4e0e\u7a7a\u95f4\u8ddd\u79bb\u7684\u5f71\u54cd\u6743\u91cd\uff0c \\(m\\) \u53d6\u503c\u8303\u56f4\u4e3a \\([1,40]\\) \\[ \\begin{aligned} D^{\\prime} &=\\sqrt{\\left(\\frac{\\mathrm{d}_c}{m}\\right)^2+\\left(\\frac{\\mathrm{d}_s}{S}\\right)^2} \\end{aligned} \\] \u5f53 \\(m\\) \u8d8a\u5927\uff0c\u989c\u8272\u7a7a\u95f4\u9664\u4ee5 \\(m\\) \u540e\u7684\u503c\u8d8a\u5c0f\uff0c\u5373\u7a7a\u95f4\u8ddd\u79bb\u7684\u6743\u91cd\u8d8a\u5927\uff0c\u751f\u6210\u7684\u50cf\u7d20\u4f1a\u66f4\u4e3a\u5f62\u72b6\u89c4\u5219\uff0c\u5f53 \\(m\\) \u8d8a\u5c0f\uff0c\u989c\u8272\u8ddd\u79bb\u6743\u91cd\u66f4\u5927\uff0c\u8d85\u50cf\u7d20\u4f1a\u5728\u8fb9\u7f18\u66f4\u4e3a\u7d27\u51d1\uff0c\u800c\u5f62\u72b6\u5927\u5c0f\u8f83\u4e3a\u4e0d\u89c4\u5219","title":"4. \u8ba1\u7b97\u50cf\u7d20\u70b9\u4e0e\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb"},{"location":"ai/ch2_1/#_1","text":"SLIC\u57fa\u4e8eK-means\uff0c\u4e3b\u8981\u505a\u4e86\u4e24\u70b9\u4f18\u5316\uff1a \u8c03\u6574\u4e86 \u641c\u7d22\u8303\u56f4 \uff0c\u7531\u5168\u5c40\u7f29\u5c0f\u4e3a \\(2S \\times 2S\\) \u7a7a\u95f4 \u8c03\u6574\u4e86 \u8ddd\u79bb\u5b9a\u4e49 \uff0c\u9009\u7528CIE-Lab\u8272\u57df\uff0c\u5e76\u5f15\u5165\u4e86\u8d85\u53c2\u6570\u4ee5\u8c03\u8282\u8272\u5f69\u8ddd\u79bb\u4e0e\u7a7a\u95f4\u8ddd\u79bb\u7684\u6743\u91cd","title":"\u603b\u7ed3"},{"location":"ai/ch2_1/#5","text":"\u6807\u8bb0\u6bcf\u4e2a\u50cf\u7d20\u70b9\u7684\u7c7b\u522b\u4e3a\u8ddd\u79bb\u5176\u6700\u5c0f\u7684\u805a\u7c7b\u4e2d\u5fc3\u7684\u7c7b\u522b","title":"5. \u50cf\u7d20\u70b9\u5206\u7c7b"},{"location":"ai/ch2_1/#6","text":"\u8ba1\u7b97\u5c5e\u4e8e\u540c\u4e00\u4e2a\u805a\u7c7b\u7684\u6240\u6709\u50cf\u7d20\u70b9\u7684\u5e73\u5747\u5411\u91cf\u503c\uff0c\u91cd\u65b0\u5f97\u5230\u805a\u7c7b\u4e2d\u5fc3","title":"6. \u91cd\u65b0\u8ba1\u7b97\u805a\u7c7b\u4e2d\u5fc3"},{"location":"ai/ch2_1/#7-4-6","text":"\u76f4\u5230\u65e7\u805a\u7c7b\u4e2d\u5fc3\u4e0e\u65b0\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb\u5c0f\u4e8e\u4e00\u5b9a\u9608\u503c\u6216\u8005\u8fbe\u5230\u4e00\u5b9a\u8fed\u4ee3\u6b21\u6570\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u5f53\u8fed\u4ee3\u6b21\u6570\u5230\u8fbe \\(10\\) \uff0c\u7b97\u6cd5\u80fd\u591f\u8fbe\u5230\u6536\u655b","title":"7. \u8fed\u4ee34-6\u7684\u8fc7\u7a0b"},{"location":"ai/ch2_1/#_2","text":"\u8fed\u4ee3\u5230\u6700\u540e\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e0e\u805a\u7c7b\u4e2d\u5fc3\u4e0d\u5c5e\u4e8e\u540c\u4e00\u8fde\u901a\u57df\u7684\u5b64\u7acb\u50cf\u7d20\u70b9 \u5728SLIC\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u5c06\u5176\u89c6\u4e3a\u9700\u8981\u8fdb\u884c\u5f3a\u5236\u8fde\u901a\u7684\u53bb\u7a7a\u6d1e\u4efb\u52a1\uff0c\u53ef\u4ee5\u4f7f\u7528\u5230\u8fde\u901a\u7b97\u6cd5\u5c06\u5176\u5206\u914d\u5230\u6700\u8fd1\u7684\u805a\u7c7b\u6807\u7b7e \u5728\u672c\u6587\u4e2d\uff0c\u7531\u4e8e\u5e94\u7528\u573a\u666f\u662f\u56fe\u7247\u50cf\u7d20\u5316\uff0c\u4f1a\u5bf9\u50cf\u7d20\u8fdb\u884c\u4e0b\u53d6\u6837\uff0c\u5e76\u4e0d\u4f1a\u7ec6\u5316\u5230\u6bcf\u4e2a\u50cf\u7d20\uff0c\u56e0\u6b64\u4e0d\u505a\u805a\u7c7b\u4f18\u5316\u5904\u7406 \u5728\u5bf9\u56fe\u7247\u8fdb\u884cSLIC\u5206\u5272\u540e\uff0c\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u6bcf\u4e2a\u50cf\u7d20\u5bf9\u5e94\u7684\u8d85\u50cf\u7d20\u6807\u8bb0\uff0c\u8bbe\u5b9a\u4e00\u5b9a\u6b65\u957f stride \uff0c\u6bcf\u9694 stride \u4e2a\u50cf\u7d20\uff0c\u5c06\u50cf\u7d20\u8d4b\u503c\u4e3a\u5176\u805a\u7c7b\u4e2d\u5fc3\u7684\u989c\u8272\uff0c\u5373\u5f97\u5230\u6700\u7ec8\u7684\u50cf\u7d20\u5316\u7ed3\u679c","title":"\u50cf\u7d20\u5316\u751f\u6210\uff1a\u805a\u7c7b\u4f18\u5316"},{"location":"ai/ch2_1/#_3","text":"\u5e94\u7528\u90e8\u7f72\u5728 Github \uff0c\u76f8\u5173\u53c2\u6570\u5982\u4e0b\uff1a \u8fed\u4ee3\u6b21\u6570 iters \uff1b iters \u8d8a\u5927\uff0c\u5206\u5272\u7ed3\u679c\u66f4\u7cbe\u51c6\uff0c\u8ba1\u7b97\u65f6\u95f4\u8d8a\u957f \u8d85\u50cf\u7d20\u70b9\u5927\u5c0f blocksize \uff1b blocksize \u8d8a\u5c0f\uff0c\u8d85\u50cf\u7d20\u70b9\u5206\u5272\u8d8a\u7ec6\u817b \u53d6\u50cf\u7d20\u70b9\u6b65\u957f stride \uff1b stride \u8d8a\u5c0f\uff0c\u751f\u6210\u7684\u50cf\u7d20\u56fe\u8d8a\u63a5\u8fd1\u8d85\u50cf\u7d20\u70b9\uff0c\u4e5f\u5c31\u8d8a\u7ec6\u817b \u989c\u8272\u7a7a\u95f4\u6743\u91cd weight \uff1b weight \u8d8a\u5927\uff0c\u989c\u8272\u5bf9\u4e8e\u5206\u5272\u7ed3\u679c\u7684\u5f71\u54cd\u8d8a\u5927 Ren, Malik. Learning a classification model for segmentation[C]. international conference on computer vision, 2003: 10-17. \u21a9 Achanta R, Shaji A, Smith K, et al. SLIC superpixels compared to state-of-the-art superpixel methods[J]. IEEE transactions on pattern analysis and machine intelligence, 2012, 34(11): 2274-2282 \u21a9","title":"\u9879\u76ee\u90e8\u7f72\uff1a\u56fe\u7247\u50cf\u7d20\u5316\u98ce\u683c\u751f\u6210\u5668"},{"location":"ai/ch2_2/","text":"Gradio & Hugging Face \u5b9e\u73b0\u7f51\u7edc\u7ed3\u6784\u53ef\u89c6\u5316\u53ca\u90e8\u7f72 \u00b6 \u57fa\u4e8eHugging Face\u5e73\u53f0\u7684\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u4e0d\u4ec5\u80fd\u5c06\u4ea4\u4e92\u754c\u9762\u5f53\u505aWeb\u5e94\u7528\u5feb\u901f\u90e8\u7f72\uff0c\u751a\u81f3\u5728Hugging Face\u4e0a\u6258\u7ba1\u7684\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u66f4\u52a0\u5feb\u6377\u7684\u5d4c\u5165\u63a5\u53e3\uff0c\u8fd9\u6837\u6211\u4fbf\u80fd\u5c06\u53ef\u89c6\u5316\u4ee3\u7801\u5d4c\u5165\u5f0f\u7684\u5c55\u793a\u5728\u4e2a\u4eba\u9759\u6001\u535a\u5ba2\u4e2d\uff0c\u6548\u679c\u4e5f\u76f8\u5f53\u597d \u5c55\u793a\u5185\u5bb9 \u00b6 \u4e3a\u4e00\u4e9b\u57fa\u672c\u7f51\u7edc\u7ed3\u6784\u7684\u53ef\u89c6\u5316\uff1a \u5168\u5c40\u8026\u5408\u7f51\u7edc\uff08Globally Coupled Network\uff09 \u6700\u8fd1\u90bb\u8026\u5408\u7f51\u7edc\uff08Nearest-neighbor Coupled Network\uff09 NW\u5c0f\u4e16\u754c\u6a21\u578b \uff08Newman&Watts World\uff09 \u4ee5\u53ca\u76f8\u5173\u7684\u6027\u8d28\u8ba1\u7b97\uff1a \u5e73\u5747\u8def\u5f84\u957f\u5ea6\uff08ASL\uff09 \u5e73\u5747\u805a\u7c7b\u7cfb\u6570\uff08ACC\uff09 \u4ee3\u7801\u5b9e\u73b0 \u00b6 \u7f51\u7edc\u7ed3\u6784 \u00b6 \u91c7\u53d6\u90bb\u63a5\u77e9\u9635\u7684\u65b9\u5f0f\u8868\u793a\u4e0e\u5b58\u50a8\uff0c\u56e0\u4e3a\u8bbe\u5b9a\u4e3a\u65e0\u5411\u56fe\uff0c\u56e0\u6b64\u77e9\u9635\u4e3a\u5bf9\u79f0\u7684\u65b9\u9635 \u5e73\u5747\u8def\u5f84\u957f\u5ea6\uff08ASL\uff09 \u00b6 \u5229\u7528 Floyd \u7b97\u6cd5\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u6700\u540e\u53d6\u5e73\u5747\u503c Python def ASL ( adj_matrix ): num_nodes = adj_matrix . shape [ 0 ] dist = np . copy ( adj_matrix ) for i in range ( num_nodes ): for j in range ( num_nodes ): if dist [ i ][ j ] == 0 and i != j : dist [ i ][ j ] = float ( 'inf' ) # Floyd for k in range ( num_nodes ): for i in range ( num_nodes ): for j in range ( num_nodes ): if dist [ i ][ k ] + dist [ k ][ j ] < dist [ i ][ j ]: dist [ i ][ j ] = dist [ i ][ k ] + dist [ k ][ j ] total_shortest_path = 0 for i in range ( num_nodes ): for j in range ( num_nodes ): if dist [ i ][ j ] != 0 : total_shortest_path += dist [ i ][ j ] avg_shortest_path = total_shortest_path / ( num_nodes * ( num_nodes - 1 )) return avg_shortest_path \u5e73\u5747\u805a\u7c7b\u7cfb\u6570\uff08ACC\uff09 \u00b6 \u4fbf\u5386\u76f4\u63a5\u8ba1\u6570\u5f97\u51fa Python def ACC ( input_matrix ): size = input_matrix . shape [ 0 ] c = np . zeros ( size ) for i in range ( size ): node_neigh = np . where ( input_matrix [ i ] == 1 )[ 0 ] n_links = len ( node_neigh ) if n_links >= 2 : k = 0 for j in range ( n_links - 1 ): for l in range ( j + 1 , n_links ): if input_matrix [ node_neigh [ j ]][ node_neigh [ l ]] == 1 : k += 1 c [ i ] = 2.0 * k / ( n_links * ( n_links - 1 )) else : c [ i ] = 0 return np . mean ( c ) Gradio \u90e8\u7f72\u4f53\u9a8c \u00b6 \u6700\u540e\u53ef\u89c6\u5316\u91c7\u7528Gradio & Matplotlib\u5b9e\u73b0\uff0c\u5206\u522b\u5728\u4e2a\u4eba\u7ad9\u70b9\uff08Nginx\u90e8\u7f72\uff09\u4e0e\u672c\u6587\u4e0b\u65b9\uff08Hugging Face\u90e8\u7f72\u5d4c\u5165\uff09\u5b9e\u73b0\u5c55\u793a \u7531\u4e8e\u4e2a\u4eba\u7ad9\u70b9\u6682\u65e0\u57df\u540d\uff0c\u5b89\u5168\u8003\u8651\u53ea\u63d0\u4f9b\u672c\u6587\u4e0b\u65b9\u7684\u53ef\u89c6\u5316\u4f53\u9a8c","title":"\u7f51\u7edc\u7ed3\u6784\u53ef\u89c6\u5316"},{"location":"ai/ch2_2/#gradio-hugging-face","text":"\u57fa\u4e8eHugging Face\u5e73\u53f0\u7684\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u4e0d\u4ec5\u80fd\u5c06\u4ea4\u4e92\u754c\u9762\u5f53\u505aWeb\u5e94\u7528\u5feb\u901f\u90e8\u7f72\uff0c\u751a\u81f3\u5728Hugging Face\u4e0a\u6258\u7ba1\u7684\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u66f4\u52a0\u5feb\u6377\u7684\u5d4c\u5165\u63a5\u53e3\uff0c\u8fd9\u6837\u6211\u4fbf\u80fd\u5c06\u53ef\u89c6\u5316\u4ee3\u7801\u5d4c\u5165\u5f0f\u7684\u5c55\u793a\u5728\u4e2a\u4eba\u9759\u6001\u535a\u5ba2\u4e2d\uff0c\u6548\u679c\u4e5f\u76f8\u5f53\u597d","title":"Gradio &amp; Hugging Face \u5b9e\u73b0\u7f51\u7edc\u7ed3\u6784\u53ef\u89c6\u5316\u53ca\u90e8\u7f72"},{"location":"ai/ch2_2/#_1","text":"\u4e3a\u4e00\u4e9b\u57fa\u672c\u7f51\u7edc\u7ed3\u6784\u7684\u53ef\u89c6\u5316\uff1a \u5168\u5c40\u8026\u5408\u7f51\u7edc\uff08Globally Coupled Network\uff09 \u6700\u8fd1\u90bb\u8026\u5408\u7f51\u7edc\uff08Nearest-neighbor Coupled Network\uff09 NW\u5c0f\u4e16\u754c\u6a21\u578b \uff08Newman&Watts World\uff09 \u4ee5\u53ca\u76f8\u5173\u7684\u6027\u8d28\u8ba1\u7b97\uff1a \u5e73\u5747\u8def\u5f84\u957f\u5ea6\uff08ASL\uff09 \u5e73\u5747\u805a\u7c7b\u7cfb\u6570\uff08ACC\uff09","title":"\u5c55\u793a\u5185\u5bb9"},{"location":"ai/ch2_2/#_2","text":"","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"ai/ch2_2/#_3","text":"\u91c7\u53d6\u90bb\u63a5\u77e9\u9635\u7684\u65b9\u5f0f\u8868\u793a\u4e0e\u5b58\u50a8\uff0c\u56e0\u4e3a\u8bbe\u5b9a\u4e3a\u65e0\u5411\u56fe\uff0c\u56e0\u6b64\u77e9\u9635\u4e3a\u5bf9\u79f0\u7684\u65b9\u9635","title":"\u7f51\u7edc\u7ed3\u6784"},{"location":"ai/ch2_2/#asl","text":"\u5229\u7528 Floyd \u7b97\u6cd5\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u6700\u540e\u53d6\u5e73\u5747\u503c Python def ASL ( adj_matrix ): num_nodes = adj_matrix . shape [ 0 ] dist = np . copy ( adj_matrix ) for i in range ( num_nodes ): for j in range ( num_nodes ): if dist [ i ][ j ] == 0 and i != j : dist [ i ][ j ] = float ( 'inf' ) # Floyd for k in range ( num_nodes ): for i in range ( num_nodes ): for j in range ( num_nodes ): if dist [ i ][ k ] + dist [ k ][ j ] < dist [ i ][ j ]: dist [ i ][ j ] = dist [ i ][ k ] + dist [ k ][ j ] total_shortest_path = 0 for i in range ( num_nodes ): for j in range ( num_nodes ): if dist [ i ][ j ] != 0 : total_shortest_path += dist [ i ][ j ] avg_shortest_path = total_shortest_path / ( num_nodes * ( num_nodes - 1 )) return avg_shortest_path","title":"\u5e73\u5747\u8def\u5f84\u957f\u5ea6\uff08ASL\uff09"},{"location":"ai/ch2_2/#acc","text":"\u4fbf\u5386\u76f4\u63a5\u8ba1\u6570\u5f97\u51fa Python def ACC ( input_matrix ): size = input_matrix . shape [ 0 ] c = np . zeros ( size ) for i in range ( size ): node_neigh = np . where ( input_matrix [ i ] == 1 )[ 0 ] n_links = len ( node_neigh ) if n_links >= 2 : k = 0 for j in range ( n_links - 1 ): for l in range ( j + 1 , n_links ): if input_matrix [ node_neigh [ j ]][ node_neigh [ l ]] == 1 : k += 1 c [ i ] = 2.0 * k / ( n_links * ( n_links - 1 )) else : c [ i ] = 0 return np . mean ( c )","title":"\u5e73\u5747\u805a\u7c7b\u7cfb\u6570\uff08ACC\uff09"},{"location":"ai/ch2_2/#gradio","text":"\u6700\u540e\u53ef\u89c6\u5316\u91c7\u7528Gradio & Matplotlib\u5b9e\u73b0\uff0c\u5206\u522b\u5728\u4e2a\u4eba\u7ad9\u70b9\uff08Nginx\u90e8\u7f72\uff09\u4e0e\u672c\u6587\u4e0b\u65b9\uff08Hugging Face\u90e8\u7f72\u5d4c\u5165\uff09\u5b9e\u73b0\u5c55\u793a \u7531\u4e8e\u4e2a\u4eba\u7ad9\u70b9\u6682\u65e0\u57df\u540d\uff0c\u5b89\u5168\u8003\u8651\u53ea\u63d0\u4f9b\u672c\u6587\u4e0b\u65b9\u7684\u53ef\u89c6\u5316\u4f53\u9a8c","title":"Gradio \u90e8\u7f72\u4f53\u9a8c"},{"location":"ai/ch5_1/","text":"\u53d8\u5206\u81ea\u7f16\u7801\u5668 | VAE \u00b6 \u53d8\u5206\u81ea\u7f16\u7801\u5668\uff08Variational Autoencoder\uff0cVAE\uff09 1 \u662f\u4e00\u79cd\u65e0\u76d1\u7763\u7684\u751f\u6210\u5f0f\u6a21\u578b \u7b2c\u4e00\u6b21\u63a5\u89e6\u65f6\u8fd8\u662f\u5b83\u7684\u201c\u7b80\u5316\u7248\u201d\u2014\u2014\u81ea\u52a8\u7f16\u7801\u5668\uff08Autoencoder\uff0c AE\uff09 2 \uff0c\u5f53\u65f6\u5bf9\u9690\u7a7a\u95f4\uff08latent space\uff09\u76f8\u5173\u6982\u5ff5\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u540e\u6765\u5728ML\u9009\u4fee\u8bfe\u590d\u73b0\u8bba\u6587\u65f6\u4e5f\u9009\u62e9\u4e86\u4e00\u7bc7\u5e94\u7528\u4e86latent space\u7684\u5de5\u4f5c 3 \uff0c\u5bf9\u76f8\u5173\u7684\u77e5\u8bc6\u4e5f\u66f4\u52a0\u611f\u5174\u8da3 \u9898\u5916\u8bdd \u00b6 \u4e00\u5f00\u59cb\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u8111\u5b50\u91cc\u603b\u662f\u60f3\u7740\u539f\u7406\u5982\u4f55\u5982\u4f55\uff0c\u95ee\u9898\u5982\u4f55\u5982\u4f55\uff0c\u6570\u5b66\u5206\u6790\u5982\u4f55\u5982\u4f55\u3002\u540e\u6765\u53d1\u73b0\u6ca1\u6709\u76f8\u5e94\u6570\u7406\u77e5\u8bc6\u6253\u5e95\uff0c\u5b9e\u5728\u662f\u5f88\u96be\u63a8\u8fdb\uff0c\u4f46\u786e\u786e\u5b9e\u5b9e\u53c8\u6709\u6536\u83b7\u7684\u5b9e\u611f\uff0c\u9677\u5165\u7ea0\u7ed3 \u540e\u6765\u9192\u609f\u8fc7\u6765\u4e86\uff0c\u5728\u6ca1\u6709\u57fa\u7840\u7684\u60c5\u51b5\u4e0b\uff0c\u8fc7\u6e21\u7ea0\u7ed3\u6570\u7406\u539f\u7406\uff0c\u4f18\u5316\u65b9\u6cd5\u5c5e\u4e8e\u5355\u7eaf\u81ea\u8017\uff1b\u4f46\u4ece\u673a\u5668\u5b66\u4e60\u4ee5\u53ca\u6a21\u578b\u8bbe\u8ba1\u7684\u89d2\u5ea6\uff0c\u4f9d\u65e7\u80fd\u6709\u5f88\u591a\u6536\u83b7\u53ef\u4ee5\u603b\u7ed3 \u4e8e\u662f\u4fbf\u6709\u4e86\u672c\u6587\u4e3b\u8981\u5c55\u73b0\u7684\u5185\u5bb9\uff0c\u57fa\u672c\u662f\u4e2a\u4eba\u7684\u5fc3\u5f97\u4f53\u4f1a\uff1b\u6bd5\u7adf\u4f60\u8981\u770b\u6570\u5b66\u63a8\u5bfc\uff0c\u7f51\u4e0a\u8d44\u6e90\u4e00\u5927\u5806\uff0c\u6211\u5e94\u8be5\u6709 \u81ea\u5df1\u7684\u4e1c\u897f \u624d\u884c \u4e2a\u4eba\u603b\u7ed3 \u00b6 \u603b\u89c8 \u00b6 VAE\u662f\u65e0\u76d1\u7763\u7684\u751f\u6210\u5f0f\u6a21\u578b\uff0c\u91c7\u53d6\u4e86encoder-decoder\u67b6\u6784\u3002\u5b83\u4e0e\u4e00\u4f17\u81ea\u7f16\u7801\u5668\u5de5\u4f5c\u7684\u4e0d\u540c\u5728\u4e8e\uff0cVAE\u5c06\u6837\u672c\u8f93\u5165\u6620\u5c04\u5230 \u5177\u6709\u666e\u904d\u6027\u7684\u5206\u5e03 \u4e0a\uff08\u5982\u6b63\u6001\u5206\u5e03\uff09\u800c\u975e\u81ea\u7f16\u7801\u5668\u5c06\u6837\u672c\u8f93\u5165\u6620\u5c04\u5230 \u4f4e\u7ef4\u5ea6\u7684\u5411\u91cf\u7a7a\u95f4 \u4e0a\uff0c\u8fd9\u610f\u5473\u7740VAE\u7684\u9690\u7a7a\u95f4\u7ef4\u5ea6\u751a\u81f3\u80fd\u6bd4\u8f93\u5165\u6837\u672c\u7ef4\u5ea6\u66f4\u9ad8 \u6a21\u578b \u00b6 encoder\u4e0edecoder\u5c42\u5927\u90e8\u5206\u60c5\u51b5\u90fd\u662f\u57fa\u4e8eDNN\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u96be\u4ee5\u5efa\u6a21 \u5728\u9690\u7a7a\u95f4\u5c42\uff0c\u56e0\u4e3aVAE\u5f15\u5165\u4e86\u8d77\u5230\u6b63\u5219\u5316\u4f5c\u7528\u7684KL\u6563\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u4eceencoder\u5c42\u7684\u7ed3\u679c\u4e2d\u663e\u5f0f\u201c\u8868\u73b0\u201d\u51fa\u80fd\u591f\u8868\u793a\u9690\u7a7a\u95f4\u5206\u5e03\u7684\u7279\u5f81\u91cf\uff0c\u5728VAE\u5047\u8bbe\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u60c5\u5f62\u4e0b\uff0c\u4fbf\u662f\u5747\u503c \\(\\mu\\) \u4e0e\u65b9\u5dee \\(\\sigma^2\\) \u5982\u679c\u9690\u7a7a\u95f4\u7ef4\u5ea6\u4e3a \\(d\\) \uff0c\u5c06\u5f97\u5230 \\(d\\) \u4e2a\u9690\u5206\u5e03\uff0c\u5373 \\(d\\) \u5bf9\u7279\u5f81\u91cf\uff1a \\[ \\{(\\mu_1,\\sigma^2_1),(\\mu_2,\\sigma^2_2),\u00b7\u00b7\u00b7,(\\mu_d,\\sigma^2_d)\\} \\] \u4e3a\u6b64VAE\u76f4\u63a5\u5c06encoder\u5c42\u8bbe\u8ba1\u4e3a\u540c\u6b65\u7684\u4e24\u5c42\uff1a\u5747\u503c\u5c42\u4e0e\u65b9\u5dee\u5c42\u3002\u7528\u4ee5\u5206\u522b\u8ba1\u7b97\u5747\u503c\u4e0e\u65b9\u5dee\uff0c\u5e76\u901a\u8fc7KL\u6563\u5ea6\u8fdb\u884c\u7ea6\u675f \u4f46\u8fd9\u53c8\u5e26\u6765\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u8ba9\u73b0\u6709\u7684encoder\u5c42\u7ed3\u679c\u53c2\u4e0e\u540e\u7eed\u7684\u91cd\u5efa\u8fc7\u7a0b\uff08decoder\u5c42\uff09\u5462\uff1f VAE\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5f88\u795e\u5947\u7684\u64cd\u4f5c\uff0c\u5728\u8bba\u6587\u4e2d\u88ab\u79f0\u4f5c\u201c\u91cd\u53c2\u6570\u6280\u5de7\uff08reparameterization trick\uff09\u201d\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6a21\u62df\u91c7\u6837\uff1a\u4ece \\(\\mathcal{N}(\\mu, \\sigma^2)\\) \u4e2d\u91c7\u6837\u4e00\u4e2a \\(Z\\) \uff0c\u7b49\u540c\u4e8e\u4ece \\(\\mathcal{N}(0, I)\\) \u4e2d\u91c7\u6837\u4e00\u4e2a \\(\\epsilon\\) \uff0c\u5e76\u4f7f \\(Z=\\mu + \\sigma \\times \\epsilon\\) \u4e8e\u662f\u9690\u53d8\u91cf \\(Z\\) \u5f97\u5230\uff0c\u6211\u4eec\u4fbf\u80fd\u9001\u5165decoder\u5c42\u8fdb\u884c\u91cd\u5efa\u8fc7\u7a0b\u4e86 \u7b56\u7565 \u00b6 VAE\u7684\u7b56\u7565\u5f88\u76f4\u89c2\uff0c\u4e3b\u8981\u4e3a\u4e24\u70b9\uff1a \u4f20\u7edfAE\u76ee\u6807\uff1a\u91cd\u5efa\u6837\u672c\u6570\u636e\uff0c\u5f15\u5165\u91cd\u6784\u635f\u5931 \u8ba9\u9690\u7a7a\u95f4\u5206\u5e03\u66f4\u5177\u666e\u904d\u6027\uff1a\u5047\u8bbe\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u5f15\u5165KL\u6563\u5ea6 \u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u9700\u8981\u5355\u72ec\u8bbe\u8ba1\u5e76\u884c\u7684\u5747\u503c\u5c42\u4e0e\u65b9\u5dee\u5c42\uff0c\u56e0\u4e3a\u5fc5\u987b\u663e\u5f0f\u5b9a\u4e49\u5e76\u8ba1\u7b97KL\u6563\u5ea6 \u5176\u5b9e\u4ee5\u66f4\u5bbd\u6cdb\u7684\u89c6\u89d2\u6765\u770b\uff0c\u5f15\u5165KL\u6563\u5ea6\u7b49\u540c\u4e8e\u5bf9\u9690\u7a7a\u95f4\u53d8\u91cf\u5206\u5e03\u8fdb\u884c\u6b63\u5219\uff0c\u5982\u679c\u9690\u7a7a\u95f4\u5206\u5e03\u771f\u6709\u67d0\u79cd\u201c\u6a21\u5f0f\u201d\u53ef\u4ee5\u5b66\u4e60\uff0c\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8bbe\u8ba1\u5176\u4ed6\u7684\u7b56\u7565\u5bf9\u5176\u8fdb\u884c\u7ea6\u675f\uff0c\u751a\u81f3\uff0c\u52a8\u6001\u66f4\u65b0\u8fd9\u79cd\u7ea6\u675f\u7b56\u7565\uff1f \u4ee3\u7801\u5b9e\u73b0 \u00b6 \u8fd9\u91cc\u7ed9\u51fa \u82cf\u795e\u7684\u4ee3\u7801 \uff0c\u57fa\u4e8ekeras\uff1a \u611f\u89c9keras\u6bd4pytorch\u597d\u7528\uff08\u788e\u788e\u5ff5 Python from __future__ import print_function import numpy as np import matplotlib.pyplot as plt from scipy.stats import norm from keras.layers import Input , Dense , Lambda from keras.models import Model from keras import backend as K from keras.datasets import mnist batch_size = 100 original_dim = 784 latent_dim = 2 # \u9690\u53d8\u91cf\u53d62\u7ef4\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u540e\u9762\u753b\u56fe intermediate_dim = 256 epochs = 50 # \u52a0\u8f7dMNIST\u6570\u636e\u96c6 ( x_train , y_train_ ), ( x_test , y_test_ ) = mnist . load_data () x_train = x_train . astype ( 'float32' ) / 255. x_test = x_test . astype ( 'float32' ) / 255. x_train = x_train . reshape (( len ( x_train ), np . prod ( x_train . shape [ 1 :]))) x_test = x_test . reshape (( len ( x_test ), np . prod ( x_test . shape [ 1 :]))) x = Input ( shape = ( original_dim ,)) h = Dense ( intermediate_dim , activation = 'relu' )( x ) # \u7b97p(Z|X)\u7684\u5747\u503c\u548c\u65b9\u5dee z_mean = Dense ( latent_dim )( h ) z_log_var = Dense ( latent_dim )( h ) # \u91cd\u53c2\u6570\u6280\u5de7 def sampling ( args ): z_mean , z_log_var = args epsilon = K . random_normal ( shape = K . shape ( z_mean )) return z_mean + K . exp ( z_log_var / 2 ) * epsilon # \u91cd\u53c2\u6570\u5c42\uff0c\u76f8\u5f53\u4e8e\u7ed9\u8f93\u5165\u52a0\u5165\u566a\u58f0 z = Lambda ( sampling , output_shape = ( latent_dim ,))([ z_mean , z_log_var ]) # \u89e3\u7801\u5c42\uff0c\u4e5f\u5c31\u662f\u751f\u6210\u5668\u90e8\u5206 decoder_h = Dense ( intermediate_dim , activation = 'relu' ) decoder_mean = Dense ( original_dim , activation = 'sigmoid' ) h_decoded = decoder_h ( z ) x_decoded_mean = decoder_mean ( h_decoded ) # \u5efa\u7acb\u6a21\u578b vae = Model ( x , x_decoded_mean ) # xent_loss\u662f\u91cd\u6784loss\uff0ckl_loss\u662fKL loss xent_loss = K . sum ( K . binary_crossentropy ( x , x_decoded_mean ), axis =- 1 ) kl_loss = - 0.5 * K . sum ( 1 + z_log_var - K . square ( z_mean ) - K . exp ( z_log_var ), axis =- 1 ) vae_loss = K . mean ( xent_loss + kl_loss ) # add_loss\u662f\u65b0\u589e\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u66f4\u7075\u6d3b\u5730\u6dfb\u52a0\u5404\u79cdloss vae . add_loss ( vae_loss ) vae . compile ( optimizer = 'rmsprop' ) vae . summary () vae . fit ( x_train , shuffle = True , epochs = epochs , batch_size = batch_size , validation_data = ( x_test , None )) # \u6784\u5efaencoder\uff0c\u7136\u540e\u89c2\u5bdf\u5404\u4e2a\u6570\u5b57\u5728\u9690\u7a7a\u95f4\u7684\u5206\u5e03 encoder = Model ( x , z_mean ) x_test_encoded = encoder . predict ( x_test , batch_size = batch_size ) plt . figure ( figsize = ( 6 , 6 )) plt . scatter ( x_test_encoded [:, 0 ], x_test_encoded [:, 1 ], c = y_test_ ) plt . colorbar () plt . show () # \u6784\u5efa\u751f\u6210\u5668 decoder_input = Input ( shape = ( latent_dim ,)) _h_decoded = decoder_h ( decoder_input ) _x_decoded_mean = decoder_mean ( _h_decoded ) generator = Model ( decoder_input , _x_decoded_mean ) # \u89c2\u5bdf\u9690\u53d8\u91cf\u7684\u4e24\u4e2a\u7ef4\u5ea6\u53d8\u5316\u662f\u5982\u4f55\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u7684 n = 15 # figure with 15x15 digits digit_size = 28 figure = np . zeros (( digit_size * n , digit_size * n )) #\u7528\u6b63\u6001\u5206\u5e03\u7684\u5206\u4f4d\u6570\u6765\u6784\u5efa\u9690\u53d8\u91cf\u5bf9 grid_x = norm . ppf ( np . linspace ( 0.05 , 0.95 , n )) grid_y = norm . ppf ( np . linspace ( 0.05 , 0.95 , n )) for i , yi in enumerate ( grid_x ): for j , xi in enumerate ( grid_y ): z_sample = np . array ([[ xi , yi ]]) x_decoded = generator . predict ( z_sample ) digit = x_decoded [ 0 ] . reshape ( digit_size , digit_size ) figure [ i * digit_size : ( i + 1 ) * digit_size , j * digit_size : ( j + 1 ) * digit_size ] = digit plt . figure ( figsize = ( 10 , 10 )) plt . imshow ( figure , cmap = 'Greys_r' ) plt . show () Kingma D P, Welling M. Auto-encoding variational bayes[J]. arXiv preprint arXiv:1312.6114, 2013. \u21a9 Hinton G E, Salakhutdinov R R. Reducing the dimensionality of data with neural networks[J]. science, 2006, 313(5786): 504-507. \u21a9 Yeh C K, Wu W C, Ko W J, et al. Learning deep latent space for multi-label classification[C]//Proceedings of the AAAI conference on artificial intelligence. 2017, 31(1). \u21a9","title":"\u53d8\u5206\u81ea\u7f16\u7801\u5668|VAE"},{"location":"ai/ch5_1/#vae","text":"\u53d8\u5206\u81ea\u7f16\u7801\u5668\uff08Variational Autoencoder\uff0cVAE\uff09 1 \u662f\u4e00\u79cd\u65e0\u76d1\u7763\u7684\u751f\u6210\u5f0f\u6a21\u578b \u7b2c\u4e00\u6b21\u63a5\u89e6\u65f6\u8fd8\u662f\u5b83\u7684\u201c\u7b80\u5316\u7248\u201d\u2014\u2014\u81ea\u52a8\u7f16\u7801\u5668\uff08Autoencoder\uff0c AE\uff09 2 \uff0c\u5f53\u65f6\u5bf9\u9690\u7a7a\u95f4\uff08latent space\uff09\u76f8\u5173\u6982\u5ff5\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u540e\u6765\u5728ML\u9009\u4fee\u8bfe\u590d\u73b0\u8bba\u6587\u65f6\u4e5f\u9009\u62e9\u4e86\u4e00\u7bc7\u5e94\u7528\u4e86latent space\u7684\u5de5\u4f5c 3 \uff0c\u5bf9\u76f8\u5173\u7684\u77e5\u8bc6\u4e5f\u66f4\u52a0\u611f\u5174\u8da3","title":"\u53d8\u5206\u81ea\u7f16\u7801\u5668 | VAE"},{"location":"ai/ch5_1/#_1","text":"\u4e00\u5f00\u59cb\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u8111\u5b50\u91cc\u603b\u662f\u60f3\u7740\u539f\u7406\u5982\u4f55\u5982\u4f55\uff0c\u95ee\u9898\u5982\u4f55\u5982\u4f55\uff0c\u6570\u5b66\u5206\u6790\u5982\u4f55\u5982\u4f55\u3002\u540e\u6765\u53d1\u73b0\u6ca1\u6709\u76f8\u5e94\u6570\u7406\u77e5\u8bc6\u6253\u5e95\uff0c\u5b9e\u5728\u662f\u5f88\u96be\u63a8\u8fdb\uff0c\u4f46\u786e\u786e\u5b9e\u5b9e\u53c8\u6709\u6536\u83b7\u7684\u5b9e\u611f\uff0c\u9677\u5165\u7ea0\u7ed3 \u540e\u6765\u9192\u609f\u8fc7\u6765\u4e86\uff0c\u5728\u6ca1\u6709\u57fa\u7840\u7684\u60c5\u51b5\u4e0b\uff0c\u8fc7\u6e21\u7ea0\u7ed3\u6570\u7406\u539f\u7406\uff0c\u4f18\u5316\u65b9\u6cd5\u5c5e\u4e8e\u5355\u7eaf\u81ea\u8017\uff1b\u4f46\u4ece\u673a\u5668\u5b66\u4e60\u4ee5\u53ca\u6a21\u578b\u8bbe\u8ba1\u7684\u89d2\u5ea6\uff0c\u4f9d\u65e7\u80fd\u6709\u5f88\u591a\u6536\u83b7\u53ef\u4ee5\u603b\u7ed3 \u4e8e\u662f\u4fbf\u6709\u4e86\u672c\u6587\u4e3b\u8981\u5c55\u73b0\u7684\u5185\u5bb9\uff0c\u57fa\u672c\u662f\u4e2a\u4eba\u7684\u5fc3\u5f97\u4f53\u4f1a\uff1b\u6bd5\u7adf\u4f60\u8981\u770b\u6570\u5b66\u63a8\u5bfc\uff0c\u7f51\u4e0a\u8d44\u6e90\u4e00\u5927\u5806\uff0c\u6211\u5e94\u8be5\u6709 \u81ea\u5df1\u7684\u4e1c\u897f \u624d\u884c","title":"\u9898\u5916\u8bdd"},{"location":"ai/ch5_1/#_2","text":"","title":"\u4e2a\u4eba\u603b\u7ed3"},{"location":"ai/ch5_1/#_3","text":"VAE\u662f\u65e0\u76d1\u7763\u7684\u751f\u6210\u5f0f\u6a21\u578b\uff0c\u91c7\u53d6\u4e86encoder-decoder\u67b6\u6784\u3002\u5b83\u4e0e\u4e00\u4f17\u81ea\u7f16\u7801\u5668\u5de5\u4f5c\u7684\u4e0d\u540c\u5728\u4e8e\uff0cVAE\u5c06\u6837\u672c\u8f93\u5165\u6620\u5c04\u5230 \u5177\u6709\u666e\u904d\u6027\u7684\u5206\u5e03 \u4e0a\uff08\u5982\u6b63\u6001\u5206\u5e03\uff09\u800c\u975e\u81ea\u7f16\u7801\u5668\u5c06\u6837\u672c\u8f93\u5165\u6620\u5c04\u5230 \u4f4e\u7ef4\u5ea6\u7684\u5411\u91cf\u7a7a\u95f4 \u4e0a\uff0c\u8fd9\u610f\u5473\u7740VAE\u7684\u9690\u7a7a\u95f4\u7ef4\u5ea6\u751a\u81f3\u80fd\u6bd4\u8f93\u5165\u6837\u672c\u7ef4\u5ea6\u66f4\u9ad8","title":"\u603b\u89c8"},{"location":"ai/ch5_1/#_4","text":"encoder\u4e0edecoder\u5c42\u5927\u90e8\u5206\u60c5\u51b5\u90fd\u662f\u57fa\u4e8eDNN\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u96be\u4ee5\u5efa\u6a21 \u5728\u9690\u7a7a\u95f4\u5c42\uff0c\u56e0\u4e3aVAE\u5f15\u5165\u4e86\u8d77\u5230\u6b63\u5219\u5316\u4f5c\u7528\u7684KL\u6563\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u4eceencoder\u5c42\u7684\u7ed3\u679c\u4e2d\u663e\u5f0f\u201c\u8868\u73b0\u201d\u51fa\u80fd\u591f\u8868\u793a\u9690\u7a7a\u95f4\u5206\u5e03\u7684\u7279\u5f81\u91cf\uff0c\u5728VAE\u5047\u8bbe\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u60c5\u5f62\u4e0b\uff0c\u4fbf\u662f\u5747\u503c \\(\\mu\\) \u4e0e\u65b9\u5dee \\(\\sigma^2\\) \u5982\u679c\u9690\u7a7a\u95f4\u7ef4\u5ea6\u4e3a \\(d\\) \uff0c\u5c06\u5f97\u5230 \\(d\\) \u4e2a\u9690\u5206\u5e03\uff0c\u5373 \\(d\\) \u5bf9\u7279\u5f81\u91cf\uff1a \\[ \\{(\\mu_1,\\sigma^2_1),(\\mu_2,\\sigma^2_2),\u00b7\u00b7\u00b7,(\\mu_d,\\sigma^2_d)\\} \\] \u4e3a\u6b64VAE\u76f4\u63a5\u5c06encoder\u5c42\u8bbe\u8ba1\u4e3a\u540c\u6b65\u7684\u4e24\u5c42\uff1a\u5747\u503c\u5c42\u4e0e\u65b9\u5dee\u5c42\u3002\u7528\u4ee5\u5206\u522b\u8ba1\u7b97\u5747\u503c\u4e0e\u65b9\u5dee\uff0c\u5e76\u901a\u8fc7KL\u6563\u5ea6\u8fdb\u884c\u7ea6\u675f \u4f46\u8fd9\u53c8\u5e26\u6765\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u8ba9\u73b0\u6709\u7684encoder\u5c42\u7ed3\u679c\u53c2\u4e0e\u540e\u7eed\u7684\u91cd\u5efa\u8fc7\u7a0b\uff08decoder\u5c42\uff09\u5462\uff1f VAE\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5f88\u795e\u5947\u7684\u64cd\u4f5c\uff0c\u5728\u8bba\u6587\u4e2d\u88ab\u79f0\u4f5c\u201c\u91cd\u53c2\u6570\u6280\u5de7\uff08reparameterization trick\uff09\u201d\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6a21\u62df\u91c7\u6837\uff1a\u4ece \\(\\mathcal{N}(\\mu, \\sigma^2)\\) \u4e2d\u91c7\u6837\u4e00\u4e2a \\(Z\\) \uff0c\u7b49\u540c\u4e8e\u4ece \\(\\mathcal{N}(0, I)\\) \u4e2d\u91c7\u6837\u4e00\u4e2a \\(\\epsilon\\) \uff0c\u5e76\u4f7f \\(Z=\\mu + \\sigma \\times \\epsilon\\) \u4e8e\u662f\u9690\u53d8\u91cf \\(Z\\) \u5f97\u5230\uff0c\u6211\u4eec\u4fbf\u80fd\u9001\u5165decoder\u5c42\u8fdb\u884c\u91cd\u5efa\u8fc7\u7a0b\u4e86","title":"\u6a21\u578b"},{"location":"ai/ch5_1/#_5","text":"VAE\u7684\u7b56\u7565\u5f88\u76f4\u89c2\uff0c\u4e3b\u8981\u4e3a\u4e24\u70b9\uff1a \u4f20\u7edfAE\u76ee\u6807\uff1a\u91cd\u5efa\u6837\u672c\u6570\u636e\uff0c\u5f15\u5165\u91cd\u6784\u635f\u5931 \u8ba9\u9690\u7a7a\u95f4\u5206\u5e03\u66f4\u5177\u666e\u904d\u6027\uff1a\u5047\u8bbe\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u5f15\u5165KL\u6563\u5ea6 \u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u9700\u8981\u5355\u72ec\u8bbe\u8ba1\u5e76\u884c\u7684\u5747\u503c\u5c42\u4e0e\u65b9\u5dee\u5c42\uff0c\u56e0\u4e3a\u5fc5\u987b\u663e\u5f0f\u5b9a\u4e49\u5e76\u8ba1\u7b97KL\u6563\u5ea6 \u5176\u5b9e\u4ee5\u66f4\u5bbd\u6cdb\u7684\u89c6\u89d2\u6765\u770b\uff0c\u5f15\u5165KL\u6563\u5ea6\u7b49\u540c\u4e8e\u5bf9\u9690\u7a7a\u95f4\u53d8\u91cf\u5206\u5e03\u8fdb\u884c\u6b63\u5219\uff0c\u5982\u679c\u9690\u7a7a\u95f4\u5206\u5e03\u771f\u6709\u67d0\u79cd\u201c\u6a21\u5f0f\u201d\u53ef\u4ee5\u5b66\u4e60\uff0c\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8bbe\u8ba1\u5176\u4ed6\u7684\u7b56\u7565\u5bf9\u5176\u8fdb\u884c\u7ea6\u675f\uff0c\u751a\u81f3\uff0c\u52a8\u6001\u66f4\u65b0\u8fd9\u79cd\u7ea6\u675f\u7b56\u7565\uff1f","title":"\u7b56\u7565"},{"location":"ai/ch5_1/#_6","text":"\u8fd9\u91cc\u7ed9\u51fa \u82cf\u795e\u7684\u4ee3\u7801 \uff0c\u57fa\u4e8ekeras\uff1a \u611f\u89c9keras\u6bd4pytorch\u597d\u7528\uff08\u788e\u788e\u5ff5 Python from __future__ import print_function import numpy as np import matplotlib.pyplot as plt from scipy.stats import norm from keras.layers import Input , Dense , Lambda from keras.models import Model from keras import backend as K from keras.datasets import mnist batch_size = 100 original_dim = 784 latent_dim = 2 # \u9690\u53d8\u91cf\u53d62\u7ef4\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u540e\u9762\u753b\u56fe intermediate_dim = 256 epochs = 50 # \u52a0\u8f7dMNIST\u6570\u636e\u96c6 ( x_train , y_train_ ), ( x_test , y_test_ ) = mnist . load_data () x_train = x_train . astype ( 'float32' ) / 255. x_test = x_test . astype ( 'float32' ) / 255. x_train = x_train . reshape (( len ( x_train ), np . prod ( x_train . shape [ 1 :]))) x_test = x_test . reshape (( len ( x_test ), np . prod ( x_test . shape [ 1 :]))) x = Input ( shape = ( original_dim ,)) h = Dense ( intermediate_dim , activation = 'relu' )( x ) # \u7b97p(Z|X)\u7684\u5747\u503c\u548c\u65b9\u5dee z_mean = Dense ( latent_dim )( h ) z_log_var = Dense ( latent_dim )( h ) # \u91cd\u53c2\u6570\u6280\u5de7 def sampling ( args ): z_mean , z_log_var = args epsilon = K . random_normal ( shape = K . shape ( z_mean )) return z_mean + K . exp ( z_log_var / 2 ) * epsilon # \u91cd\u53c2\u6570\u5c42\uff0c\u76f8\u5f53\u4e8e\u7ed9\u8f93\u5165\u52a0\u5165\u566a\u58f0 z = Lambda ( sampling , output_shape = ( latent_dim ,))([ z_mean , z_log_var ]) # \u89e3\u7801\u5c42\uff0c\u4e5f\u5c31\u662f\u751f\u6210\u5668\u90e8\u5206 decoder_h = Dense ( intermediate_dim , activation = 'relu' ) decoder_mean = Dense ( original_dim , activation = 'sigmoid' ) h_decoded = decoder_h ( z ) x_decoded_mean = decoder_mean ( h_decoded ) # \u5efa\u7acb\u6a21\u578b vae = Model ( x , x_decoded_mean ) # xent_loss\u662f\u91cd\u6784loss\uff0ckl_loss\u662fKL loss xent_loss = K . sum ( K . binary_crossentropy ( x , x_decoded_mean ), axis =- 1 ) kl_loss = - 0.5 * K . sum ( 1 + z_log_var - K . square ( z_mean ) - K . exp ( z_log_var ), axis =- 1 ) vae_loss = K . mean ( xent_loss + kl_loss ) # add_loss\u662f\u65b0\u589e\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u66f4\u7075\u6d3b\u5730\u6dfb\u52a0\u5404\u79cdloss vae . add_loss ( vae_loss ) vae . compile ( optimizer = 'rmsprop' ) vae . summary () vae . fit ( x_train , shuffle = True , epochs = epochs , batch_size = batch_size , validation_data = ( x_test , None )) # \u6784\u5efaencoder\uff0c\u7136\u540e\u89c2\u5bdf\u5404\u4e2a\u6570\u5b57\u5728\u9690\u7a7a\u95f4\u7684\u5206\u5e03 encoder = Model ( x , z_mean ) x_test_encoded = encoder . predict ( x_test , batch_size = batch_size ) plt . figure ( figsize = ( 6 , 6 )) plt . scatter ( x_test_encoded [:, 0 ], x_test_encoded [:, 1 ], c = y_test_ ) plt . colorbar () plt . show () # \u6784\u5efa\u751f\u6210\u5668 decoder_input = Input ( shape = ( latent_dim ,)) _h_decoded = decoder_h ( decoder_input ) _x_decoded_mean = decoder_mean ( _h_decoded ) generator = Model ( decoder_input , _x_decoded_mean ) # \u89c2\u5bdf\u9690\u53d8\u91cf\u7684\u4e24\u4e2a\u7ef4\u5ea6\u53d8\u5316\u662f\u5982\u4f55\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u7684 n = 15 # figure with 15x15 digits digit_size = 28 figure = np . zeros (( digit_size * n , digit_size * n )) #\u7528\u6b63\u6001\u5206\u5e03\u7684\u5206\u4f4d\u6570\u6765\u6784\u5efa\u9690\u53d8\u91cf\u5bf9 grid_x = norm . ppf ( np . linspace ( 0.05 , 0.95 , n )) grid_y = norm . ppf ( np . linspace ( 0.05 , 0.95 , n )) for i , yi in enumerate ( grid_x ): for j , xi in enumerate ( grid_y ): z_sample = np . array ([[ xi , yi ]]) x_decoded = generator . predict ( z_sample ) digit = x_decoded [ 0 ] . reshape ( digit_size , digit_size ) figure [ i * digit_size : ( i + 1 ) * digit_size , j * digit_size : ( j + 1 ) * digit_size ] = digit plt . figure ( figsize = ( 10 , 10 )) plt . imshow ( figure , cmap = 'Greys_r' ) plt . show () Kingma D P, Welling M. Auto-encoding variational bayes[J]. arXiv preprint arXiv:1312.6114, 2013. \u21a9 Hinton G E, Salakhutdinov R R. Reducing the dimensionality of data with neural networks[J]. science, 2006, 313(5786): 504-507. \u21a9 Yeh C K, Wu W C, Ko W J, et al. Learning deep latent space for multi-label classification[C]//Proceedings of the AAAI conference on artificial intelligence. 2017, 31(1). \u21a9","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"ai/todo3/","text":"Todo \u00b6","title":"Todo3"},{"location":"ai/todo3/#todo","text":"","title":"Todo"},{"location":"ai/todo5/","text":"Todo \u00b6","title":"Todo5"},{"location":"ai/todo5/#todo","text":"","title":"Todo"},{"location":"ctf/ch1/","text":"\u4e71\u6570\u5047\u6587&LSB\u9690\u5199 \u00b6 \u4e71\u6570\u5047\u6587\uff08Lorem ipsum\uff09 \u00b6 \u5bf9 lvl8 \u6587\u4ef6\u8fdb\u884cfile\u5206\u6790\uff0c\u53d1\u73b0\u662f\u4e00\u4e2a\u6587\u672c\u5185\u5bb9\u6587\u4ef6\uff1a \u53d1\u73b0\u5f62\u5f0f\u4e0a\u5f88\u50cf\u4e71\u6570\u5047\u6587 \u200b Lorem ipsum\uff0c\u4e2d\u6587\u53c8\u79f0\u201c\u4e71\u6570\u5047\u6587\u201d\uff0c \u662f\u6307\u4e00\u7bc7\u5e38\u7528\u4e8e\u6392\u7248\u8bbe\u8ba1\u9886\u57df\u7684\u62c9\u4e01\u6587\u6587\u7ae0\u3002\u76ee\u7684\u662f\u8ba9\u9605\u8bfb\u8005\u4e0d\u8981\u88ab\u6587\u7ae0\u5185\u5bb9\u6240\u5f71\u54cd\uff0c\u800c\u53ea\u4e13\u6ce8\u4e8e\u89c2\u5bdf\u5b57\u578b\u6216\u7248\u578b\uff0c\u5e76\u501f\u6b64\u586b\u6ee1\u7a7a\u95f4\u3002 \u4f46\u662f\u660e\u663e\u4e0d\u7b26\u5408\u6b63\u5e38\u7684\u5927\u5c0f\u5199\u547d\u540d \u6211\u4eec\u5408\u7406\u731c\u6d4b\u5e94\u8be5\u662f\u5c06\u76ee\u6807\u5185\u5bb9\u52a0\u5bc6\u5728\u4e86\u6587\u672c\u5f53\u4e2d \u6211\u4eec\u5047\u8bbe\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f\u4f7f\u7528\u5b57\u7b26\u5927\u5c0f\u5199\u7f16\u7801\u7684\uff0c\u4e3a\u6b64\u6211\u4eec\u5ffd\u7565\u6240\u6709\u5176\u4ed6\u5b57\u7b26\uff0c\u5982\u6807\u70b9\u7b26\u53f7\u3001\u7a7a\u683c\u3001\u6362\u884c\u7b26\u7b49\uff0c\u5c06\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a1\uff0c\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a0 \u5728\u7f16\u5199python\u811a\u672c\u8fdb\u884c\u8f6c\u6362\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u6587\u4ef6\u5f00\u5934ASCII\u7801\u4e3a\uff1a \u5b83\u867d\u7136\u4e0d\u662fELF\u6267\u884c\u6587\u4ef6\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u80fd\u5f97\u77e5\u8fd9\u662f\u4e00\u5f20\u4f4d\u56fe\u5f00\u5934\u6807\u8bc6\u7b26\uff0c\u6211\u4eec\u5c06\u5176\u4ee5\u56fe\u5f62\u5f0f\u6253\u5f00 \u4f4d\u56fe\u6587\u4ef6 \u00b6 \u8f6c\u6362\u540e\uff0c\u6211\u4eec\u5f97\u5230\u8be5\u56fe\uff1a \u5728\u591a\u65b9\u9762\u5c1d\u8bd5\u540e\uff08\u4f8b\u5982\u56fe\u7247\u5bbd\u9ad8\u3001\u6587\u4ef6\u683c\u5f0f\u3001\u5185\u5bb9\u7f16\u7801\u7b49\uff09\uff0c\u4ecd\u6ca1\u6709\u660e\u663e\u53ef\u7591\u5730\u65b9\u540e\uff0c\u6211\u4eec\u5c1d\u8bd5\u5229\u7528\u8f83\u4e3a\u5168\u9762\u7684\u56fe\u7247\u5206\u6790\u5de5\u5177ImageMagick\u8fdb\u884c\u68c0\u6d4b\uff1a \u5229\u7528 identify -verbose level8.bmp \u547d\u4ee4\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u53ef\u7591\u7684\u5730\u65b9 \u8868\u793a\u989c\u8272\u79cd\u7c7b\u6570\u591a\u8fbe42\u79cd\uff0c\u4f46\u4ece\u56fe\u4e2d\u5f88\u660e\u663e\u5e76\u6ca1\u6709\u8fd9\u4e48\u591a\uff0c\u901a\u8fc7\u8c03\u8282\u5bf9\u6bd4\u5ea6\u4e0e\u4eae\u5ea6\u540e \u53ef\u4ee5\u770b\u5230\u56fe\u7247\u4e0b\u65b9\u91c7\u53d6\u4e86\u7591\u4f3cLSB\u9690\u5199\u7684\u6280\u672f \u9690\u5199\u672f \u00b6 \u5728\u56fe\u50cf\u6587\u4ef6\u4e2d\u9690\u85cf\u6570\u636e\u7684\u4e00\u79cd\u5e38\u89c1\u800c\u7b80\u5355\u7684\u9690\u5199\u6280\u672f \u901a\u8fc7\u7a0d\u5fae\u4fee\u6539\u56fe\u50cf\u50cf\u7d20\u7684RGB\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5d4c\u5165\u8981\u9690\u85cf\u7684\u6570\u636e\uff1a\u5c06\u60f3\u8981\u9690\u85cf\u7684\u6570\u636e\u4f4d\u8986\u76d6\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u901a\u9053\u7684\u6700\u4f4e\u6709\u6548\u4f4d\uff0c\u79f0\u4e3aLSB\u9690\u5199 \u4f8b\u5982\u5728\u8be5\u56fe\u4e2d\u6211\u4eec\u4ec5\u6539\u53d8\u4e86G\u901a\u9053\u4e0a\u7684LSB\uff0c\u5bf9\u989c\u8272\u7684\u6539\u53d8\u4e5f\u4ec5\u4ec5\u7531 #6490F1 \u53d8\u4e3a\u4e86 #6491F1\uff0c\u4ece\u8089\u773c\u4e0a\u662f\u96be\u4ee5\u533a\u5206\u7684\uff0c\u4f46\u7406\u8bba\u4e0a\u4e00\u5f20 W \\(\\times\\) H \u7684\u4f4d\u56fe\u80fd\u63d0\u4f9b\u6700\u5927 W \\(\\times\\) H \\(\\times\\) 3\\8 \u5b57\u8282\u7684\u9690\u5199\u7a7a\u95f4 \u5229\u7528\u5e38\u89c1\u7684LSB\u9690\u5199\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u6d4bbmp\u662f\u5426\u7ecf\u8fc7\u5e38\u89c1\u7684LSB\u52a0\u5bc6\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528zsteg\uff1a \u53ef\u4ee5\u770b\u5230\u5728b1\u4f4d\u4e0a\u7ecf\u8fc7LSB\u89e3\u5bc6\u68c0\u6d4b\u5230ELF\u7684\u6587\u4ef6\u6807\u8bc6\u7b26\uff0c\u8bf4\u660e\u8fd9\u6781\u6709\u53ef\u80fd\u662f\u88ab\u52a0\u5bc6\u9690\u85cf\u7684\u6587\u4ef6 \u6211\u4eec\u5229\u7528zsteg\u8fdb\u884c\u63d0\u53d6\uff1a \u901a\u8fc7file\u5de5\u5177\u53ef\u4ee5\u786e\u8ba4\u8fd9\u662f\u9700\u8981\u5f97\u5230\u7684\u9690\u5199ELF\u6587\u4ef6","title":"\u4e71\u6570\u5047\u6587&LSB\u9690\u5199"},{"location":"ctf/ch1/#lsb","text":"","title":"\u4e71\u6570\u5047\u6587&amp;LSB\u9690\u5199"},{"location":"ctf/ch1/#lorem-ipsum","text":"\u5bf9 lvl8 \u6587\u4ef6\u8fdb\u884cfile\u5206\u6790\uff0c\u53d1\u73b0\u662f\u4e00\u4e2a\u6587\u672c\u5185\u5bb9\u6587\u4ef6\uff1a \u53d1\u73b0\u5f62\u5f0f\u4e0a\u5f88\u50cf\u4e71\u6570\u5047\u6587 \u200b Lorem ipsum\uff0c\u4e2d\u6587\u53c8\u79f0\u201c\u4e71\u6570\u5047\u6587\u201d\uff0c \u662f\u6307\u4e00\u7bc7\u5e38\u7528\u4e8e\u6392\u7248\u8bbe\u8ba1\u9886\u57df\u7684\u62c9\u4e01\u6587\u6587\u7ae0\u3002\u76ee\u7684\u662f\u8ba9\u9605\u8bfb\u8005\u4e0d\u8981\u88ab\u6587\u7ae0\u5185\u5bb9\u6240\u5f71\u54cd\uff0c\u800c\u53ea\u4e13\u6ce8\u4e8e\u89c2\u5bdf\u5b57\u578b\u6216\u7248\u578b\uff0c\u5e76\u501f\u6b64\u586b\u6ee1\u7a7a\u95f4\u3002 \u4f46\u662f\u660e\u663e\u4e0d\u7b26\u5408\u6b63\u5e38\u7684\u5927\u5c0f\u5199\u547d\u540d \u6211\u4eec\u5408\u7406\u731c\u6d4b\u5e94\u8be5\u662f\u5c06\u76ee\u6807\u5185\u5bb9\u52a0\u5bc6\u5728\u4e86\u6587\u672c\u5f53\u4e2d \u6211\u4eec\u5047\u8bbe\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f\u4f7f\u7528\u5b57\u7b26\u5927\u5c0f\u5199\u7f16\u7801\u7684\uff0c\u4e3a\u6b64\u6211\u4eec\u5ffd\u7565\u6240\u6709\u5176\u4ed6\u5b57\u7b26\uff0c\u5982\u6807\u70b9\u7b26\u53f7\u3001\u7a7a\u683c\u3001\u6362\u884c\u7b26\u7b49\uff0c\u5c06\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a1\uff0c\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a0 \u5728\u7f16\u5199python\u811a\u672c\u8fdb\u884c\u8f6c\u6362\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u6587\u4ef6\u5f00\u5934ASCII\u7801\u4e3a\uff1a \u5b83\u867d\u7136\u4e0d\u662fELF\u6267\u884c\u6587\u4ef6\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u80fd\u5f97\u77e5\u8fd9\u662f\u4e00\u5f20\u4f4d\u56fe\u5f00\u5934\u6807\u8bc6\u7b26\uff0c\u6211\u4eec\u5c06\u5176\u4ee5\u56fe\u5f62\u5f0f\u6253\u5f00","title":"\u4e71\u6570\u5047\u6587\uff08Lorem ipsum\uff09"},{"location":"ctf/ch1/#_1","text":"\u8f6c\u6362\u540e\uff0c\u6211\u4eec\u5f97\u5230\u8be5\u56fe\uff1a \u5728\u591a\u65b9\u9762\u5c1d\u8bd5\u540e\uff08\u4f8b\u5982\u56fe\u7247\u5bbd\u9ad8\u3001\u6587\u4ef6\u683c\u5f0f\u3001\u5185\u5bb9\u7f16\u7801\u7b49\uff09\uff0c\u4ecd\u6ca1\u6709\u660e\u663e\u53ef\u7591\u5730\u65b9\u540e\uff0c\u6211\u4eec\u5c1d\u8bd5\u5229\u7528\u8f83\u4e3a\u5168\u9762\u7684\u56fe\u7247\u5206\u6790\u5de5\u5177ImageMagick\u8fdb\u884c\u68c0\u6d4b\uff1a \u5229\u7528 identify -verbose level8.bmp \u547d\u4ee4\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u53ef\u7591\u7684\u5730\u65b9 \u8868\u793a\u989c\u8272\u79cd\u7c7b\u6570\u591a\u8fbe42\u79cd\uff0c\u4f46\u4ece\u56fe\u4e2d\u5f88\u660e\u663e\u5e76\u6ca1\u6709\u8fd9\u4e48\u591a\uff0c\u901a\u8fc7\u8c03\u8282\u5bf9\u6bd4\u5ea6\u4e0e\u4eae\u5ea6\u540e \u53ef\u4ee5\u770b\u5230\u56fe\u7247\u4e0b\u65b9\u91c7\u53d6\u4e86\u7591\u4f3cLSB\u9690\u5199\u7684\u6280\u672f","title":"\u4f4d\u56fe\u6587\u4ef6"},{"location":"ctf/ch1/#_2","text":"\u5728\u56fe\u50cf\u6587\u4ef6\u4e2d\u9690\u85cf\u6570\u636e\u7684\u4e00\u79cd\u5e38\u89c1\u800c\u7b80\u5355\u7684\u9690\u5199\u6280\u672f \u901a\u8fc7\u7a0d\u5fae\u4fee\u6539\u56fe\u50cf\u50cf\u7d20\u7684RGB\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5d4c\u5165\u8981\u9690\u85cf\u7684\u6570\u636e\uff1a\u5c06\u60f3\u8981\u9690\u85cf\u7684\u6570\u636e\u4f4d\u8986\u76d6\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u901a\u9053\u7684\u6700\u4f4e\u6709\u6548\u4f4d\uff0c\u79f0\u4e3aLSB\u9690\u5199 \u4f8b\u5982\u5728\u8be5\u56fe\u4e2d\u6211\u4eec\u4ec5\u6539\u53d8\u4e86G\u901a\u9053\u4e0a\u7684LSB\uff0c\u5bf9\u989c\u8272\u7684\u6539\u53d8\u4e5f\u4ec5\u4ec5\u7531 #6490F1 \u53d8\u4e3a\u4e86 #6491F1\uff0c\u4ece\u8089\u773c\u4e0a\u662f\u96be\u4ee5\u533a\u5206\u7684\uff0c\u4f46\u7406\u8bba\u4e0a\u4e00\u5f20 W \\(\\times\\) H \u7684\u4f4d\u56fe\u80fd\u63d0\u4f9b\u6700\u5927 W \\(\\times\\) H \\(\\times\\) 3\\8 \u5b57\u8282\u7684\u9690\u5199\u7a7a\u95f4 \u5229\u7528\u5e38\u89c1\u7684LSB\u9690\u5199\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u6d4bbmp\u662f\u5426\u7ecf\u8fc7\u5e38\u89c1\u7684LSB\u52a0\u5bc6\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528zsteg\uff1a \u53ef\u4ee5\u770b\u5230\u5728b1\u4f4d\u4e0a\u7ecf\u8fc7LSB\u89e3\u5bc6\u68c0\u6d4b\u5230ELF\u7684\u6587\u4ef6\u6807\u8bc6\u7b26\uff0c\u8bf4\u660e\u8fd9\u6781\u6709\u53ef\u80fd\u662f\u88ab\u52a0\u5bc6\u9690\u85cf\u7684\u6587\u4ef6 \u6211\u4eec\u5229\u7528zsteg\u8fdb\u884c\u63d0\u53d6\uff1a \u901a\u8fc7file\u5de5\u5177\u53ef\u4ee5\u786e\u8ba4\u8fd9\u662f\u9700\u8981\u5f97\u5230\u7684\u9690\u5199ELF\u6587\u4ef6","title":"\u9690\u5199\u672f"},{"location":"ctf/ch2/","text":"FGSM\u7b80\u6613\u751f\u6210MNIST\u5bf9\u6297\u6837\u672c \u00b6 \u8bb0\u5f55\u4e00\u6b21\u56fe\u5bf9\u6297\u653b\u51fb\uff0c\u5c1d\u8bd5\u5feb\u901f\u68af\u5ea6\u7b26\u53f7\u653b\u51fb\uff08FGSM\uff09\u8ff7\u60d1MNIST\u5206\u7c7b\u5668 \u5bf9\u6297\u6027\u653b\u51fb\uff08Adversarial Attack\uff09 \u00b6 \u7531\u4e8e\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u8f93\u5165\u5f62\u5f0f\u662f\u4e00\u79cd\u6570\u503c\u578b\u5411\u91cf\uff08numeric vectors\uff09\uff0c\u6240\u4ee5\u4fbf\u80fd\u8bbe\u8ba1\u4e00\u79cd\u6709\u9488\u5bf9\u6027\u7684\u6570\u503c\u578b\u5411\u91cf\u8ba9\u673a\u5668\u5b66\u4e60\u6a21\u578b\u505a\u51fa\u8bef\u5224\uff0c\u8fd9\u4fbf\u88ab\u79f0\u4e3a\u5bf9\u6297\u6027\u653b\u51fb \u4ece\u6837\u672c\u7684\u89d2\u5ea6\u770b\uff0c\u88ab\u4fee\u6539\u8fc7\u540e\u7684\u5177\u6709\u9488\u5bf9\u6027\u7684\u6570\u503c\u578b\u5411\u91cf\u4fbf\u662f\u5bf9\u6297\u6837\u672c \u57fa\u4e8e\u653b\u51fb\u8005\u5148\u9a8c\u77e5\u8bc6\u4e0e\u653b\u51fb\u76ee\u6807\uff0c\u53ef\u4ee5\u5c06\u5bf9\u6297\u6027\u653b\u51fb\u5206\u4e3a\u4e0d\u540c\u7c7b\u578b\uff1a \u9ed1\u76d2\u653b\u51fb\uff08black-box\uff09\uff1a\u653b\u51fb\u8005\u53ea\u80fd\u8bbf\u95ee\u6a21\u578b\u7684\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u5e76\u4e14\u5bf9\u5e95\u5c42\u67b6\u6784\u6216\u6743\u91cd\u4e00\u65e0\u6240\u77e5 \u767d\u76d2\u653b\u51fb\uff08white-box\uff09\uff1a\u653b\u51fb\u8005\u5177\u6709\u5bf9\u6a21\u578b\u7684\u5b8c\u6574\u77e5\u8bc6\u548c\u8bbf\u95ee\u6743\u9650\uff0c\u5305\u62ec\u4f53\u7cfb\u7ed3\u6784\u3001\u8f93\u5165\u3001\u8f93\u51fa\u548c\u6743\u91cd \u9519\u8bef\u5206\u7c7b\uff08misclassification\uff09\uff1a\u53ea\u5e0c\u671b\u8f93\u51fa\u5206\u7c7b\u9519\u8bef\uff0c\u800c\u4e0d\u5728\u4e4e\u65b0\u7684\u5206\u7c7b\u662f\u4ec0\u4e48 \u6e90/\u76ee\u6807\u9519\u8bef\u5206\u7c7b\uff08source/target misclassification\uff09\uff1a\u5e0c\u671b\u66f4\u6539\u6700\u521d\u5c5e\u4e8e\u7279\u5b9a\u6e90\u7c7b\u522b\u7684\u56fe\u50cf\uff0c\u4ece\u800c\u5c06\u5176\u5206\u7c7b\u4e3a\u7279\u5b9a\u76ee\u6807\u7c7b\u522b \u57fa\u4e8e\u5bf9\u6297\u653b\u51fb\u9886\u57df\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u4e5f\u80fd\u5206\u6210\u591a\u7c7b\uff0c\u8f83\u4e3a\u666e\u904d\u7684\u662f \u56fe\u5bf9\u6297\u653b\u51fb FGSM\uff08Fast Gradient Sign Attack\uff09 \u00b6 \u5feb\u901f\u68af\u5ea6\u7b26\u53f7\u653b\u51fb\uff08Fast Gradient Sign Attack\uff09 1 \u662f\u6700\u65e9\u4e14\u6700\u6d41\u884c\u7684\u5bf9\u6297\u653b\u51fb\u65b9\u5f0f\u4e4b\u4e00 FGSM\u7684\u601d\u60f3\u5341\u5206\u76f4\u89c2\u4e14\u6709\u6548\uff1a\u5229\u7528\u795e\u7ecf\u7f51\u7edc\u7684\u5b66\u4e60\u65b9\u5f0f\uff0c\u5373\u68af\u5ea6\u6765\u8fdb\u884c\u653b\u51fb\uff0c\u5229\u7528\u6a21\u578b\u7684\u53cd\u5411\u4f20\u64ad\u68af\u5ea6\uff0c\u8c03\u6574\u6837\u672c\u6570\u636e\u4ee5\u6700\u5927\u5316\u635f\u5931 \u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c \\(x\\) \u662f\u88ab\u6b63\u786e\u5206\u7c7b\u4e3a\u201cpanda\u201d\u7684\u539f\u59cb\u8f93\u5165\u56fe\u50cf\uff0c \\(y\\) \u662f \\(x\\) \u7684\u771f\u5b9e\u6807\u7b7e\uff0c \\(\\mathbf \u03b8\\) \u4ee3\u8868\u6a21\u578b\u53c2\u6570\uff0c \\(J\uff08\\mathbf\u03b8 \uff0cx\uff0cy\uff09\\) \u662f\u7528\u4e8e\u8bad\u7ec3\u7f51\u7edc\u7684\u635f\u5931\u3002\u653b\u51fb\u5c06\u68af\u5ea6\u53cd\u6295\u5f71\u5230\u8f93\u5165\u6570\u636e\uff0c\u4ee5\u8ba1\u7b97 \\(\\nabla_{x}J\uff08\\mathbf \u03b8\uff0cx\uff0cy\uff09\\) \u3002\u7136\u540e\uff0c\u5b83\u5728\u65b9\u5411\uff08\u5373 \\(\\nabla_{x}J\uff08\\mathbf \u03b8\uff0cx \uff0cy\uff09\\) \u7b26\u53f7\uff09\u4e0a\u8c03\u6574\u8f93\u5165\u6570\u636e \\(x\\) \u4e00\u5b9a\u6b65\u5e45\uff08\u03b5\u6216\u56fe\u4e2d\u76840.007\uff09\u3002\u7ed3\u679c\u5f97\u5230\u7684\u6270\u52a8\u56fe\u50cf \\(x^{\\prime}\\) \u7136\u540e\u88ab\u76ee\u6807\u7f51\u7edc\u8bef\u5206\u7c7b\u4e3a\u201cgibbon\u201d \u4ee3\u7801\u5b9e\u73b0\uff08\u57fa\u4e8ePytorch & MNIST\uff09 \u00b6 \u8bad\u7ec3\u96c6\u4e0e\u6a21\u578b\u51c6\u5907 \u00b6 import modules from __future__ import print_function import torch import torch.nn as nn import torch.nn.functional as F import torch.optim as optim from torchvision import datasets , transforms import numpy as np import matplotlib.pyplot as plt # NOTE: This is a hack to get around \"User-agent\" limitations when downloading MNIST datasets # see, https://github.com/pytorch/vision/issues/3497 for more information from six.moves import urllib opener = urllib . request . build_opener () opener . addheaders = [( 'User-agent' , 'Mozilla/5.0' )] urllib . request . install_opener ( opener ) constant epsilons = [ 0 , .05 , .1 , .15 , .2 , .25 , .3 ] pretrained_model = \"data/lenet_mnist_model.pth\" use_cuda = True Network # LeNet Model definition class Net ( nn . Module ): def __init__ ( self ): super ( Net , self ) . __init__ () self . conv1 = nn . Conv2d ( 1 , 10 , kernel_size = 5 ) self . conv2 = nn . Conv2d ( 10 , 20 , kernel_size = 5 ) self . conv2_drop = nn . Dropout2d () self . fc1 = nn . Linear ( 320 , 50 ) self . fc2 = nn . Linear ( 50 , 10 ) def forward ( self , x ): x = F . relu ( F . max_pool2d ( self . conv1 ( x ), 2 )) x = F . relu ( F . max_pool2d ( self . conv2_drop ( self . conv2 ( x )), 2 )) x = x . view ( - 1 , 320 ) x = F . relu ( self . fc1 ( x )) x = F . dropout ( x , training = self . training ) x = self . fc2 ( x ) return F . log_softmax ( x , dim = 1 ) # MNIST Test dataset and dataloader declaration test_loader = torch . utils . data . DataLoader ( datasets . MNIST ( '../data' , train = False , download = True , transform = transforms . Compose ([ transforms . ToTensor (), ])), batch_size = 1 , shuffle = True ) # Define what device we are using print ( \"CUDA Available: \" , torch . cuda . is_available ()) device = torch . device ( \"cuda\" if ( use_cuda and torch . cuda . is_available ()) else \"cpu\" ) # Initialize the network model = Net () . to ( device ) # Load the pretrained model model . load_state_dict ( torch . load ( pretrained_model , map_location = 'cpu' )) # Set the model in evaluation mode. In this case this is for the Dropout layers model . eval () FGSM\u5b9e\u73b0 \u00b6 FGSM attack # FGSM attack code def fgsm_attack ( image , epsilon , data_grad ): # Collect the element-wise sign of the data gradient sign_data_grad = data_grad . sign () # Create the perturbed image by adjusting each pixel of the input image perturbed_image = image + epsilon * sign_data_grad # Adding clipping to maintain [0,1] range perturbed_image = torch . clamp ( perturbed_image , 0 , 1 ) # Return the perturbed image return perturbed_image \u6d4b\u8bd5\u51fd\u6570 \u00b6 measurements def test ( model , device , test_loader , epsilon ): # Accuracy counter correct = 0 adv_examples = [] # Loop over all examples in test set for data , target in test_loader : # Send the data and label to the device data , target = data . to ( device ), target . to ( device ) # Set requires_grad attribute of tensor. Important for Attack data . requires_grad = True # Forward pass the data through the model output = model ( data ) init_pred = output . max ( 1 , keepdim = True )[ 1 ] # get the index of the max log-probability # If the initial prediction is wrong, dont bother attacking, just move on if init_pred . item () != target . item (): continue # Calculate the loss loss = F . nll_loss ( output , target ) # Zero all existing gradients model . zero_grad () # Calculate gradients of model in backward pass loss . backward () # Collect datagrad data_grad = data . grad . data # Call FGSM Attack perturbed_data = fgsm_attack ( data , epsilon , data_grad ) # Re-classify the perturbed image output = model ( perturbed_data ) # Check for success final_pred = output . max ( 1 , keepdim = True )[ 1 ] # get the index of the max log-probability if final_pred . item () == target . item (): correct += 1 # Special case for saving 0 epsilon examples if ( epsilon == 0 ) and ( len ( adv_examples ) < 5 ): adv_ex = perturbed_data . squeeze () . detach () . cpu () . numpy () adv_examples . append ( ( init_pred . item (), final_pred . item (), adv_ex ) ) else : # Save some adv examples for visualization later if len ( adv_examples ) < 5 : adv_ex = perturbed_data . squeeze () . detach () . cpu () . numpy () adv_examples . append ( ( init_pred . item (), final_pred . item (), adv_ex ) ) # Calculate final accuracy for this epsilon final_acc = correct / float ( len ( test_loader )) print ( \"Epsilon: {} \\t Test Accuracy = {} / {} = {} \" . format ( epsilon , correct , len ( test_loader ), final_acc )) # Return the accuracy and an adversarial example return final_acc , adv_examples \u6d4b\u8bd5 \u00b6 test accuracies = [] examples = [] # Run test for each epsilon for eps in epsilons : acc , ex = test ( model , device , test_loader , eps ) accuracies . append ( acc ) examples . append ( ex ) \u53ef\u89c6\u5316 \u00b6 visualization plt . figure ( figsize = ( 5 , 5 )) plt . plot ( epsilons , accuracies , \"*-\" ) plt . yticks ( np . arange ( 0 , 1.1 , step = 0.1 )) plt . xticks ( np . arange ( 0 , .35 , step = 0.05 )) plt . title ( \"Accuracy vs Epsilon\" ) plt . xlabel ( \"Epsilon\" ) plt . ylabel ( \"Accuracy\" ) plt . show () \u5bf9\u6297\u6837\u672c\u90e8\u5206\u5c55\u793a \u00b6 Python # Plot several examples of adversarial samples at each epsilon cnt = 0 plt . figure ( figsize = ( 8 , 10 )) for i in range ( len ( epsilons )): for j in range ( len ( examples [ i ])): cnt += 1 plt . subplot ( len ( epsilons ), len ( examples [ 0 ]), cnt ) plt . xticks ([], []) plt . yticks ([], []) if j == 0 : plt . ylabel ( \"Eps: {} \" . format ( epsilons [ i ]), fontsize = 14 ) orig , adv , ex = examples [ i ][ j ] plt . title ( \" {} -> {} \" . format ( orig , adv )) plt . imshow ( ex , cmap = \"gray\" ) plt . tight_layout () plt . show () Goodfellow I J, Shlens J, Szegedy C. Explaining and harnessing adversarial examples[J]. arXiv preprint arXiv:1412.6572, 2014 \u21a9","title":"FGSM\u653b\u51fb"},{"location":"ctf/ch2/#fgsmmnist","text":"\u8bb0\u5f55\u4e00\u6b21\u56fe\u5bf9\u6297\u653b\u51fb\uff0c\u5c1d\u8bd5\u5feb\u901f\u68af\u5ea6\u7b26\u53f7\u653b\u51fb\uff08FGSM\uff09\u8ff7\u60d1MNIST\u5206\u7c7b\u5668","title":"FGSM\u7b80\u6613\u751f\u6210MNIST\u5bf9\u6297\u6837\u672c"},{"location":"ctf/ch2/#adversarial-attack","text":"\u7531\u4e8e\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u8f93\u5165\u5f62\u5f0f\u662f\u4e00\u79cd\u6570\u503c\u578b\u5411\u91cf\uff08numeric vectors\uff09\uff0c\u6240\u4ee5\u4fbf\u80fd\u8bbe\u8ba1\u4e00\u79cd\u6709\u9488\u5bf9\u6027\u7684\u6570\u503c\u578b\u5411\u91cf\u8ba9\u673a\u5668\u5b66\u4e60\u6a21\u578b\u505a\u51fa\u8bef\u5224\uff0c\u8fd9\u4fbf\u88ab\u79f0\u4e3a\u5bf9\u6297\u6027\u653b\u51fb \u4ece\u6837\u672c\u7684\u89d2\u5ea6\u770b\uff0c\u88ab\u4fee\u6539\u8fc7\u540e\u7684\u5177\u6709\u9488\u5bf9\u6027\u7684\u6570\u503c\u578b\u5411\u91cf\u4fbf\u662f\u5bf9\u6297\u6837\u672c \u57fa\u4e8e\u653b\u51fb\u8005\u5148\u9a8c\u77e5\u8bc6\u4e0e\u653b\u51fb\u76ee\u6807\uff0c\u53ef\u4ee5\u5c06\u5bf9\u6297\u6027\u653b\u51fb\u5206\u4e3a\u4e0d\u540c\u7c7b\u578b\uff1a \u9ed1\u76d2\u653b\u51fb\uff08black-box\uff09\uff1a\u653b\u51fb\u8005\u53ea\u80fd\u8bbf\u95ee\u6a21\u578b\u7684\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u5e76\u4e14\u5bf9\u5e95\u5c42\u67b6\u6784\u6216\u6743\u91cd\u4e00\u65e0\u6240\u77e5 \u767d\u76d2\u653b\u51fb\uff08white-box\uff09\uff1a\u653b\u51fb\u8005\u5177\u6709\u5bf9\u6a21\u578b\u7684\u5b8c\u6574\u77e5\u8bc6\u548c\u8bbf\u95ee\u6743\u9650\uff0c\u5305\u62ec\u4f53\u7cfb\u7ed3\u6784\u3001\u8f93\u5165\u3001\u8f93\u51fa\u548c\u6743\u91cd \u9519\u8bef\u5206\u7c7b\uff08misclassification\uff09\uff1a\u53ea\u5e0c\u671b\u8f93\u51fa\u5206\u7c7b\u9519\u8bef\uff0c\u800c\u4e0d\u5728\u4e4e\u65b0\u7684\u5206\u7c7b\u662f\u4ec0\u4e48 \u6e90/\u76ee\u6807\u9519\u8bef\u5206\u7c7b\uff08source/target misclassification\uff09\uff1a\u5e0c\u671b\u66f4\u6539\u6700\u521d\u5c5e\u4e8e\u7279\u5b9a\u6e90\u7c7b\u522b\u7684\u56fe\u50cf\uff0c\u4ece\u800c\u5c06\u5176\u5206\u7c7b\u4e3a\u7279\u5b9a\u76ee\u6807\u7c7b\u522b \u57fa\u4e8e\u5bf9\u6297\u653b\u51fb\u9886\u57df\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u4e5f\u80fd\u5206\u6210\u591a\u7c7b\uff0c\u8f83\u4e3a\u666e\u904d\u7684\u662f \u56fe\u5bf9\u6297\u653b\u51fb","title":"\u5bf9\u6297\u6027\u653b\u51fb\uff08Adversarial Attack\uff09"},{"location":"ctf/ch2/#fgsmfast-gradient-sign-attack","text":"\u5feb\u901f\u68af\u5ea6\u7b26\u53f7\u653b\u51fb\uff08Fast Gradient Sign Attack\uff09 1 \u662f\u6700\u65e9\u4e14\u6700\u6d41\u884c\u7684\u5bf9\u6297\u653b\u51fb\u65b9\u5f0f\u4e4b\u4e00 FGSM\u7684\u601d\u60f3\u5341\u5206\u76f4\u89c2\u4e14\u6709\u6548\uff1a\u5229\u7528\u795e\u7ecf\u7f51\u7edc\u7684\u5b66\u4e60\u65b9\u5f0f\uff0c\u5373\u68af\u5ea6\u6765\u8fdb\u884c\u653b\u51fb\uff0c\u5229\u7528\u6a21\u578b\u7684\u53cd\u5411\u4f20\u64ad\u68af\u5ea6\uff0c\u8c03\u6574\u6837\u672c\u6570\u636e\u4ee5\u6700\u5927\u5316\u635f\u5931 \u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c \\(x\\) \u662f\u88ab\u6b63\u786e\u5206\u7c7b\u4e3a\u201cpanda\u201d\u7684\u539f\u59cb\u8f93\u5165\u56fe\u50cf\uff0c \\(y\\) \u662f \\(x\\) \u7684\u771f\u5b9e\u6807\u7b7e\uff0c \\(\\mathbf \u03b8\\) \u4ee3\u8868\u6a21\u578b\u53c2\u6570\uff0c \\(J\uff08\\mathbf\u03b8 \uff0cx\uff0cy\uff09\\) \u662f\u7528\u4e8e\u8bad\u7ec3\u7f51\u7edc\u7684\u635f\u5931\u3002\u653b\u51fb\u5c06\u68af\u5ea6\u53cd\u6295\u5f71\u5230\u8f93\u5165\u6570\u636e\uff0c\u4ee5\u8ba1\u7b97 \\(\\nabla_{x}J\uff08\\mathbf \u03b8\uff0cx\uff0cy\uff09\\) \u3002\u7136\u540e\uff0c\u5b83\u5728\u65b9\u5411\uff08\u5373 \\(\\nabla_{x}J\uff08\\mathbf \u03b8\uff0cx \uff0cy\uff09\\) \u7b26\u53f7\uff09\u4e0a\u8c03\u6574\u8f93\u5165\u6570\u636e \\(x\\) \u4e00\u5b9a\u6b65\u5e45\uff08\u03b5\u6216\u56fe\u4e2d\u76840.007\uff09\u3002\u7ed3\u679c\u5f97\u5230\u7684\u6270\u52a8\u56fe\u50cf \\(x^{\\prime}\\) \u7136\u540e\u88ab\u76ee\u6807\u7f51\u7edc\u8bef\u5206\u7c7b\u4e3a\u201cgibbon\u201d","title":"FGSM\uff08Fast Gradient Sign Attack\uff09"},{"location":"ctf/ch2/#pytorch-mnist","text":"","title":"\u4ee3\u7801\u5b9e\u73b0\uff08\u57fa\u4e8ePytorch &amp; MNIST\uff09"},{"location":"ctf/ch2/#_1","text":"import modules from __future__ import print_function import torch import torch.nn as nn import torch.nn.functional as F import torch.optim as optim from torchvision import datasets , transforms import numpy as np import matplotlib.pyplot as plt # NOTE: This is a hack to get around \"User-agent\" limitations when downloading MNIST datasets # see, https://github.com/pytorch/vision/issues/3497 for more information from six.moves import urllib opener = urllib . request . build_opener () opener . addheaders = [( 'User-agent' , 'Mozilla/5.0' )] urllib . request . install_opener ( opener ) constant epsilons = [ 0 , .05 , .1 , .15 , .2 , .25 , .3 ] pretrained_model = \"data/lenet_mnist_model.pth\" use_cuda = True Network # LeNet Model definition class Net ( nn . Module ): def __init__ ( self ): super ( Net , self ) . __init__ () self . conv1 = nn . Conv2d ( 1 , 10 , kernel_size = 5 ) self . conv2 = nn . Conv2d ( 10 , 20 , kernel_size = 5 ) self . conv2_drop = nn . Dropout2d () self . fc1 = nn . Linear ( 320 , 50 ) self . fc2 = nn . Linear ( 50 , 10 ) def forward ( self , x ): x = F . relu ( F . max_pool2d ( self . conv1 ( x ), 2 )) x = F . relu ( F . max_pool2d ( self . conv2_drop ( self . conv2 ( x )), 2 )) x = x . view ( - 1 , 320 ) x = F . relu ( self . fc1 ( x )) x = F . dropout ( x , training = self . training ) x = self . fc2 ( x ) return F . log_softmax ( x , dim = 1 ) # MNIST Test dataset and dataloader declaration test_loader = torch . utils . data . DataLoader ( datasets . MNIST ( '../data' , train = False , download = True , transform = transforms . Compose ([ transforms . ToTensor (), ])), batch_size = 1 , shuffle = True ) # Define what device we are using print ( \"CUDA Available: \" , torch . cuda . is_available ()) device = torch . device ( \"cuda\" if ( use_cuda and torch . cuda . is_available ()) else \"cpu\" ) # Initialize the network model = Net () . to ( device ) # Load the pretrained model model . load_state_dict ( torch . load ( pretrained_model , map_location = 'cpu' )) # Set the model in evaluation mode. In this case this is for the Dropout layers model . eval ()","title":"\u8bad\u7ec3\u96c6\u4e0e\u6a21\u578b\u51c6\u5907"},{"location":"ctf/ch2/#fgsm","text":"FGSM attack # FGSM attack code def fgsm_attack ( image , epsilon , data_grad ): # Collect the element-wise sign of the data gradient sign_data_grad = data_grad . sign () # Create the perturbed image by adjusting each pixel of the input image perturbed_image = image + epsilon * sign_data_grad # Adding clipping to maintain [0,1] range perturbed_image = torch . clamp ( perturbed_image , 0 , 1 ) # Return the perturbed image return perturbed_image","title":"FGSM\u5b9e\u73b0"},{"location":"ctf/ch2/#_2","text":"measurements def test ( model , device , test_loader , epsilon ): # Accuracy counter correct = 0 adv_examples = [] # Loop over all examples in test set for data , target in test_loader : # Send the data and label to the device data , target = data . to ( device ), target . to ( device ) # Set requires_grad attribute of tensor. Important for Attack data . requires_grad = True # Forward pass the data through the model output = model ( data ) init_pred = output . max ( 1 , keepdim = True )[ 1 ] # get the index of the max log-probability # If the initial prediction is wrong, dont bother attacking, just move on if init_pred . item () != target . item (): continue # Calculate the loss loss = F . nll_loss ( output , target ) # Zero all existing gradients model . zero_grad () # Calculate gradients of model in backward pass loss . backward () # Collect datagrad data_grad = data . grad . data # Call FGSM Attack perturbed_data = fgsm_attack ( data , epsilon , data_grad ) # Re-classify the perturbed image output = model ( perturbed_data ) # Check for success final_pred = output . max ( 1 , keepdim = True )[ 1 ] # get the index of the max log-probability if final_pred . item () == target . item (): correct += 1 # Special case for saving 0 epsilon examples if ( epsilon == 0 ) and ( len ( adv_examples ) < 5 ): adv_ex = perturbed_data . squeeze () . detach () . cpu () . numpy () adv_examples . append ( ( init_pred . item (), final_pred . item (), adv_ex ) ) else : # Save some adv examples for visualization later if len ( adv_examples ) < 5 : adv_ex = perturbed_data . squeeze () . detach () . cpu () . numpy () adv_examples . append ( ( init_pred . item (), final_pred . item (), adv_ex ) ) # Calculate final accuracy for this epsilon final_acc = correct / float ( len ( test_loader )) print ( \"Epsilon: {} \\t Test Accuracy = {} / {} = {} \" . format ( epsilon , correct , len ( test_loader ), final_acc )) # Return the accuracy and an adversarial example return final_acc , adv_examples","title":"\u6d4b\u8bd5\u51fd\u6570"},{"location":"ctf/ch2/#_3","text":"test accuracies = [] examples = [] # Run test for each epsilon for eps in epsilons : acc , ex = test ( model , device , test_loader , eps ) accuracies . append ( acc ) examples . append ( ex )","title":"\u6d4b\u8bd5"},{"location":"ctf/ch2/#_4","text":"visualization plt . figure ( figsize = ( 5 , 5 )) plt . plot ( epsilons , accuracies , \"*-\" ) plt . yticks ( np . arange ( 0 , 1.1 , step = 0.1 )) plt . xticks ( np . arange ( 0 , .35 , step = 0.05 )) plt . title ( \"Accuracy vs Epsilon\" ) plt . xlabel ( \"Epsilon\" ) plt . ylabel ( \"Accuracy\" ) plt . show ()","title":"\u53ef\u89c6\u5316"},{"location":"ctf/ch2/#_5","text":"Python # Plot several examples of adversarial samples at each epsilon cnt = 0 plt . figure ( figsize = ( 8 , 10 )) for i in range ( len ( epsilons )): for j in range ( len ( examples [ i ])): cnt += 1 plt . subplot ( len ( epsilons ), len ( examples [ 0 ]), cnt ) plt . xticks ([], []) plt . yticks ([], []) if j == 0 : plt . ylabel ( \"Eps: {} \" . format ( epsilons [ i ]), fontsize = 14 ) orig , adv , ex = examples [ i ][ j ] plt . title ( \" {} -> {} \" . format ( orig , adv )) plt . imshow ( ex , cmap = \"gray\" ) plt . tight_layout () plt . show () Goodfellow I J, Shlens J, Szegedy C. Explaining and harnessing adversarial examples[J]. arXiv preprint arXiv:1412.6572, 2014 \u21a9","title":"\u5bf9\u6297\u6837\u672c\u90e8\u5206\u5c55\u793a"},{"location":"others/blog/","text":"\u57fa\u4e8e mkdocs-material \u7684 Blog \u5de5\u4f5c\u6d41 \u00b6 \u665a\u4e0a\u8ddf\u5efa\u7b51\u7cfb\u5927\u795e\u804a\u5929\uff0c\u8c08\u5230\u5982\u4f55\u642d\u5efa\u8fd9\u4e2aBlog\u7684\uff0c\u4e8e\u662f\u8bb0\u5f55\u4e00\u4e0b\u81ea\u5df1\u6478\u7d22\u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u8bfb\u8005\u611f\u5174\u8da3\u4e5f\u53ef\u4ee5\u81ea\u5df1\u8bd5\u8bd5 \u521d\u8877 \u00b6 \u8ddf\u5927\u795e\u804a\u5929\u7684\u65f6\u95f4\uff0c\u662f\u6109\u5feb\u4e0e\u8f7b\u677e\u7684\uff0c\u4f46\u4e5f\u610f\u8bc6\u5230\u4e0d\u662f\u6240\u6709\u4eba\u90fd\u5bf9\u521b\u5efa\u4e00\u4e2a\u6258\u7ba1\u5728Gitub Pages\u4e0a\u7684\u9759\u6001\u9875\u9762\u611f\u5174\u8da3\u3002\u8fd9\u65e2\u4e0d\u662f\u7b80\u5386\u7684\u52a0\u5206\u9879\uff0c\u4e5f\u4e0d\u662fSRTP\u7684\u521b\u65b0\u70b9\uff0c\u66f4\u4e0d\u662f\u4fdd\u7814\u7684\u7ee9\u70b9\uff0c\u751a\u81f3\u5bf9\u4e8e\u975e\u8ba1\u7b97\u673a\u7c7b\u7684\u5b66\u751f\uff08\u4f8b\u5982\u5efa\u7b51\uff09\uff0c\u5927\u795e\u8bf4\u4ed6\u4eec\u66f4\u503e\u5411\u4e8e\u53bb\u4e13\u95e8\u7684\u7f51\u7ad9\u4e0e\u516c\u4f17\u53f7\u83b7\u53d6\u4e1a\u754c\u76f8\u5173\u7684\u8d44\u8baf \u4e8e\u662f\u6700\u540e\u4e00\u4e2a\u7acb\u610f\u2014\u2014\u7528\u4e8e\u5411\u4ed6\u4eba\u5c55\u793a\uff0c\u591a\u591a\u5c11\u5c11\u4e5f\u88ab\u5426\u51b3 \u4f46\u6211\u5f88\u559c\u6b22\uff0c\u56e0\u4e3a\u6211\u5199\u5b57\u5f88\u6162\uff0c\u6253\u5b57\u5c1a\u53ef\u3002\u914d\u5408 latex \u4e0e markdown \uff0c\u6211\u80fd\u4e00\u70b9\u70b9\u628a\u81ea\u5df1\u5728\u73b0\u5b9e\u4e0e\u7f51\u7edc\u7684\u6536\u83b7\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u6837\u5728\u5f88\u4e45\u5f88\u4e45\u4e4b\u540e\uff0c\u6211\u60f3\u62ff\u70b9\u4e1c\u897f\u8bc1\u660e\u81ea\u5df1\u505a\u4e86\u70b9\u4ec0\u4e48\u7684\u65f6\u5019\uff0c\u597d\u6b79\u8fd8\u6709\u4e2a\u8fd9\u4e2a \u5176\u5b9e\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u4e5f\u7b97\u804a\u4ee5\u81ea\u6170\u7684\u624b\u6bb5\uff0c\u4e5f\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6211\u79c1\u5fc3\u5e0c\u671b\u66f4\u591a\u7684\u4eba\u80fd\u770b\u5230\u8fd9\u4e2a\u535a\u5ba2\uff0c\u770b\u5230\u5bf9\u4e16\u754c\u65e0\u6b62\u65e0\u606f\u7684\u63a2\u7d22\u613f\u671b \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u57fa\u672c\u7684\u547d\u4ee4\u884c\u64cd\u4f5c Git\u4f7f\u7528 \u4efb\u610f\u4ee3\u7801\u7f16\u8f91\u5668\u7684\u4f7f\u7528 Github\u57fa\u672c\u4f7f\u7528 mkdocs-material \u5b89\u88c5 \u00b6 \u5177\u4f53\u53c2\u8003\u5b98\u7f51Installation\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/getting-started/ \u521b\u5efa\u4ed3\u5e93 \u00b6 \u5728GitHub\u4e0a\u521b\u5efa\u4e00\u4e2arepository \u5728Repository name\u4e00\u680f\u5199\u4e0a <\u4f60\u7684\u7528\u6237\u540d>.github.io \uff0c\u6b64\u65f6\u5b83\u5e94\u8be5\u4f1a\u63d0\u9192\u4f60\u81ea\u52a8\u542f\u52a8\u4e86github-pages\u670d\u52a1 Git\u540c\u6b65\u4ed3\u5e93\u5e76\u521b\u5efamkdocs\u9879\u76ee \u00b6 \u5728\u672c\u5730\u8fdb\u884cgit clone\uff0c\u5e76\u521d\u59cb\u5316\u9879\u76ee\uff0c\u5177\u4f53\u53c2\u8003Creating your site\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/creating-your-site/ \u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e \u00b6 \u9664\u5f00\u5b98\u7f51\u53c2\u8003\u7684\u8bbe\u7f6e YAML theme : name : material \u6709\u76f8\u5f53\u591a\u7684\u8bbe\u7f6e\u53ef\u4ee5\u81ea\u884c\u8c03\u8282\uff0c\u4e0b\u4e3a\u4e2a\u4eba\u4e60\u60ef\u7684\u7684 mkdocs.yml \u8bbe\u7f6e\uff0c\u5b8c\u6574\u6e90\u6587\u4ef6\u4e3a mkdocs.yml \u57fa\u7840\u754c\u9762 \u00b6 YAML site_name : MZY Blog theme : name : material custom_dir : overrides language : zh logo : assets/logo.png favicon : assets/favicon.png palette : - scheme : default primary : deep purple accent : deep purple toggle : name : Switch to light mode icon : material/brightness-7 - scheme : slate primary : deep purple accent : deep purple toggle : name : Switch to dark mode icon : material/brightness-4 features : - navigation.instant - navigation.tracking - navigation.tabs - navigation.expand - navigation.top - toc.follow # - header.autohide # - content.action.edit # - content.action.view repo_url : https://github.com/Alexair059/Alexair059.github.io repo_name : Alexair059.github.io edit_uri : edit/main/docs/ extra : social : - icon : fontawesome/brands/github link : https://github.com/Alexair059 name : My Github - icon : fontawesome/solid/paper-plane link : mailto:alexair059@gmail.com name : My Email copyright : Copyright &copy; 2020 - 2023 Alexair \u8bed\u6cd5\u652f\u6301 \u00b6 YAML markdown_extensions : # Python Markdown - abbr - admonition - attr_list - def_list - footnotes - md_in_html - toc : permalink : true # Python Markdown Extensions - pymdownx.arithmatex : generic : true - pymdownx.betterem - pymdownx.caret - pymdownx.mark - pymdownx.tilde - pymdownx.details - pymdownx.highlight : auto_title : true - pymdownx.superfences - pymdownx.inlinehilite - pymdownx.keys - pymdownx.smartsymbols - pymdownx.tabbed : alternate_style : true - pymdownx.tasklist : custom_checkbox : true \u81ea\u5b9a\u4e49CSS\u7c7b\u4e0eJS\u7c7b \u00b6 YAML extra_javascript : - javascripts/mathjax.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js extra_css : - css/custom.css \u81ea\u5b9a\u4e49\u63d2\u4ef6 \u00b6 YAML plugins : - search : {} - encryptcontent : title_prefix : '[\u9650\u5236]' summary : '[\u8be5\u5185\u5bb9\u5df2\u88ab\u52a0\u5bc6\u4fdd\u62a4]' encryption_info_message : '\u8054\u7cfb\u535a\u4e3b\u4ee5\u83b7\u5f97\u6743\u9650' placeholder : 'Password' decryption_failure_message : '\u5bc6\u7801\u9519\u8bef' # password_button: True # password_button_text: 'unlock' input_class : input-form # button_class: confirm-button - git-revision-date-localized : enable_creation_date : true type : timeago \u540c\u6b65\u7ad9\u70b9\u4e0e\u9879\u76ee\uff08\u624b\u52a8\uff09 \u00b6 \u5177\u4f53\u53ef\u53c2\u8003\u5b98\u7f51Publishing your site\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/publishing-your-site/ \u5728\u9879\u76ee\u6839\u76ee\u5f55\u8f93\u5165 Bash mkdocs gh-deploy \u540c\u6b65\u7ad9\u70b9\uff0c\u518d\u8fdb\u884cGit\u540c\u6b65\u5373\u53ef \u540c\u6b65\u7ad9\u70b9\u4e0e\u9879\u76ee\uff08\u81ea\u52a8 | \u57fa\u4e8eGithub Action\uff09 \u00b6 \u901a\u8fc7Github Action\u8bbe\u5b9a\u5de5\u4f5c\u6d41\uff0c\u53ef\u4ee5\u4ec5\u9700\u540c\u6b65repo\u800c\u4e0d\u7528\u81ea\u5df1\u7f16\u8bd1\uff0c\u5e76\u5728mkdocs-material\u4e0a\u8fd8\u63d0\u4f9b\u7f51\u9875\u7f16\u8f91\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u8bf4\u76f8\u5f53\u53cb\u597d\u4e86 \u5177\u4f53\u53ef\u53c2\u8003\u5b98\u7f51Publishing your site\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/publishing-your-site/ Warning \u4e2a\u4eba\u7ecf\u9a8c\u8868\u793a\uff0c\u5982\u679c\u4f60\u542f\u7528\u4e86\u57fa\u4e8eGithub Action\u7684\u90e8\u7f72\u65b9\u5f0f\uff0c\u9875\u5c3e\u7684\u6700\u540e\u521b\u5efa\u65f6\u95f4\u53ef\u80fd\u5f02\u5e38\uff0c\u53d8\u5f97\u4e0e\u6700\u540e\u66f4\u65b0\u65f6\u95f4\u4e00\u81f4\uff0c\u8bf7\u914c\u60c5\u8003\u8651\u542f\u7528","title":"Blog\u642d\u5efa"},{"location":"others/blog/#mkdocs-material-blog","text":"\u665a\u4e0a\u8ddf\u5efa\u7b51\u7cfb\u5927\u795e\u804a\u5929\uff0c\u8c08\u5230\u5982\u4f55\u642d\u5efa\u8fd9\u4e2aBlog\u7684\uff0c\u4e8e\u662f\u8bb0\u5f55\u4e00\u4e0b\u81ea\u5df1\u6478\u7d22\u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u8bfb\u8005\u611f\u5174\u8da3\u4e5f\u53ef\u4ee5\u81ea\u5df1\u8bd5\u8bd5","title":"\u57fa\u4e8e mkdocs-material \u7684 Blog \u5de5\u4f5c\u6d41"},{"location":"others/blog/#_1","text":"\u8ddf\u5927\u795e\u804a\u5929\u7684\u65f6\u95f4\uff0c\u662f\u6109\u5feb\u4e0e\u8f7b\u677e\u7684\uff0c\u4f46\u4e5f\u610f\u8bc6\u5230\u4e0d\u662f\u6240\u6709\u4eba\u90fd\u5bf9\u521b\u5efa\u4e00\u4e2a\u6258\u7ba1\u5728Gitub Pages\u4e0a\u7684\u9759\u6001\u9875\u9762\u611f\u5174\u8da3\u3002\u8fd9\u65e2\u4e0d\u662f\u7b80\u5386\u7684\u52a0\u5206\u9879\uff0c\u4e5f\u4e0d\u662fSRTP\u7684\u521b\u65b0\u70b9\uff0c\u66f4\u4e0d\u662f\u4fdd\u7814\u7684\u7ee9\u70b9\uff0c\u751a\u81f3\u5bf9\u4e8e\u975e\u8ba1\u7b97\u673a\u7c7b\u7684\u5b66\u751f\uff08\u4f8b\u5982\u5efa\u7b51\uff09\uff0c\u5927\u795e\u8bf4\u4ed6\u4eec\u66f4\u503e\u5411\u4e8e\u53bb\u4e13\u95e8\u7684\u7f51\u7ad9\u4e0e\u516c\u4f17\u53f7\u83b7\u53d6\u4e1a\u754c\u76f8\u5173\u7684\u8d44\u8baf \u4e8e\u662f\u6700\u540e\u4e00\u4e2a\u7acb\u610f\u2014\u2014\u7528\u4e8e\u5411\u4ed6\u4eba\u5c55\u793a\uff0c\u591a\u591a\u5c11\u5c11\u4e5f\u88ab\u5426\u51b3 \u4f46\u6211\u5f88\u559c\u6b22\uff0c\u56e0\u4e3a\u6211\u5199\u5b57\u5f88\u6162\uff0c\u6253\u5b57\u5c1a\u53ef\u3002\u914d\u5408 latex \u4e0e markdown \uff0c\u6211\u80fd\u4e00\u70b9\u70b9\u628a\u81ea\u5df1\u5728\u73b0\u5b9e\u4e0e\u7f51\u7edc\u7684\u6536\u83b7\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u6837\u5728\u5f88\u4e45\u5f88\u4e45\u4e4b\u540e\uff0c\u6211\u60f3\u62ff\u70b9\u4e1c\u897f\u8bc1\u660e\u81ea\u5df1\u505a\u4e86\u70b9\u4ec0\u4e48\u7684\u65f6\u5019\uff0c\u597d\u6b79\u8fd8\u6709\u4e2a\u8fd9\u4e2a \u5176\u5b9e\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u4e5f\u7b97\u804a\u4ee5\u81ea\u6170\u7684\u624b\u6bb5\uff0c\u4e5f\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6211\u79c1\u5fc3\u5e0c\u671b\u66f4\u591a\u7684\u4eba\u80fd\u770b\u5230\u8fd9\u4e2a\u535a\u5ba2\uff0c\u770b\u5230\u5bf9\u4e16\u754c\u65e0\u6b62\u65e0\u606f\u7684\u63a2\u7d22\u613f\u671b","title":"\u521d\u8877"},{"location":"others/blog/#_2","text":"\u57fa\u672c\u7684\u547d\u4ee4\u884c\u64cd\u4f5c Git\u4f7f\u7528 \u4efb\u610f\u4ee3\u7801\u7f16\u8f91\u5668\u7684\u4f7f\u7528 Github\u57fa\u672c\u4f7f\u7528","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"others/blog/#mkdocs-material","text":"\u5177\u4f53\u53c2\u8003\u5b98\u7f51Installation\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/getting-started/","title":"mkdocs-material \u5b89\u88c5"},{"location":"others/blog/#_3","text":"\u5728GitHub\u4e0a\u521b\u5efa\u4e00\u4e2arepository \u5728Repository name\u4e00\u680f\u5199\u4e0a <\u4f60\u7684\u7528\u6237\u540d>.github.io \uff0c\u6b64\u65f6\u5b83\u5e94\u8be5\u4f1a\u63d0\u9192\u4f60\u81ea\u52a8\u542f\u52a8\u4e86github-pages\u670d\u52a1","title":"\u521b\u5efa\u4ed3\u5e93"},{"location":"others/blog/#gitmkdocs","text":"\u5728\u672c\u5730\u8fdb\u884cgit clone\uff0c\u5e76\u521d\u59cb\u5316\u9879\u76ee\uff0c\u5177\u4f53\u53c2\u8003Creating your site\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/creating-your-site/","title":"Git\u540c\u6b65\u4ed3\u5e93\u5e76\u521b\u5efamkdocs\u9879\u76ee"},{"location":"others/blog/#_4","text":"\u9664\u5f00\u5b98\u7f51\u53c2\u8003\u7684\u8bbe\u7f6e YAML theme : name : material \u6709\u76f8\u5f53\u591a\u7684\u8bbe\u7f6e\u53ef\u4ee5\u81ea\u884c\u8c03\u8282\uff0c\u4e0b\u4e3a\u4e2a\u4eba\u4e60\u60ef\u7684\u7684 mkdocs.yml \u8bbe\u7f6e\uff0c\u5b8c\u6574\u6e90\u6587\u4ef6\u4e3a mkdocs.yml","title":"\u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e"},{"location":"others/blog/#_5","text":"YAML site_name : MZY Blog theme : name : material custom_dir : overrides language : zh logo : assets/logo.png favicon : assets/favicon.png palette : - scheme : default primary : deep purple accent : deep purple toggle : name : Switch to light mode icon : material/brightness-7 - scheme : slate primary : deep purple accent : deep purple toggle : name : Switch to dark mode icon : material/brightness-4 features : - navigation.instant - navigation.tracking - navigation.tabs - navigation.expand - navigation.top - toc.follow # - header.autohide # - content.action.edit # - content.action.view repo_url : https://github.com/Alexair059/Alexair059.github.io repo_name : Alexair059.github.io edit_uri : edit/main/docs/ extra : social : - icon : fontawesome/brands/github link : https://github.com/Alexair059 name : My Github - icon : fontawesome/solid/paper-plane link : mailto:alexair059@gmail.com name : My Email copyright : Copyright &copy; 2020 - 2023 Alexair","title":"\u57fa\u7840\u754c\u9762"},{"location":"others/blog/#_6","text":"YAML markdown_extensions : # Python Markdown - abbr - admonition - attr_list - def_list - footnotes - md_in_html - toc : permalink : true # Python Markdown Extensions - pymdownx.arithmatex : generic : true - pymdownx.betterem - pymdownx.caret - pymdownx.mark - pymdownx.tilde - pymdownx.details - pymdownx.highlight : auto_title : true - pymdownx.superfences - pymdownx.inlinehilite - pymdownx.keys - pymdownx.smartsymbols - pymdownx.tabbed : alternate_style : true - pymdownx.tasklist : custom_checkbox : true","title":"\u8bed\u6cd5\u652f\u6301"},{"location":"others/blog/#cssjs","text":"YAML extra_javascript : - javascripts/mathjax.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js extra_css : - css/custom.css","title":"\u81ea\u5b9a\u4e49CSS\u7c7b\u4e0eJS\u7c7b"},{"location":"others/blog/#_7","text":"YAML plugins : - search : {} - encryptcontent : title_prefix : '[\u9650\u5236]' summary : '[\u8be5\u5185\u5bb9\u5df2\u88ab\u52a0\u5bc6\u4fdd\u62a4]' encryption_info_message : '\u8054\u7cfb\u535a\u4e3b\u4ee5\u83b7\u5f97\u6743\u9650' placeholder : 'Password' decryption_failure_message : '\u5bc6\u7801\u9519\u8bef' # password_button: True # password_button_text: 'unlock' input_class : input-form # button_class: confirm-button - git-revision-date-localized : enable_creation_date : true type : timeago","title":"\u81ea\u5b9a\u4e49\u63d2\u4ef6"},{"location":"others/blog/#_8","text":"\u5177\u4f53\u53ef\u53c2\u8003\u5b98\u7f51Publishing your site\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/publishing-your-site/ \u5728\u9879\u76ee\u6839\u76ee\u5f55\u8f93\u5165 Bash mkdocs gh-deploy \u540c\u6b65\u7ad9\u70b9\uff0c\u518d\u8fdb\u884cGit\u540c\u6b65\u5373\u53ef","title":"\u540c\u6b65\u7ad9\u70b9\u4e0e\u9879\u76ee\uff08\u624b\u52a8\uff09"},{"location":"others/blog/#github-action","text":"\u901a\u8fc7Github Action\u8bbe\u5b9a\u5de5\u4f5c\u6d41\uff0c\u53ef\u4ee5\u4ec5\u9700\u540c\u6b65repo\u800c\u4e0d\u7528\u81ea\u5df1\u7f16\u8bd1\uff0c\u5e76\u5728mkdocs-material\u4e0a\u8fd8\u63d0\u4f9b\u7f51\u9875\u7f16\u8f91\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u8bf4\u76f8\u5f53\u53cb\u597d\u4e86 \u5177\u4f53\u53ef\u53c2\u8003\u5b98\u7f51Publishing your site\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/publishing-your-site/ Warning \u4e2a\u4eba\u7ecf\u9a8c\u8868\u793a\uff0c\u5982\u679c\u4f60\u542f\u7528\u4e86\u57fa\u4e8eGithub Action\u7684\u90e8\u7f72\u65b9\u5f0f\uff0c\u9875\u5c3e\u7684\u6700\u540e\u521b\u5efa\u65f6\u95f4\u53ef\u80fd\u5f02\u5e38\uff0c\u53d8\u5f97\u4e0e\u6700\u540e\u66f4\u65b0\u65f6\u95f4\u4e00\u81f4\uff0c\u8bf7\u914c\u60c5\u8003\u8651\u542f\u7528","title":"\u540c\u6b65\u7ad9\u70b9\u4e0e\u9879\u76ee\uff08\u81ea\u52a8 | \u57fa\u4e8eGithub Action\uff09"},{"location":"web/ch1/","text":"Nginx \u00b6 Nginx\u4e3b\u8981\u5de5\u4f5c\u6d41\u6d89\u53ca conf \u6587\u4ef6\u7684\u914d\u7f6e\uff0cnginx\u7684\u91cd\u542f\uff0c\u5b9e\u73b0\u53cd\u5411\u4ee3\u7406 \u57fa\u672c\u8bbe\u7f6e \u00b6 conf \u6587\u4ef6\u7684\u914d\u7f6e \u00b6 Nginx\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff1a /usr/local/nginx/conf \uff0c\u6587\u4ef6\u540d\uff1a nginx.conf \u591a\u4f59\u914d\u7f6e\u81ea\u884c\u67e5\u627e\uff0c\u6b64\u5904\u7ed9\u51faserver\u5757\u7684\u5177\u4f53\u8bbe\u7f6e\uff1a \u5355\u7eaf\u9759\u6001\u8d44\u6e90\u4ee3\u7406 Text Only server { listen 80; server_name localhost; location / { root html; index river.pdf index.html; } location /Echo_of_Starsong/introduction { root /home/myweb; index introduction.html; } location /AI/Disco_Diffusion/Official_Guide/CH { root /home/myweb; index DD_CH_Basic.pdf; } location /AI/Disco_Diffusion/Official_Guide/EN { root /home/myweb; index DD_EN.pdf; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } } \u53cd\u5411\u4ee3\u7406\u81f3uWSGI\uff0c\u516c\u7f51\u7aef\u53e3\u4e3a8000\uff0c\u5185\u90e8\u7aef\u53e3\u4e3a5000 Text Only server { listen 8000; server_name localhost; location / { include uwsgi_params; uwsgi_pass 127.0.0.1:5000; } } nginx\u7684\u91cd\u542f \u00b6 https://blog.csdn.net/m290345792/article/details/78518360 \u9996\u5148\u5efa\u7acb\u4e00\u4e2a\u8f6f\u94fe\u63a5\uff0c\u4ee5\u4fbf\u5728\u9879\u76ee\u6839\u76ee\u5f55\u76f4\u63a5\u6267\u884cnginx\u7684bin\u6587\u4ef6: \u5f53\u524d\u6839\u76ee\u5f55\u4e3a\uff1a /home \uff0cnginx\u7684bin\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a /usr/local/nginx/sbin Bash ln -s /usr/local/nginx/sbin/nginx nginx \u66f4\u6539 conf \u6587\u4ef6\u540e\uff0c\u5bf9\u8bed\u6cd5\u8fdb\u884c\u68c0\u67e5\uff1a Bash ./nginx -t \u91cd\u542f\uff1a Bash ./nginx -s reload","title":"Nginx"},{"location":"web/ch1/#nginx","text":"Nginx\u4e3b\u8981\u5de5\u4f5c\u6d41\u6d89\u53ca conf \u6587\u4ef6\u7684\u914d\u7f6e\uff0cnginx\u7684\u91cd\u542f\uff0c\u5b9e\u73b0\u53cd\u5411\u4ee3\u7406","title":"Nginx"},{"location":"web/ch1/#_1","text":"","title":"\u57fa\u672c\u8bbe\u7f6e"},{"location":"web/ch1/#conf","text":"Nginx\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff1a /usr/local/nginx/conf \uff0c\u6587\u4ef6\u540d\uff1a nginx.conf \u591a\u4f59\u914d\u7f6e\u81ea\u884c\u67e5\u627e\uff0c\u6b64\u5904\u7ed9\u51faserver\u5757\u7684\u5177\u4f53\u8bbe\u7f6e\uff1a \u5355\u7eaf\u9759\u6001\u8d44\u6e90\u4ee3\u7406 Text Only server { listen 80; server_name localhost; location / { root html; index river.pdf index.html; } location /Echo_of_Starsong/introduction { root /home/myweb; index introduction.html; } location /AI/Disco_Diffusion/Official_Guide/CH { root /home/myweb; index DD_CH_Basic.pdf; } location /AI/Disco_Diffusion/Official_Guide/EN { root /home/myweb; index DD_EN.pdf; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } } \u53cd\u5411\u4ee3\u7406\u81f3uWSGI\uff0c\u516c\u7f51\u7aef\u53e3\u4e3a8000\uff0c\u5185\u90e8\u7aef\u53e3\u4e3a5000 Text Only server { listen 8000; server_name localhost; location / { include uwsgi_params; uwsgi_pass 127.0.0.1:5000; } }","title":"conf \u6587\u4ef6\u7684\u914d\u7f6e"},{"location":"web/ch1/#nginx_1","text":"https://blog.csdn.net/m290345792/article/details/78518360 \u9996\u5148\u5efa\u7acb\u4e00\u4e2a\u8f6f\u94fe\u63a5\uff0c\u4ee5\u4fbf\u5728\u9879\u76ee\u6839\u76ee\u5f55\u76f4\u63a5\u6267\u884cnginx\u7684bin\u6587\u4ef6: \u5f53\u524d\u6839\u76ee\u5f55\u4e3a\uff1a /home \uff0cnginx\u7684bin\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a /usr/local/nginx/sbin Bash ln -s /usr/local/nginx/sbin/nginx nginx \u66f4\u6539 conf \u6587\u4ef6\u540e\uff0c\u5bf9\u8bed\u6cd5\u8fdb\u884c\u68c0\u67e5\uff1a Bash ./nginx -t \u91cd\u542f\uff1a Bash ./nginx -s reload","title":"nginx\u7684\u91cd\u542f"},{"location":"web/ch2/","text":"uWSGI \u00b6 uWSGI\u662f Python \u8bed\u8a00\u5b9a\u4e49\u7684 Web \u670d\u52a1\u5668\u548c Web \u5e94\u7528\u7a0b\u5e8f\u6216\u6846\u67b6\u4e4b\u95f4\u7684\u4e00\u79cd\u7b80\u5355\u800c\u901a\u7528\u7684\u63a5\u53e3\uff0c\u5e38\u7528\u6765\u914d\u5408nginx\u5b9e\u73b0\u5ba2\u6237\u7aef\u54cd\u5e94 \u5b89\u88c5 \u00b6 pip \u5b89\u88c5\uff1a Bash pip install uwsgi \u57fa\u672c\u8bbe\u7f6e \u00b6 ini \u6587\u4ef6\u7684\u914d\u7f6e \u00b6 \u4ee5\u6211\u7684\u4e00\u4e2aflask\u9879\u76ee\u4e3a\u4f8b\uff0c\u9879\u76ee\u8def\u5f84\u4e3a /home/flask \uff0c\u5165\u53e3\u6587\u4ef6\u4e3a app.py \u9700\u8981\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u521b\u5efa uwsgi_conf.ini \u6587\u4ef6\uff1a INI [uwsgi] #\u76d1\u542c\u7aef\u53e3 socket = 127.0.0.1:5000 #\u8fdb\u7a0b processes = 8 #\u9879\u76ee\u8def\u5f84 chdir = /home/flask #\u9879\u76ee\u540d\u79f0 wsgi-file = app.py #\u56de\u8c03 callable = app \u5bf9 app.py \u7684\u5165\u53e3\u51fd\u6570\u8fdb\u884c\u4fee\u6539\uff1a Python if __name__ == '__main__' : app . run ( host = '127.0.0.1' , port = 5000 , debug = False ) \u6ce8\u610fflask\u63a5\u6536\u7684\u662f\u5185\u90e8\u7aef\u53e35000 uWSGI\u542f\u52a8 \u00b6 \u4e2a\u4eba\u4e60\u60ef\u4f7f\u7528tmux\u76f4\u63a5\u6302\u8d77\u4f1a\u8bdd\uff1a Bash uwsgi uwsgi_conf.ini CTRL + C \u5373\u53ef\u9000\u51fa","title":"uWSGI"},{"location":"web/ch2/#uwsgi","text":"uWSGI\u662f Python \u8bed\u8a00\u5b9a\u4e49\u7684 Web \u670d\u52a1\u5668\u548c Web \u5e94\u7528\u7a0b\u5e8f\u6216\u6846\u67b6\u4e4b\u95f4\u7684\u4e00\u79cd\u7b80\u5355\u800c\u901a\u7528\u7684\u63a5\u53e3\uff0c\u5e38\u7528\u6765\u914d\u5408nginx\u5b9e\u73b0\u5ba2\u6237\u7aef\u54cd\u5e94","title":"uWSGI"},{"location":"web/ch2/#_1","text":"pip \u5b89\u88c5\uff1a Bash pip install uwsgi","title":"\u5b89\u88c5"},{"location":"web/ch2/#_2","text":"","title":"\u57fa\u672c\u8bbe\u7f6e"},{"location":"web/ch2/#ini","text":"\u4ee5\u6211\u7684\u4e00\u4e2aflask\u9879\u76ee\u4e3a\u4f8b\uff0c\u9879\u76ee\u8def\u5f84\u4e3a /home/flask \uff0c\u5165\u53e3\u6587\u4ef6\u4e3a app.py \u9700\u8981\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u521b\u5efa uwsgi_conf.ini \u6587\u4ef6\uff1a INI [uwsgi] #\u76d1\u542c\u7aef\u53e3 socket = 127.0.0.1:5000 #\u8fdb\u7a0b processes = 8 #\u9879\u76ee\u8def\u5f84 chdir = /home/flask #\u9879\u76ee\u540d\u79f0 wsgi-file = app.py #\u56de\u8c03 callable = app \u5bf9 app.py \u7684\u5165\u53e3\u51fd\u6570\u8fdb\u884c\u4fee\u6539\uff1a Python if __name__ == '__main__' : app . run ( host = '127.0.0.1' , port = 5000 , debug = False ) \u6ce8\u610fflask\u63a5\u6536\u7684\u662f\u5185\u90e8\u7aef\u53e35000","title":"ini \u6587\u4ef6\u7684\u914d\u7f6e"},{"location":"web/ch2/#uwsgi_1","text":"\u4e2a\u4eba\u4e60\u60ef\u4f7f\u7528tmux\u76f4\u63a5\u6302\u8d77\u4f1a\u8bdd\uff1a Bash uwsgi uwsgi_conf.ini CTRL + C \u5373\u53ef\u9000\u51fa","title":"uWSGI\u542f\u52a8"},{"location":"web/todo/","text":"Todo \u00b6","title":"Todo"},{"location":"web/todo/#todo","text":"","title":"Todo"},{"location":"web/todo3/","text":"Todo \u00b6","title":"Todo3"},{"location":"web/todo3/#todo","text":"","title":"Todo"},{"location":"web/todo4/","text":"Todo \u00b6","title":"Todo4"},{"location":"web/todo4/#todo","text":"","title":"Todo"}]}