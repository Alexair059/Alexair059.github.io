{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome To My Blog \u00b6 2024-1 \u00b6 PCA \u903b\u8f91\u56de\u5f52 SVM\uff08\u8865\u5b8c\uff09 \u7ebf\u6027\u56de\u5f52 2023-6 \u00b6 \u7f16\u7801 | Encode RSA \u521d\u7b49\u6570\u8bba 2023-5 \u00b6 \u56fe\u7ed3\u6784\u53ef\u89c6\u5316 & Gradio\u4ea4\u4e92 2023-4 \u00b6 \u53d8\u5206\u81ea\u7f16\u7801\u5668 | VAE mkdocs\u52a0\u5bc6 2023-3 \u00b6 SVM \u57fa\u4e8e mkdocs-material \u7684 Blog \u5de5\u4f5c\u6d41 2023-1 \u00b6 \u611f\u77e5\u673a \u6734\u7d20\u8d1d\u53f6\u65af 2022-12 \u00b6 uWSGI Nginx 2022-11 \u00b6 SLIC\u7b97\u6cd5 & \u50cf\u7d20\u7f8e\u672f\u7d20\u6750\u751f\u6210 FGSM\u653b\u51fb \u4e71\u6570\u5047\u6587 & LSB\u9690\u5199","title":"Home"},{"location":"#welcome-to-my-blog","text":"","title":"Welcome To My Blog"},{"location":"#2024-1","text":"PCA \u903b\u8f91\u56de\u5f52 SVM\uff08\u8865\u5b8c\uff09 \u7ebf\u6027\u56de\u5f52","title":"2024-1"},{"location":"#2023-6","text":"\u7f16\u7801 | Encode RSA \u521d\u7b49\u6570\u8bba","title":"2023-6"},{"location":"#2023-5","text":"\u56fe\u7ed3\u6784\u53ef\u89c6\u5316 & Gradio\u4ea4\u4e92","title":"2023-5"},{"location":"#2023-4","text":"\u53d8\u5206\u81ea\u7f16\u7801\u5668 | VAE mkdocs\u52a0\u5bc6","title":"2023-4"},{"location":"#2023-3","text":"SVM \u57fa\u4e8e mkdocs-material \u7684 Blog \u5de5\u4f5c\u6d41","title":"2023-3"},{"location":"#2023-1","text":"\u611f\u77e5\u673a \u6734\u7d20\u8d1d\u53f6\u65af","title":"2023-1"},{"location":"#2022-12","text":"uWSGI Nginx","title":"2022-12"},{"location":"#2022-11","text":"SLIC\u7b97\u6cd5 & \u50cf\u7d20\u7f8e\u672f\u7d20\u6750\u751f\u6210 FGSM\u653b\u51fb \u4e71\u6570\u5047\u6587 & LSB\u9690\u5199","title":"2022-11"},{"location":"ai/ch1_2/","text":"\u611f\u77e5\u673a \u00b6 \u611f\u77e5\u673a\uff08perceptron\uff09\u662f\u4e8c\u5206\u7c7b\u7684\u7ebf\u6027\u5224\u522b\u6a21\u578b\uff0c\u5176\u65e8\u5728\u6c42\u51fa\u5c06\u8bad\u7ec3\u6570\u636e\u6240\u5904\u7684\u7279\u5f81\u7a7a\u95f4\u8fdb\u884c\u7ebf\u6027\u5212\u5206\u7684\u5206\u79bb\u8d85\u5e73\u9762\u3002\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u7b80\u5355\uff0c\u6613\u4e8e\u5b9e\u73b0\uff0c\u5177\u6709\u539f\u59cb\u5f62\u5f0f\u4e0e\u5bf9\u5076\u5f62\u5f0f\uff0c\u662f\u795e\u7ecf\u7f51\u7edc\u4e0e\u652f\u6301\u5411\u91cf\u673a\u7684\u57fa\u7840 \u5206\u7c7b \u00b6 \u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u975e\u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u7ebf\u6027\u6a21\u578b \u5224\u522b\u5b66\u4e60\u65b9\u6cd5 \u611f\u77e5\u673a\u6a21\u578b \u00b6 \u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u4e3a \\[ T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\},\\quad x\\in \\mathcal{X},y\\in \\mathcal{Y} \\] \u5176\u4e2d\u8f93\u5165\u7a7a\u95f4 \\(\\mathcal{X}\\subseteq R^n\\) \u4e3a \\(n\\) \u7ef4\u7a7a\u95f4\u5411\u91cf\u7684\u96c6\u5408\uff0c\u8f93\u51fa\u7a7a\u95f4\u4e3a\u7c7b\u6807\u8bb0\u96c6\u5408 \\(\\mathcal{Y}=\\{+1,-1\\}\\) \u7531\u8f93\u5165\u7a7a\u95f4\u5230\u8f93\u51fa\u7a7a\u95f4\u7684\u5982\u4e0b\u51fd\u6570\u79f0\u4e3a\u611f\u77e5\u673a\uff1a \\[ f(x)=sgn(w \\cdot x +b) \\] \u5176\u4e2d\u611f\u77e5\u673a\u53c2\u6570 \\(w\\in R^n\\) \u79f0\u4e3a\u6743\u503c/\u6743\u91cd\uff0c \\(b\\in R\\) \u79f0\u4f5c\u504f\u7f6e \u6570\u636e\u96c6\u7684\u7ebf\u6027\u53ef\u5206\u6027 \u00b6 \u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u6570\u636e\u96c6 \\(T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\}\\) \uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e2a\u8d85\u5e73\u9762 \\(S:w \\cdot x +b=0\\) ,\u4f7f\u5f97\u6240\u6709 \\(y_i=+1\\) \u7684\u5b9e\u4f8b \\(i\\) \uff0c\u6709 \\(w\\cdot x_i +b > 0\\) \uff08\u53cd\u4e4b\u4ea6\u7136\uff09\uff0c\u5219\u79f0\u8be5\u6570\u636e\u96c6\u4e3a\u7ebf\u6027\u53ef\u5206\u7684 \u611f\u77e5\u673a\u5b66\u4e60\u7b56\u7565 \u00b6 \u5047\u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u662f\u7ebf\u6027\u53ef\u5206\u7684\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7684\u76ee\u6807\u5373\u662f\u6c42\u5f97\u4e00\u4e2a\u80fd\u591f\u5c06\u8bad\u7ec3\u96c6\u6b63\u8d1f\u5b9e\u4f8b\u70b9\u5b8c\u5168\u6b63\u786e\u5206\u5f00\u7684\u5206\u79bb\u8d85\u5e73\u9762\uff0c\u5373\u611f\u77e5\u673a\u53c2\u6570 \\(w,b\\) \u4e3a\u6b64\u9700\u8981\u5b9a\u4e49\uff08\u7ecf\u9a8c\uff09\u635f\u5931\u51fd\u6570\u5e76\u5c06\u635f\u5931\u51fd\u6570\u6781\u5c0f\u5316 \u635f\u5931\u51fd\u6570\u7684\u4e00\u4e2a\u76f4\u89c2\u9009\u62e9\u5373\u662f\u8bef\u5206\u7c7b\u70b9\u7684\u603b\u6570\uff0c\u4f46\u8fd9\u6837\u7684\u635f\u5931\u51fd\u6570\u4e0d\u662f\u53c2\u6570 \\(w,b\\) \u7684\u8fde\u7eed\u53ef\u5bfc\u51fd\u6570\uff0c\u4e0d\u6613\u4f18\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u9009\u62e9\u8bef\u5206\u7c7b\u70b9\u5230\u8d85\u5e73\u9762 \\(S\\) \u7684\u603b\u8ddd\u79bb \u5bf9\u4e8e\u4efb\u4e00\u8bef\u5206\u7c7b\u70b9 \\(x_0\\) \u5230\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\uff1a \\[ \\frac{1}{\\Vert w\\Vert _2}\\vert w \\cdot x_0 + b\\vert \\] \u5bf9\u4e8e\u8bef\u5206\u7c7b\u70b9 \\((x_i,y_i)\\) ,\u6709 \\[ -y_i(w \\cdot x_i +b) > 0 \\] \u6545\u6240\u6709\u8bef\u5206\u7c7b\u70b9\u5230\u8d85\u5e73\u9762 \\(S\\) \u7684\u603b\u8ddd\u79bb\u4e3a\uff1a \\[ -\\frac{1}{\\Vert w\\Vert}\\sum_{x_i \\in M}y_i(w \\cdot x_i +b) \\] \u4e8e\u662f\u6211\u4eec\u5c06\u611f\u77e5\u673a\u5b66\u4e60\u7684\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u4e3a\uff1a \\[ L(w,b) = - \\sum_{x_i \\in M}y_i(w \\cdot x_i +b) \\] \u5176\u4e2d \\(M\\) \u4e3a\u8bef\u5206\u7c7b\u70b9\u7684\u96c6\u5408\uff0c \\(y_i(w \\cdot x_i +b)\\) \u79f0\u4e3a\u6837\u672c\u70b9\u7684\u51fd\u6570\u95f4\u9694 \u53ef\u4ee5\u770b\u51fa\uff0c\u635f\u5931\u51fd\u6570 \\(L(w,b)\\) \u662f\u975e\u8d1f\u7684\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u6837\u672c\u70b9\uff0c\u5728\u8bef\u5206\u7c7b\u65f6\u662f\u53c2\u6570 \\(w,b\\) \u7684\u7ebf\u6027\u51fd\u6570\uff0c\u5728\u6b63\u786e\u5206\u7c7b\u65f6\u662f0\u3002\u56e0\u6b64\uff0c \\(L(w,b)\\) \u662f \\(w,b\\) \u7684\u8fde\u7eed\u53ef\u5bfc\u51fd\u6570 \u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5 \u00b6 \u611f\u77e5\u673a\u7684\u5b66\u4e60\u7b97\u6cd5\u91c7\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD\uff09\u5b9e\u73b0\uff1a \u9996\u5148\u968f\u673a\u521d\u59cb\u5316\u611f\u77e5\u673a\u53c2\u6570 \\(w_0,b_0\\) \uff0c\u7136\u540e\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u4e0d\u65ad\u6781\u5c0f\u5316\u76ee\u6807\u51fd\u6570 \\[ L(w,b)=-\\sum_{x_i \\in M}y_i(w \\cdot x_i +b) \\] \u5728\u6781\u5c0f\u5316\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u662f\u4e00\u6b21\u4f7f \\(M\\) \u7684\u6240\u6709\u8bef\u5206\u7c7b\u70b9\u7684\u68af\u5ea6\u4e0b\u964d\uff0c\u800c\u662f\u4e00\u6b21\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u8bef\u5206\u7c7b\u70b9\u4f7f\u5176\u68af\u5ea6\u4e0b\u964d\uff0c\u5176\u4e2d \\(L(w,b)\\) \u7684\u68af\u5ea6\u4e3a \\[ \\begin{aligned} \\nabla_{w}L(w,b)&=-\\sum_{x_i \\in M}y_ix_i \\\\ \\nabla_{b}L(w,b)&=-\\sum_{x_i \\in M}y_i \\end{aligned} \\] \u968f\u673a\u9009\u53d6\u4e00\u4e2a\u8bef\u5206\u7c7b\u70b9 \\((x_i,y_i)\\) \uff0c\u5bf9\u53c2\u6570\u8fdb\u884c\u66f4\u65b0 \\[ \\begin{aligned} w &\\gets w + \\eta y_ix_i \\\\ b &\\gets b + \\eta y_i \\end{aligned} \\] \u5176\u4e2d \\(\\eta\\) \u79f0\u4e3a\u5b66\u4e60\u7387\uff08learning rate\uff09 \u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\uff08\u539f\u59cb\u5f62\u5f0f\uff09 \u00b6 \u8f93\u5165\uff1a \u8bad\u7ec3\u6570\u636e\u96c6 \\(T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\}\\) \u5b66\u4e60\u7387 \\(\\eta\\) \u8f93\u51fa\uff1a\u611f\u77e5\u673a\u6a21\u578b \\(f(x)=sgn(w \\cdot x +b)\\) \uff1b\u611f\u77e5\u673a\u53c2\u6570 \\(w, b\\) \u9009\u53d6\u521d\u503c \\(w_0,b_0\\) ; \u5728\u8bad\u7ec3\u96c6\u4e2d\u9009\u53d6\u6570\u636e \\((x_i,y_i)\\) ; \u5982\u679c \\(y_i(w \\cdot x_i +b) \\leq 0\\) : \\[ \\begin{aligned} w &\\gets w + \\eta y_ix_i \\\\ b &\\gets b + \\eta y_i \\end{aligned} \\] \u8f6c\u81f3 2 \uff0c\u76f4\u81f3\u8bad\u7ec3\u96c6\u4e2d\u6ca1\u6709\u8bef\u5206\u7c7b\u70b9 \u5728\u5b9e\u9645\u5b66\u4e60\u4e2d\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u7531\u4e8e\u91c7\u53d6\u4e0d\u540c\u7684\u521d\u503c\u6216\u9009\u53d6\u4e0d\u540c\u7684\u8bef\u5206\u7c7b\u70b9\uff0c\u6700\u540e\u5f97\u5230\u7684\u6a21\u578b\uff0c\u5373\u53c2\u6570 \\(w,b\\) \u53ef\u80fd\u4e0d\u540c \u7b97\u6cd5\u6536\u655b\u6027\uff08Novikoff\u5b9a\u7406\uff09 \u00b6 \u7531Novikoff\u5b9a\u7406\u53ef\u77e5\uff0c\u5bf9\u4e8e\u7ebf\u6027\u53ef\u5206\u6570\u636e\u96c6\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u6536\u655b\uff0c\u5373\u7ecf\u8fc7\u6709\u9650\u6b21\u8fed\u4ee3\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5c06\u5176\u5b8c\u5168\u6b63\u786e\u5212\u5206\u7684\u611f\u77e5\u673a\u6a21\u578b \u5b9a\u7406\u8868\u660e\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u5728\u7ebf\u6027\u53ef\u5206\u6570\u636e\u96c6\u4e0a\u5b66\u4e60\u65f6\uff0c\u8bef\u5206\u7c7b\u7684\u6b21\u6570 \\(k\\) \u662f\u6709\u4e0a\u754c\u7684\uff0c\u7ecf\u8fc7\u6709\u9650\u6b21\u641c\u7d22\u53ef\u4ee5\u627e\u5230\u5c06\u8bad\u7ec3\u6570\u636e\u5b8c\u5168\u6b63\u786e\u5206\u5f00\u7684\u5206\u79bb\u8d85\u5e73\u9762 \u5f53\u8bad\u7ec3\u96c6\u7ebf\u6027\u4e0d\u53ef\u5206\u65f6\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u4e0d\u6536\u655b\uff0c\u8fed\u4ee3\u7ed3\u679c\u4f1a\u53d1\u751f\u9707\u8361 \u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u7684\u5bf9\u5076\u5f62\u5f0f \u00b6 \u5bf9\u5076\u5f62\u5f0f\u7684\u57fa\u672c\u60f3\u6cd5\u5728\u4e8e\uff0c\u5c06 \\(w\\) \u548c \\(b\\) \u8868\u793a\u4e3a\u5b9e\u4f8b \\(x_i\\) \u548c \u6807\u8bb0 \\(y_i\\) \u7684\u7ebf\u6027\u7ec4\u5408\u5f62\u5f0f\uff0c\u901a\u8fc7\u6c42\u89e3\u5176\u7cfb\u6570\u4ece\u800c\u6c42\u5f97 \\(w\\) \u548c \\(b\\) \uff1a \u8bbe\u521d\u59cb\u503c \\(w_0, b_0\\) \u5747\u4e3a0\uff0c\u7ecf\u8fc7\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u540e\uff0c\u8fed\u4ee3\u8fc7\u7684\u53c2\u6570\u53ef\u8868\u793a\u4e3a \\[ \\begin{aligned} w &=\\sum_{i=1}^{N}\\alpha_i y_i x_i\\\\ b &=\\sum_{i=1}^{N}\\alpha_i y_i \\end{aligned} \\] \u5176\u4e2d\uff0c \\(\\alpha_i=n_i\\eta \\geq 0, i=1,2,\u00b7\u00b7\u00b7,N\\) \uff0c\u5176\u4e2d \\(n_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u5b9e\u4f8b\u70b9\u7531\u4e8e\u8bef\u5206\u800c\u8fdb\u884c\u66f4\u65b0\u7684\u6b21\u6570\u3002\u5b9e\u4f8b\u70b9\u66f4\u65b0\u6b21\u6570\u8d8a\u591a\uff0c\u610f\u5473\u7740\u5b83\u8ddd\u79bb\u5206\u79bb\u8d85\u5e73\u9762\u8d8a\u8fd1\uff0c\u4e5f\u5c31\u8d8a\u96be\u6b63\u786e\u5206\u7c7b\uff0c\u8fd9\u6837\u7684\u5b9e\u4f8b\u5bf9\u5b66\u4e60\u7ed3\u679c\u5f71\u54cd\u6700\u5927 \u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\uff08\u5bf9\u5076\u5f62\u5f0f\uff09 \u00b6 \u8f93\u5165\uff1a \u8bad\u7ec3\u6570\u636e\u96c6 \\(T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\}\\) \u5b66\u4e60\u7387 \\(\\eta\\) \u8f93\u51fa\uff1a\u611f\u77e5\u673a\u6a21\u578b \\(f(x)=sgn\\left(\\sum_{j=1}^{N}\\alpha_j y_j x_j \\cdot x +b\\right)\\) \uff1b\u611f\u77e5\u673a\u53c2\u6570 \\(\\alpha, b\\) \uff1b \\(\\alpha = (\\alpha_1, \\alpha_2,\u00b7\u00b7\u00b7,\\alpha_N)^T\\) \\(\\alpha \\gets 0, b \\gets 0\\) \uff1b \u5728\u8bad\u7ec3\u96c6\u4e2d\u9009\u53d6\u6570\u636e \\((x_i, y_i)\\) \uff1b \u5982\u679c \\(\\left(\\sum_{j=1}^{N}\\alpha_j y_j x_j \\cdot x +b\\right)\\leq 0\\) \uff1a \\[ \\begin{aligned} \\alpha_i &\\gets \\alpha_i + \\eta\\\\ b &\\gets b + \\eta y_i \\end{aligned} \\] \u8f6c\u81f3 2 \u76f4\u5230\u6ca1\u6709\u8bef\u5206\u7c7b\u6570\u636e \u5728\u5bf9\u5076\u5f62\u5f0f\u4e2d\u8bad\u7ec3\u5b9e\u4f8b\u4ec5\u4ee5\u5185\u79ef\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u8ba1\u7b97\u51fa\u6837\u672c\u5b9e\u4f8b\u95f4\u7684\u5185\u79ef\u5e76\u4ee5\u77e9\u9635\u7684\u5f62\u5f0f\u5b58\u50a8\uff0c\u5373\u4e3a Gram \u77e9\u9635\uff08Gram matrix\uff09 \\[ G=[x_i \\cdot x_j]_{N \\times N} \\] \u4ee3\u7801\u5b9e\u73b0 \u00b6 \u5f15\u5165\u57fa\u672c\u5e93 Python import numpy as np import matplotlib.pyplot as plt \u6570\u636e\u51c6\u5907 Python negative_samples = np . random . multivariate_normal ( mean = [ 3 , 0 ], cov = [[ 1 , 0.65 ],[ 0.65 , 1 ]], size = 50 ) positive_samples = np . random . multivariate_normal ( mean = [ 0 , 3 ], cov = [[ 1 , 0.65 ],[ 0.65 , 1 ]], size = 50 ) x = np . vstack (( negative_samples , positive_samples )) . astype ( 'float32' ) l = np . vstack (( np . full (( 50 , 1 ), - 1 ), np . ones (( 50 , 1 )))) . astype ( 'float32' ) \u539f\u59cb\u5f62\u5f0f \u00b6 \u521d\u59cb\u5316\u53c2\u6570 Python w = np . random . randn ( 2 , 1 ) . astype ( 'float32' ) b = np . random . randn ( 1 ,) . astype ( 'float32' ) \u5c55\u793a Python figurex = np . linspace ( - 2 , 5 , 100 ) figurey = - w [ 0 ] / w [ 1 ] * figurex - b / w [ 1 ] plt . plot ( figurex , figurey , \"-r\" ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = l [:, 0 ]) plt . show () \u8bad\u7ec3 Python index = 0 lr = 1e-2 while ( index < 100 ): if ( l [ index , 0 ] * ( np . matmul ( x [ index ], w ) + b ) <= 0 ): w += ( lr * l [ index , 0 ] * x [ index ]) . reshape ( 2 , 1 ) b += lr * l [ index , 0 ] index = 0 else : index += 1 \u5c55\u793a Python figurex = np . linspace ( - 2 , 5 , 100 ) figurey = - w [ 0 ] / w [ 1 ] * figurex - b / w [ 1 ] plt . plot ( figurex , figurey , \"-r\" ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = l [:, 0 ]) plt . show () \u5bf9\u5076\u5f62\u5f0f \u00b6 \u521d\u59cb\u5316\u53c2\u6570 Python gram = np . matmul ( x , x . T ) alpha = np . random . randn ( 100 ,) . astype ( 'float32' ) b = np . random . randn ( 1 ,) . astype ( 'float32' ) def sig_al ( arr ): return np . array ([ a * b for a , b in zip ( alpha , l . squeeze ())]) \u5c55\u793a Python figurex = np . linspace ( - 2 , 5 , 100 ) figurey = - np . matmul ( sig_al ( alpha ), x [:, 0 ] . reshape ( - 1 , 1 )) / np . matmul ( sig_al ( alpha ), x [:, 1 ] . reshape ( - 1 , 1 )) * figurex - b / np . matmul ( sig_al ( alpha ), x [:, 1 ] . reshape ( - 1 , 1 )) plt . plot ( figurex , figurey , \"-r\" ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = l [:, 0 ]) plt . show () \u8bad\u7ec3 Python index = 0 lr = 1e-2 while ( index < 100 ): if ( l [ index , 0 ] * ( np . matmul ( sig_al ( alpha ), gram [:, index ] . reshape ( - 1 , 1 )) + b ) <= 0 ): alpha [ index ] += lr b += lr * l [ index , 0 ] index = 0 else : index += 1 \u5c55\u793a Python figurex = np . linspace ( - 2 , 5 , 100 ) figurey = - np . matmul ( sig_al ( alpha ), x [:, 0 ] . reshape ( - 1 , 1 )) / np . matmul ( sig_al ( alpha ), x [:, 1 ] . reshape ( - 1 , 1 )) * figurex - b / np . matmul ( sig_al ( alpha ), x [:, 1 ] . reshape ( - 1 , 1 )) plt . plot ( figurex , figurey , \"-r\" ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = l [:, 0 ]) plt . show () \u6838\u65b9\u6cd5 | \u975e\u7ebf\u6027\u4e8c\u5206\u7c7b \u00b6 \u6570\u636e\u51c6\u5907 Python negative_samples1 = np . random . multivariate_normal ( mean = [ 3 , - 4 ], cov = [[ 0.8 , 0 ], [ 0 , 0.8 ]], size = 25 ) negative_samples2 = np . random . multivariate_normal ( mean = [ 3 , 6 ], cov = [[ 0.8 , 0 ], [ 0 , 0.8 ]], size = 25 ) positive_samples = np . random . multivariate_normal ( mean = [ 1 , 0 ], cov = [[ 0.8 , 0 ], [ 0 , 0.8 ]], size = 50 ) x = np . vstack (( negative_samples1 , negative_samples2 , positive_samples )) . astype ( 'float32' ) l = np . vstack (( np . full (( 50 , 1 ), - 1 ), np . ones (( 50 , 1 )))) . astype ( 'float32' ) \u521d\u59cb\u5316\u53c2\u6570 Python gram = np . matmul ( x , x . T ) poly_kernel_gram = np . ones (( 100 , 100 )) . astype ( 'float32' ) for i in range ( 100 ): for j in range ( 100 ): poly_kernel_gram [ i , j ] = ( 1 + gram [ i , j ]) ** 2 alpha = np . random . randn ( 100 ,) . astype ( 'float32' ) b = np . random . randn ( 1 ,) . astype ( 'float32' ) def sig_al ( arr ): return np . array ([ a * b for a , b in zip ( alpha , l . squeeze ())]) \u5c55\u793a Python plt . figure ( figsize = ( 18 , 5 )) plt . subplot ( 1 , 3 , 1 ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = l [:, 0 ]) pre = np . array ([ 1 if ( np . matmul ( sig_al ( alpha ), poly_kernel_gram [:, index ] . reshape ( - 1 , 1 )) + b ) >= 0 else - 1 for index in range ( 100 )]) . squeeze () plt . subplot ( 1 , 3 , 2 ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = pre ) uni_x = [] x_line = np . linspace ( - 1 , 5 , 21 ) . astype ( 'float32' ) for item in x_line : for i in range ( 49 ): uni_x . append ( item ) uni_x = np . array ( uni_x ) . reshape ( - 1 , 1 ) uni_y = [] y_line = np . linspace ( - 6 , 8 , 49 ) . astype ( 'float32' ) for i in range ( 21 ): for item in y_line : uni_y . append ( item ) uni_y = np . array ( uni_y ) . reshape ( - 1 , 1 ) uni = np . hstack (( uni_x , uni_y )) uni_pre = np . array ([ 1 if np . sum ([ sig_al ( alpha )[ j ] * ( 1 + np . matmul ( x [ j ], uni [ i ] . T )) ** 2 for j in range ( 100 )]) + b >= 0 else - 1 for i in range ( 1029 )]) . squeeze () plt . subplot ( 1 , 3 , 3 ) plt . scatter ( uni [:, 0 ], uni [:, 1 ], c = uni_pre ) plt . show () \u8bad\u7ec3 Python index = 0 lr = 1e-2 while ( index < 100 ): if ( l [ index , 0 ] * ( np . matmul ( sig_al ( alpha ), poly_kernel_gram [:, index ] . reshape ( - 1 , 1 )) + b ) <= 0 ): alpha [ index ] += lr b += lr * l [ index , 0 ] index = 0 else : index += 1 \u5c55\u793a Python plt . figure ( figsize = ( 18 , 5 )) plt . subplot ( 1 , 3 , 1 ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = l [:, 0 ]) pre = np . array ([ 1 if ( np . matmul ( sig_al ( alpha ), poly_kernel_gram [:, index ] . reshape ( - 1 , 1 )) + b ) >= 0 else - 1 for index in range ( 100 )]) . squeeze () plt . subplot ( 1 , 3 , 2 ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = pre ) uni_x = [] x_line = np . linspace ( - 1 , 5 , 21 ) . astype ( 'float32' ) for item in x_line : for i in range ( 49 ): uni_x . append ( item ) uni_x = np . array ( uni_x ) . reshape ( - 1 , 1 ) uni_y = [] y_line = np . linspace ( - 6 , 8 , 49 ) . astype ( 'float32' ) for i in range ( 21 ): for item in y_line : uni_y . append ( item ) uni_y = np . array ( uni_y ) . reshape ( - 1 , 1 ) uni = np . hstack (( uni_x , uni_y )) uni_pre = np . array ([ 1 if np . sum ([ sig_al ( alpha )[ j ] * ( 1 + np . matmul ( x [ j ], uni [ i ] . T )) ** 2 for j in range ( 100 )]) + b >= 0 else - 1 for i in range ( 1029 )]) . squeeze () plt . subplot ( 1 , 3 , 3 ) plt . scatter ( uni [:, 0 ], uni [:, 1 ], c = uni_pre ) plt . show () \u53c2\u8003\u8d44\u6599 \u00b6 \u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\uff08\u7b2c\u4e8c\u7248\uff09\u300b\u674e\u822a","title":"\u611f\u77e5\u673a"},{"location":"ai/ch1_2/#_1","text":"\u611f\u77e5\u673a\uff08perceptron\uff09\u662f\u4e8c\u5206\u7c7b\u7684\u7ebf\u6027\u5224\u522b\u6a21\u578b\uff0c\u5176\u65e8\u5728\u6c42\u51fa\u5c06\u8bad\u7ec3\u6570\u636e\u6240\u5904\u7684\u7279\u5f81\u7a7a\u95f4\u8fdb\u884c\u7ebf\u6027\u5212\u5206\u7684\u5206\u79bb\u8d85\u5e73\u9762\u3002\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u7b80\u5355\uff0c\u6613\u4e8e\u5b9e\u73b0\uff0c\u5177\u6709\u539f\u59cb\u5f62\u5f0f\u4e0e\u5bf9\u5076\u5f62\u5f0f\uff0c\u662f\u795e\u7ecf\u7f51\u7edc\u4e0e\u652f\u6301\u5411\u91cf\u673a\u7684\u57fa\u7840","title":"\u611f\u77e5\u673a"},{"location":"ai/ch1_2/#_2","text":"\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u975e\u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u7ebf\u6027\u6a21\u578b \u5224\u522b\u5b66\u4e60\u65b9\u6cd5","title":"\u5206\u7c7b"},{"location":"ai/ch1_2/#_3","text":"\u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u4e3a \\[ T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\},\\quad x\\in \\mathcal{X},y\\in \\mathcal{Y} \\] \u5176\u4e2d\u8f93\u5165\u7a7a\u95f4 \\(\\mathcal{X}\\subseteq R^n\\) \u4e3a \\(n\\) \u7ef4\u7a7a\u95f4\u5411\u91cf\u7684\u96c6\u5408\uff0c\u8f93\u51fa\u7a7a\u95f4\u4e3a\u7c7b\u6807\u8bb0\u96c6\u5408 \\(\\mathcal{Y}=\\{+1,-1\\}\\) \u7531\u8f93\u5165\u7a7a\u95f4\u5230\u8f93\u51fa\u7a7a\u95f4\u7684\u5982\u4e0b\u51fd\u6570\u79f0\u4e3a\u611f\u77e5\u673a\uff1a \\[ f(x)=sgn(w \\cdot x +b) \\] \u5176\u4e2d\u611f\u77e5\u673a\u53c2\u6570 \\(w\\in R^n\\) \u79f0\u4e3a\u6743\u503c/\u6743\u91cd\uff0c \\(b\\in R\\) \u79f0\u4f5c\u504f\u7f6e","title":"\u611f\u77e5\u673a\u6a21\u578b"},{"location":"ai/ch1_2/#_4","text":"\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u6570\u636e\u96c6 \\(T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\}\\) \uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e2a\u8d85\u5e73\u9762 \\(S:w \\cdot x +b=0\\) ,\u4f7f\u5f97\u6240\u6709 \\(y_i=+1\\) \u7684\u5b9e\u4f8b \\(i\\) \uff0c\u6709 \\(w\\cdot x_i +b > 0\\) \uff08\u53cd\u4e4b\u4ea6\u7136\uff09\uff0c\u5219\u79f0\u8be5\u6570\u636e\u96c6\u4e3a\u7ebf\u6027\u53ef\u5206\u7684","title":"\u6570\u636e\u96c6\u7684\u7ebf\u6027\u53ef\u5206\u6027"},{"location":"ai/ch1_2/#_5","text":"\u5047\u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u662f\u7ebf\u6027\u53ef\u5206\u7684\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7684\u76ee\u6807\u5373\u662f\u6c42\u5f97\u4e00\u4e2a\u80fd\u591f\u5c06\u8bad\u7ec3\u96c6\u6b63\u8d1f\u5b9e\u4f8b\u70b9\u5b8c\u5168\u6b63\u786e\u5206\u5f00\u7684\u5206\u79bb\u8d85\u5e73\u9762\uff0c\u5373\u611f\u77e5\u673a\u53c2\u6570 \\(w,b\\) \u4e3a\u6b64\u9700\u8981\u5b9a\u4e49\uff08\u7ecf\u9a8c\uff09\u635f\u5931\u51fd\u6570\u5e76\u5c06\u635f\u5931\u51fd\u6570\u6781\u5c0f\u5316 \u635f\u5931\u51fd\u6570\u7684\u4e00\u4e2a\u76f4\u89c2\u9009\u62e9\u5373\u662f\u8bef\u5206\u7c7b\u70b9\u7684\u603b\u6570\uff0c\u4f46\u8fd9\u6837\u7684\u635f\u5931\u51fd\u6570\u4e0d\u662f\u53c2\u6570 \\(w,b\\) \u7684\u8fde\u7eed\u53ef\u5bfc\u51fd\u6570\uff0c\u4e0d\u6613\u4f18\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u9009\u62e9\u8bef\u5206\u7c7b\u70b9\u5230\u8d85\u5e73\u9762 \\(S\\) \u7684\u603b\u8ddd\u79bb \u5bf9\u4e8e\u4efb\u4e00\u8bef\u5206\u7c7b\u70b9 \\(x_0\\) \u5230\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\uff1a \\[ \\frac{1}{\\Vert w\\Vert _2}\\vert w \\cdot x_0 + b\\vert \\] \u5bf9\u4e8e\u8bef\u5206\u7c7b\u70b9 \\((x_i,y_i)\\) ,\u6709 \\[ -y_i(w \\cdot x_i +b) > 0 \\] \u6545\u6240\u6709\u8bef\u5206\u7c7b\u70b9\u5230\u8d85\u5e73\u9762 \\(S\\) \u7684\u603b\u8ddd\u79bb\u4e3a\uff1a \\[ -\\frac{1}{\\Vert w\\Vert}\\sum_{x_i \\in M}y_i(w \\cdot x_i +b) \\] \u4e8e\u662f\u6211\u4eec\u5c06\u611f\u77e5\u673a\u5b66\u4e60\u7684\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u4e3a\uff1a \\[ L(w,b) = - \\sum_{x_i \\in M}y_i(w \\cdot x_i +b) \\] \u5176\u4e2d \\(M\\) \u4e3a\u8bef\u5206\u7c7b\u70b9\u7684\u96c6\u5408\uff0c \\(y_i(w \\cdot x_i +b)\\) \u79f0\u4e3a\u6837\u672c\u70b9\u7684\u51fd\u6570\u95f4\u9694 \u53ef\u4ee5\u770b\u51fa\uff0c\u635f\u5931\u51fd\u6570 \\(L(w,b)\\) \u662f\u975e\u8d1f\u7684\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u6837\u672c\u70b9\uff0c\u5728\u8bef\u5206\u7c7b\u65f6\u662f\u53c2\u6570 \\(w,b\\) \u7684\u7ebf\u6027\u51fd\u6570\uff0c\u5728\u6b63\u786e\u5206\u7c7b\u65f6\u662f0\u3002\u56e0\u6b64\uff0c \\(L(w,b)\\) \u662f \\(w,b\\) \u7684\u8fde\u7eed\u53ef\u5bfc\u51fd\u6570","title":"\u611f\u77e5\u673a\u5b66\u4e60\u7b56\u7565"},{"location":"ai/ch1_2/#_6","text":"\u611f\u77e5\u673a\u7684\u5b66\u4e60\u7b97\u6cd5\u91c7\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD\uff09\u5b9e\u73b0\uff1a \u9996\u5148\u968f\u673a\u521d\u59cb\u5316\u611f\u77e5\u673a\u53c2\u6570 \\(w_0,b_0\\) \uff0c\u7136\u540e\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u4e0d\u65ad\u6781\u5c0f\u5316\u76ee\u6807\u51fd\u6570 \\[ L(w,b)=-\\sum_{x_i \\in M}y_i(w \\cdot x_i +b) \\] \u5728\u6781\u5c0f\u5316\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u662f\u4e00\u6b21\u4f7f \\(M\\) \u7684\u6240\u6709\u8bef\u5206\u7c7b\u70b9\u7684\u68af\u5ea6\u4e0b\u964d\uff0c\u800c\u662f\u4e00\u6b21\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u8bef\u5206\u7c7b\u70b9\u4f7f\u5176\u68af\u5ea6\u4e0b\u964d\uff0c\u5176\u4e2d \\(L(w,b)\\) \u7684\u68af\u5ea6\u4e3a \\[ \\begin{aligned} \\nabla_{w}L(w,b)&=-\\sum_{x_i \\in M}y_ix_i \\\\ \\nabla_{b}L(w,b)&=-\\sum_{x_i \\in M}y_i \\end{aligned} \\] \u968f\u673a\u9009\u53d6\u4e00\u4e2a\u8bef\u5206\u7c7b\u70b9 \\((x_i,y_i)\\) \uff0c\u5bf9\u53c2\u6570\u8fdb\u884c\u66f4\u65b0 \\[ \\begin{aligned} w &\\gets w + \\eta y_ix_i \\\\ b &\\gets b + \\eta y_i \\end{aligned} \\] \u5176\u4e2d \\(\\eta\\) \u79f0\u4e3a\u5b66\u4e60\u7387\uff08learning rate\uff09","title":"\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5"},{"location":"ai/ch1_2/#_7","text":"\u8f93\u5165\uff1a \u8bad\u7ec3\u6570\u636e\u96c6 \\(T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\}\\) \u5b66\u4e60\u7387 \\(\\eta\\) \u8f93\u51fa\uff1a\u611f\u77e5\u673a\u6a21\u578b \\(f(x)=sgn(w \\cdot x +b)\\) \uff1b\u611f\u77e5\u673a\u53c2\u6570 \\(w, b\\) \u9009\u53d6\u521d\u503c \\(w_0,b_0\\) ; \u5728\u8bad\u7ec3\u96c6\u4e2d\u9009\u53d6\u6570\u636e \\((x_i,y_i)\\) ; \u5982\u679c \\(y_i(w \\cdot x_i +b) \\leq 0\\) : \\[ \\begin{aligned} w &\\gets w + \\eta y_ix_i \\\\ b &\\gets b + \\eta y_i \\end{aligned} \\] \u8f6c\u81f3 2 \uff0c\u76f4\u81f3\u8bad\u7ec3\u96c6\u4e2d\u6ca1\u6709\u8bef\u5206\u7c7b\u70b9 \u5728\u5b9e\u9645\u5b66\u4e60\u4e2d\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u7531\u4e8e\u91c7\u53d6\u4e0d\u540c\u7684\u521d\u503c\u6216\u9009\u53d6\u4e0d\u540c\u7684\u8bef\u5206\u7c7b\u70b9\uff0c\u6700\u540e\u5f97\u5230\u7684\u6a21\u578b\uff0c\u5373\u53c2\u6570 \\(w,b\\) \u53ef\u80fd\u4e0d\u540c","title":"\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\uff08\u539f\u59cb\u5f62\u5f0f\uff09"},{"location":"ai/ch1_2/#novikoff","text":"\u7531Novikoff\u5b9a\u7406\u53ef\u77e5\uff0c\u5bf9\u4e8e\u7ebf\u6027\u53ef\u5206\u6570\u636e\u96c6\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u6536\u655b\uff0c\u5373\u7ecf\u8fc7\u6709\u9650\u6b21\u8fed\u4ee3\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5c06\u5176\u5b8c\u5168\u6b63\u786e\u5212\u5206\u7684\u611f\u77e5\u673a\u6a21\u578b \u5b9a\u7406\u8868\u660e\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u5728\u7ebf\u6027\u53ef\u5206\u6570\u636e\u96c6\u4e0a\u5b66\u4e60\u65f6\uff0c\u8bef\u5206\u7c7b\u7684\u6b21\u6570 \\(k\\) \u662f\u6709\u4e0a\u754c\u7684\uff0c\u7ecf\u8fc7\u6709\u9650\u6b21\u641c\u7d22\u53ef\u4ee5\u627e\u5230\u5c06\u8bad\u7ec3\u6570\u636e\u5b8c\u5168\u6b63\u786e\u5206\u5f00\u7684\u5206\u79bb\u8d85\u5e73\u9762 \u5f53\u8bad\u7ec3\u96c6\u7ebf\u6027\u4e0d\u53ef\u5206\u65f6\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u4e0d\u6536\u655b\uff0c\u8fed\u4ee3\u7ed3\u679c\u4f1a\u53d1\u751f\u9707\u8361","title":"\u7b97\u6cd5\u6536\u655b\u6027\uff08Novikoff\u5b9a\u7406\uff09"},{"location":"ai/ch1_2/#_8","text":"\u5bf9\u5076\u5f62\u5f0f\u7684\u57fa\u672c\u60f3\u6cd5\u5728\u4e8e\uff0c\u5c06 \\(w\\) \u548c \\(b\\) \u8868\u793a\u4e3a\u5b9e\u4f8b \\(x_i\\) \u548c \u6807\u8bb0 \\(y_i\\) \u7684\u7ebf\u6027\u7ec4\u5408\u5f62\u5f0f\uff0c\u901a\u8fc7\u6c42\u89e3\u5176\u7cfb\u6570\u4ece\u800c\u6c42\u5f97 \\(w\\) \u548c \\(b\\) \uff1a \u8bbe\u521d\u59cb\u503c \\(w_0, b_0\\) \u5747\u4e3a0\uff0c\u7ecf\u8fc7\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u540e\uff0c\u8fed\u4ee3\u8fc7\u7684\u53c2\u6570\u53ef\u8868\u793a\u4e3a \\[ \\begin{aligned} w &=\\sum_{i=1}^{N}\\alpha_i y_i x_i\\\\ b &=\\sum_{i=1}^{N}\\alpha_i y_i \\end{aligned} \\] \u5176\u4e2d\uff0c \\(\\alpha_i=n_i\\eta \\geq 0, i=1,2,\u00b7\u00b7\u00b7,N\\) \uff0c\u5176\u4e2d \\(n_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u5b9e\u4f8b\u70b9\u7531\u4e8e\u8bef\u5206\u800c\u8fdb\u884c\u66f4\u65b0\u7684\u6b21\u6570\u3002\u5b9e\u4f8b\u70b9\u66f4\u65b0\u6b21\u6570\u8d8a\u591a\uff0c\u610f\u5473\u7740\u5b83\u8ddd\u79bb\u5206\u79bb\u8d85\u5e73\u9762\u8d8a\u8fd1\uff0c\u4e5f\u5c31\u8d8a\u96be\u6b63\u786e\u5206\u7c7b\uff0c\u8fd9\u6837\u7684\u5b9e\u4f8b\u5bf9\u5b66\u4e60\u7ed3\u679c\u5f71\u54cd\u6700\u5927","title":"\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u7684\u5bf9\u5076\u5f62\u5f0f"},{"location":"ai/ch1_2/#_9","text":"\u8f93\u5165\uff1a \u8bad\u7ec3\u6570\u636e\u96c6 \\(T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\}\\) \u5b66\u4e60\u7387 \\(\\eta\\) \u8f93\u51fa\uff1a\u611f\u77e5\u673a\u6a21\u578b \\(f(x)=sgn\\left(\\sum_{j=1}^{N}\\alpha_j y_j x_j \\cdot x +b\\right)\\) \uff1b\u611f\u77e5\u673a\u53c2\u6570 \\(\\alpha, b\\) \uff1b \\(\\alpha = (\\alpha_1, \\alpha_2,\u00b7\u00b7\u00b7,\\alpha_N)^T\\) \\(\\alpha \\gets 0, b \\gets 0\\) \uff1b \u5728\u8bad\u7ec3\u96c6\u4e2d\u9009\u53d6\u6570\u636e \\((x_i, y_i)\\) \uff1b \u5982\u679c \\(\\left(\\sum_{j=1}^{N}\\alpha_j y_j x_j \\cdot x +b\\right)\\leq 0\\) \uff1a \\[ \\begin{aligned} \\alpha_i &\\gets \\alpha_i + \\eta\\\\ b &\\gets b + \\eta y_i \\end{aligned} \\] \u8f6c\u81f3 2 \u76f4\u5230\u6ca1\u6709\u8bef\u5206\u7c7b\u6570\u636e \u5728\u5bf9\u5076\u5f62\u5f0f\u4e2d\u8bad\u7ec3\u5b9e\u4f8b\u4ec5\u4ee5\u5185\u79ef\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u8ba1\u7b97\u51fa\u6837\u672c\u5b9e\u4f8b\u95f4\u7684\u5185\u79ef\u5e76\u4ee5\u77e9\u9635\u7684\u5f62\u5f0f\u5b58\u50a8\uff0c\u5373\u4e3a Gram \u77e9\u9635\uff08Gram matrix\uff09 \\[ G=[x_i \\cdot x_j]_{N \\times N} \\]","title":"\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\uff08\u5bf9\u5076\u5f62\u5f0f\uff09"},{"location":"ai/ch1_2/#_10","text":"\u5f15\u5165\u57fa\u672c\u5e93 Python import numpy as np import matplotlib.pyplot as plt \u6570\u636e\u51c6\u5907 Python negative_samples = np . random . multivariate_normal ( mean = [ 3 , 0 ], cov = [[ 1 , 0.65 ],[ 0.65 , 1 ]], size = 50 ) positive_samples = np . random . multivariate_normal ( mean = [ 0 , 3 ], cov = [[ 1 , 0.65 ],[ 0.65 , 1 ]], size = 50 ) x = np . vstack (( negative_samples , positive_samples )) . astype ( 'float32' ) l = np . vstack (( np . full (( 50 , 1 ), - 1 ), np . ones (( 50 , 1 )))) . astype ( 'float32' )","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"ai/ch1_2/#_11","text":"\u521d\u59cb\u5316\u53c2\u6570 Python w = np . random . randn ( 2 , 1 ) . astype ( 'float32' ) b = np . random . randn ( 1 ,) . astype ( 'float32' ) \u5c55\u793a Python figurex = np . linspace ( - 2 , 5 , 100 ) figurey = - w [ 0 ] / w [ 1 ] * figurex - b / w [ 1 ] plt . plot ( figurex , figurey , \"-r\" ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = l [:, 0 ]) plt . show () \u8bad\u7ec3 Python index = 0 lr = 1e-2 while ( index < 100 ): if ( l [ index , 0 ] * ( np . matmul ( x [ index ], w ) + b ) <= 0 ): w += ( lr * l [ index , 0 ] * x [ index ]) . reshape ( 2 , 1 ) b += lr * l [ index , 0 ] index = 0 else : index += 1 \u5c55\u793a Python figurex = np . linspace ( - 2 , 5 , 100 ) figurey = - w [ 0 ] / w [ 1 ] * figurex - b / w [ 1 ] plt . plot ( figurex , figurey , \"-r\" ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = l [:, 0 ]) plt . show ()","title":"\u539f\u59cb\u5f62\u5f0f"},{"location":"ai/ch1_2/#_12","text":"\u521d\u59cb\u5316\u53c2\u6570 Python gram = np . matmul ( x , x . T ) alpha = np . random . randn ( 100 ,) . astype ( 'float32' ) b = np . random . randn ( 1 ,) . astype ( 'float32' ) def sig_al ( arr ): return np . array ([ a * b for a , b in zip ( alpha , l . squeeze ())]) \u5c55\u793a Python figurex = np . linspace ( - 2 , 5 , 100 ) figurey = - np . matmul ( sig_al ( alpha ), x [:, 0 ] . reshape ( - 1 , 1 )) / np . matmul ( sig_al ( alpha ), x [:, 1 ] . reshape ( - 1 , 1 )) * figurex - b / np . matmul ( sig_al ( alpha ), x [:, 1 ] . reshape ( - 1 , 1 )) plt . plot ( figurex , figurey , \"-r\" ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = l [:, 0 ]) plt . show () \u8bad\u7ec3 Python index = 0 lr = 1e-2 while ( index < 100 ): if ( l [ index , 0 ] * ( np . matmul ( sig_al ( alpha ), gram [:, index ] . reshape ( - 1 , 1 )) + b ) <= 0 ): alpha [ index ] += lr b += lr * l [ index , 0 ] index = 0 else : index += 1 \u5c55\u793a Python figurex = np . linspace ( - 2 , 5 , 100 ) figurey = - np . matmul ( sig_al ( alpha ), x [:, 0 ] . reshape ( - 1 , 1 )) / np . matmul ( sig_al ( alpha ), x [:, 1 ] . reshape ( - 1 , 1 )) * figurex - b / np . matmul ( sig_al ( alpha ), x [:, 1 ] . reshape ( - 1 , 1 )) plt . plot ( figurex , figurey , \"-r\" ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = l [:, 0 ]) plt . show ()","title":"\u5bf9\u5076\u5f62\u5f0f"},{"location":"ai/ch1_2/#_13","text":"\u6570\u636e\u51c6\u5907 Python negative_samples1 = np . random . multivariate_normal ( mean = [ 3 , - 4 ], cov = [[ 0.8 , 0 ], [ 0 , 0.8 ]], size = 25 ) negative_samples2 = np . random . multivariate_normal ( mean = [ 3 , 6 ], cov = [[ 0.8 , 0 ], [ 0 , 0.8 ]], size = 25 ) positive_samples = np . random . multivariate_normal ( mean = [ 1 , 0 ], cov = [[ 0.8 , 0 ], [ 0 , 0.8 ]], size = 50 ) x = np . vstack (( negative_samples1 , negative_samples2 , positive_samples )) . astype ( 'float32' ) l = np . vstack (( np . full (( 50 , 1 ), - 1 ), np . ones (( 50 , 1 )))) . astype ( 'float32' ) \u521d\u59cb\u5316\u53c2\u6570 Python gram = np . matmul ( x , x . T ) poly_kernel_gram = np . ones (( 100 , 100 )) . astype ( 'float32' ) for i in range ( 100 ): for j in range ( 100 ): poly_kernel_gram [ i , j ] = ( 1 + gram [ i , j ]) ** 2 alpha = np . random . randn ( 100 ,) . astype ( 'float32' ) b = np . random . randn ( 1 ,) . astype ( 'float32' ) def sig_al ( arr ): return np . array ([ a * b for a , b in zip ( alpha , l . squeeze ())]) \u5c55\u793a Python plt . figure ( figsize = ( 18 , 5 )) plt . subplot ( 1 , 3 , 1 ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = l [:, 0 ]) pre = np . array ([ 1 if ( np . matmul ( sig_al ( alpha ), poly_kernel_gram [:, index ] . reshape ( - 1 , 1 )) + b ) >= 0 else - 1 for index in range ( 100 )]) . squeeze () plt . subplot ( 1 , 3 , 2 ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = pre ) uni_x = [] x_line = np . linspace ( - 1 , 5 , 21 ) . astype ( 'float32' ) for item in x_line : for i in range ( 49 ): uni_x . append ( item ) uni_x = np . array ( uni_x ) . reshape ( - 1 , 1 ) uni_y = [] y_line = np . linspace ( - 6 , 8 , 49 ) . astype ( 'float32' ) for i in range ( 21 ): for item in y_line : uni_y . append ( item ) uni_y = np . array ( uni_y ) . reshape ( - 1 , 1 ) uni = np . hstack (( uni_x , uni_y )) uni_pre = np . array ([ 1 if np . sum ([ sig_al ( alpha )[ j ] * ( 1 + np . matmul ( x [ j ], uni [ i ] . T )) ** 2 for j in range ( 100 )]) + b >= 0 else - 1 for i in range ( 1029 )]) . squeeze () plt . subplot ( 1 , 3 , 3 ) plt . scatter ( uni [:, 0 ], uni [:, 1 ], c = uni_pre ) plt . show () \u8bad\u7ec3 Python index = 0 lr = 1e-2 while ( index < 100 ): if ( l [ index , 0 ] * ( np . matmul ( sig_al ( alpha ), poly_kernel_gram [:, index ] . reshape ( - 1 , 1 )) + b ) <= 0 ): alpha [ index ] += lr b += lr * l [ index , 0 ] index = 0 else : index += 1 \u5c55\u793a Python plt . figure ( figsize = ( 18 , 5 )) plt . subplot ( 1 , 3 , 1 ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = l [:, 0 ]) pre = np . array ([ 1 if ( np . matmul ( sig_al ( alpha ), poly_kernel_gram [:, index ] . reshape ( - 1 , 1 )) + b ) >= 0 else - 1 for index in range ( 100 )]) . squeeze () plt . subplot ( 1 , 3 , 2 ) plt . scatter ( x [:, 0 ], x [:, 1 ], c = pre ) uni_x = [] x_line = np . linspace ( - 1 , 5 , 21 ) . astype ( 'float32' ) for item in x_line : for i in range ( 49 ): uni_x . append ( item ) uni_x = np . array ( uni_x ) . reshape ( - 1 , 1 ) uni_y = [] y_line = np . linspace ( - 6 , 8 , 49 ) . astype ( 'float32' ) for i in range ( 21 ): for item in y_line : uni_y . append ( item ) uni_y = np . array ( uni_y ) . reshape ( - 1 , 1 ) uni = np . hstack (( uni_x , uni_y )) uni_pre = np . array ([ 1 if np . sum ([ sig_al ( alpha )[ j ] * ( 1 + np . matmul ( x [ j ], uni [ i ] . T )) ** 2 for j in range ( 100 )]) + b >= 0 else - 1 for i in range ( 1029 )]) . squeeze () plt . subplot ( 1 , 3 , 3 ) plt . scatter ( uni [:, 0 ], uni [:, 1 ], c = uni_pre ) plt . show ()","title":"\u6838\u65b9\u6cd5 | \u975e\u7ebf\u6027\u4e8c\u5206\u7c7b"},{"location":"ai/ch1_2/#_14","text":"\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\uff08\u7b2c\u4e8c\u7248\uff09\u300b\u674e\u822a","title":"\u53c2\u8003\u8d44\u6599"},{"location":"ai/ch1_3/","text":"\u7ebf\u6027\u56de\u5f52 \u00b6 \u7ebf\u6027\u56de\u5f52\uff08linear regression\uff09\u662f\u5e94\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684\u56de\u5f52\u6a21\u578b\uff0c\u4f46\u5176\u57fa\u672c\u601d\u60f3\u4e0e\u5f62\u5f0f\u65e9\u5df2\u8d85\u51fa\u4e86\u5355\u7eaf\u7684\u56de\u5f52\u573a\u666f\u3002\u56e0\u4e3a\u5176\u63a8\u5bfc\u5f62\u5f0f\u6bd4\u8f83\u7b80\u5355\u3001\u7ecf\u5178\uff0c\u5c31\u62ff\u6765\u8bb0\u5f55\u4e00\u4e0b\uff0c\u987a\u5e26\u7ed3\u5408\u76f8\u5173\u7684\u4f18\u5316\u5b66\u4e60\u4e0e\u6b63\u5219\u6280\u5de7\u4e00\u8d77\u4e86 \u5206\u7c7b \u00b6 \u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u975e\u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u57fa\u672c\u5f62\u5f0f \u00b6 \u5047\u8bbe\u6837\u672c\u5199\u4f5c\u589e\u5e7f\u540e\u7684\u5217\u5411\u91cf\uff0c\u5373 \\[ \\mathbf{x} = [1,x^{(1)},x^{(2)},\u00b7\u00b7\u00b7,x^{(p)}]^\\mathrm{T} \\] \u5373\u7b2c\u4e00\u4e2a\u5bf9\u5e94\u53c2\u6570\u7684\u504f\u7f6e\u9879\uff0c\u5269\u4e0b\u7684\u5373\u662f\u6837\u672c\u7684\u7279\u5f81\u9879\uff0c\u7ebf\u6027\u56de\u5f52\u7684\u6a21\u578b\u76f8\u5f53\u7b80\u6d01 \\[ y = \\theta_0+\\theta_1x^{(1)}+\\theta_2x^{(2)}+\u00b7\u00b7\u00b7\\theta_px^{(p)} \\] \u5373 \\[ y = \\mathbf{x}^\\mathrm{T}\\boldsymbol{\\theta} \\] \u5c06\u6574\u4e2a\u6837\u672c\u5199\u4f5c\u77e9\u9635\u5f62\u5f0f\uff0c\u6709 \\[ \\begin{aligned} \\mathbf{X} &= [\\mathbf{x_1},\\mathbf{x_2},\u00b7\u00b7\u00b7,\\mathbf{x_n}]^\\mathrm{T}\\\\ \\mathbf{y} &= [y_1,y_2,\u00b7\u00b7\u00b7,y_n]^\\mathrm{T}\\\\ \\boldsymbol{\\theta} &= [\\theta_0,\\theta_1,\u00b7\u00b7\u00b7,\\theta_p]^\\mathrm{T} \\end{aligned} \\] \u5219 \\[ \\mathbf{y} = f(\\mathbf{X};\\boldsymbol{\\theta}) = \\mathbf{X}\\boldsymbol{\\theta} \\] \u635f\u5931\u7b56\u7565 \u00b6 \u91c7\u53d6 SSE\uff08sum of squared error\uff09\uff0c\u5c31\u662f\u5e38\u89c1\u7684\u5e73\u65b9\u635f\u5931\uff0c\u8be5\u51fd\u6570\u662f\u51f8\u51fd\u6570\uff0c\u8fd9\u4e00\u4f18\u79c0\u7684\u6027\u8d28\u662f\u6b63\u89c4\u65b9\u7a0b\u6c42\u6700\u4f18\u89e3\u7684\u57fa\u7840 \\[ \\begin{aligned} J(\\boldsymbol{\\theta}) &= \\frac{1}{2}\\sum_{i=1}^{n}(\\hat{y_i}-y_i)^2\\\\ % &= \\frac{1}{2}\\sum_{i=1}^{n}(\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}-y_i)^2\\\\ &= \\frac{1}{2}(\\hat{\\mathbf{y}}-\\mathbf{y})^\\mathrm{T}(\\hat{\\mathbf{y}}-\\mathbf{y})\\\\ &= \\frac{1}{2}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})\\\\ &= \\frac{1}{2}(\\boldsymbol{\\theta}^\\mathrm{T}\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y}^\\mathrm{T}\\mathbf{X}\\boldsymbol{\\theta}-\\boldsymbol{\\theta}^\\mathrm{T}\\mathbf{X}^\\mathrm{T}\\mathbf{y}+\\mathbf{y}^\\mathrm{T}\\mathbf{y}) \\end{aligned} \\] \u4f18\u5316\u5b66\u4e60 \u00b6 \u6b63\u89c4\u65b9\u7a0b\u76f4\u63a5\u6c42\u89e3 \u00b6 \u4e3a\u4e86\u5f97\u5230\u5b66\u4e60\u7684\u53c2\u6570 \\(\\boldsymbol{\\theta}\\) \uff0c\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u76f4\u63a5\u6c42\u89e3 \\[ \\boldsymbol{\\theta}^*=\\mathop{\\arg\\min}\\limits_{\\theta}J(\\boldsymbol{\\theta}) \\] \u5373\u6c42\u635f\u5931\u51fd\u6570 \\(J(\\boldsymbol{\\theta})\\) \u7684\u6700\u5c0f\u503c\u70b9\uff0c\u5148\u5bf9\u5176\u6c42\u4e00\u9636\u5bfc \\[ \\begin{aligned} \\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta}) &= \\frac{\\partial J(\\boldsymbol{\\theta})}{\\partial\\boldsymbol{\\theta}}\\\\ &= \\frac{1}{2}(2\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\boldsymbol{\\theta}-2\\mathbf{X}^\\mathrm{T}\\mathbf{y})\\\\ &= \\mathbf{X}^\\mathrm{T}\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{X}^\\mathrm{T}\\mathbf{y} \\end{aligned} \\] \u518d\u6709\u4e8c\u9636\u5bfc \\[ \\frac{\\partial\\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta})}{\\partial\\boldsymbol{\\theta}} = \\mathbf{X}^\\mathrm{T}\\mathbf{X} \\] \u5173\u4e8e \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \\(\\mathbf{H} = \\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \u603b\u662f\u534a\u6b63\u5b9a\u7684\uff08PSD\uff0cpositive semi-definite\uff09\uff0c\u56e0\u4e3a\u5bf9\u4efb\u610f\u975e\u96f6\u5217\u5411\u91cf \\(\\mathbf{a}\\) \uff0c\u603b\u6709 \\[ \\mathbf{a}^\\mathrm{T}\\mathbf{H}\\mathbf{a} = \\mathbf{a}^\\mathrm{T}\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{a} = \\Vert\\mathbf{X}\\mathbf{a}\\Vert_2^2 \\geq 0 \\] \u4e14\u5f53 \\(\\mathbf{X}\\) \u5217\u6ee1\u79e9\u65f6\uff0c \\(\\mathbf{H}\\) \u4e3a\u6b63\u5b9a\u7684\uff08PD\uff0cpisitive definite\uff09\uff0c\u6545 \\(\\mathbf{H} = \\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \u53ef\u9006 \u56de\u5230\u51fd\u6570 \u7531 \\(J(\\boldsymbol{\\theta})\\) \u7684\u4e8c\u9636\u5bfc\uff0c\u5373 Hessian \u77e9\u9635\u53ef\u77e5\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c \\(\\mathbf{X}\\) \u7684\u884c\u6570\u8fdc\u5927\u4e8e\u5217\u6570\uff08\u6837\u672c\u6570\u8fdc\u591a\u4e8e\u7279\u5f81\u6570\uff09\uff0c\u8fd9\u610f\u5473\u7740 \\(\\mathbf{X}\\) \u662f\u5217\u6ee1\u79e9\u7684\uff0c\u6545 \\(J(\\boldsymbol{\\theta})\\) \u7684\u4e8c\u9636\u5bfc\u6b63\u5b9a\u53ef\u9006 \u8fdb\u4e00\u6b65\u6211\u4eec\u77e5\u9053\uff0c\u591a\u5143\u51fd\u6570 \\(J(\\boldsymbol{\\theta})\\) \u662f\u51f8\u51fd\u6570 \u6781\u503c\u70b9\u4fbf\u662f\u6700\u503c\u70b9 \u6781\u503c\u70b9 \\(\\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta}) = 0\\) \u662f\u6781\u5c0f\u503c\u70b9 \u6545\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5199\u51fa \\(\\boldsymbol{\\theta}^*\\) \u7684\u89e3\u6790\u89e3 \\[ \\begin{aligned} \\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta}) &= \\mathbf{X}^\\mathrm{T}\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{X}^\\mathrm{T}\\mathbf{y} = 0\\\\ \\boldsymbol{\\theta}^*&= (\\mathbf{X}^\\mathrm{T}\\mathbf{X})^{-1}\\mathbf{X}^\\mathrm{T}\\mathbf{y} \\end{aligned} \\] \u8ba1\u7b97\u5f00\u9500\u7c97\u4f30 \\[ \\boldsymbol{\\theta}^* = (\\mathbf{X}^\\mathrm{T}\\mathbf{X})^{-1}\\mathbf{X}^\\mathrm{T}\\mathbf{y} \\] \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \uff1a \\(O(p^2n)\\) \uff0c \\(\\mathbf{X}^\\mathrm{T}\\mathbf{y}\\) \uff1a \\(O(p^3)\\) \uff0c\u5408\u8d77\u6765 \\(O(p^2n+p^3)\\) \u5f53 \\(n >> p\\) \u65f6\uff0c\u524d\u4e00\u6b65\u4e58\u79ef\u5f00\u9500\u66f4\u5927 \u68af\u5ea6\u4e0b\u964d \u00b6 \u4e00\u822c\u7684\u60c5\u5f62 \u5bf9\u4efb\u610f\u53ef\u5f97\u5230\u4e00\u9636\u5bfc\u7684\u51fd\u6570 \\(f(\\mathbf{x})\\) \u521d\u59cb\u5316 \\(k = 0\\) \uff0c\u968f\u673a\u6216\u4e13\u95e8\u9009\u53d6\u8d77\u59cb\u70b9 \\(\\mathbf{x}_0\\) \u5f53 \\(k < k_{max}\\) \u65f6\uff0c\u5373\u8bbe\u5b9a\u8fed\u4ee3 \\(k_{max}\\) \u6b21\uff1a \\[ \\mathbf{x}_{t+1} = \\mathbf{x}_t - \\alpha \\nabla_{\\mathbf{x}}f(\\mathbf{x}_t) \\] \u5176\u5b66\u4e60\u7387 \\(\\alpha\\) \uff0c\u8d77\u59cb\u70b9 \\(\\mathbf{x}_0\\) \uff08\u82e5 \\(f(\\mathbf{x})\\) \u4e3a\u51f8\u5219\u80fd\u907f\u514d\u6536\u655b\u5230\u5c40\u90e8\u6781\u503c\uff09\u4ee5\u53ca\u4f18\u5316\u5bf9\u8c61 \\(f(\\mathbf{x})\\) \u90fd\u4f1a\u5bf9\u68af\u5ea6\u4e0b\u964d\u6548\u679c\u6709\u5f71\u54cd \u7ebf\u6027\u56de\u5f52\u7684\u60c5\u5f62 \u4e4b\u524d\u63a8\u5bfc\u4e2d\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u51f8\u51fd\u6570 \\(J(\\boldsymbol{\\theta})\\) \u7684\u4e00\u9636\u5bfc \\[ \\begin{aligned} \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} - \\alpha \\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta}^{t})\\\\ \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} - \\alpha (\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\boldsymbol{\\theta}^{t}-\\mathbf{X}^\\mathrm{T}\\mathbf{y})\\\\ \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} + \\alpha\\mathbf{X}^\\mathrm{T}(\\mathbf{y}-\\mathbf{X}\\boldsymbol{\\theta}^{t}) \\end{aligned} \\] \u8fd9\u91cc\u6211\u4eec\u5c06\u6837\u672c \\(\\mathbf{X}\\) \u5199\u6210\u4e86\u6574\u4f53\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u4ee3\u8868\u6211\u4eec\u80fd\u4e00\u6b21\u83b7\u53d6\u5927\u91cf\u6570\u636e\uff0c\u4e5f\u53eb\u505a\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08BGD\uff0cBatch Gradient Descent\uff09 \u4f46\u5b9e\u9645\u5e94\u7528\u65f6\uff0c\u6211\u4eec\u4e0d\u4e00\u5b9a\u80fd\u968f\u65f6\u83b7\u53d6\u5927\u6279\u91cf\u7684\u6837\u672c\u4fe1\u606f\uff08\u4f8b\u5982\u5728\u7ebf\u5b66\u4e60\uff09\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u6539\u5199\u5f62\u5f0f \\[ \\begin{aligned} \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} + \\alpha\\mathbf{X}^\\mathrm{T}(\\mathbf{y}-\\mathbf{X}\\boldsymbol{\\theta}^{t})\\\\ \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} + \\alpha\\sum_{i=1}^{n}(y_i-\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}^{t})\\mathbf{x}_i \\end{aligned} \\] \u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u5bf9\u5355\u72ec \\(\\mathbf{x}\\) \uff0c\u6211\u4eec\u6709 \\[ \\boldsymbol{\\theta}^{t+1} = \\boldsymbol{\\theta}^{t} + \\alpha (y-\\mathbf{x}^\\mathrm{T}\\boldsymbol{\\theta}^{t})\\mathbf{x} \\] \u4e8e\u662f\u5c06 \\(\\mathbf{X}\\) \u5199\u6210\u4e86\u5355\u4e2a\u6837\u672c \\(\\mathbf{x}\\) \u7684\u5f62\u5f0f\uff0c\u4ee3\u8868\u6211\u4eec\u4ec5\u51ed\u5c11\u91cf\u751a\u81f3\u5355\u4e2a\u6570\u636e\u4fe1\u606f\u4e5f\u80fd\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\uff0c\u5373\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD\uff0cStochastic Gradient Descent\uff09 \u5404\u81ea\u7279\u70b9 \u5bf9\u4e8e BGD\uff1a \u5bf9\u5e94\u6574\u4e2a\u6570\u636e\u96c6 \\(\\mathbf{X}\\) \u5f62\u5f0f\uff0c\u5b58\u50a8\u5f00\u9500\u5927 \u4e00\u6b21 Epoch \u7ecf\u8fc7 1 \u6b21\u53c2\u6570\u66f4\u65b0 \u5bf9\u4e8e SGD\uff1a \u5bf9\u5e94\u6570\u636e\u96c6\u67d0\u4e00\u90e8\u5206 \\(\\alpha\\sum_{i=1}^{B}(y_i-\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}^{t})\\mathbf{x}_i\\) \u5f62\u5f0f\uff08Mini-Batch\uff09\uff0c\u5b58\u50a8\u5f00\u9500\u9002\u4e2d \u4e00\u6b21 Epoch \u7ecf\u8fc7 \\(\\frac{n}{B}\\) \u6b21\u53c2\u6570\u66f4\u65b0 \u67d0\u4e9b\u60c5\u51b5\u53ea\u9700\u5355\u4e00\u6837\u672c \\(\\mathbf{x}\\) \uff08Single-Sample\uff09\uff0c\u5b58\u50a8\u5f00\u9500\u5c0f \u4e00\u6b21 Epoch \u7ecf\u8fc7 \\(n\\) \u6b21\u53c2\u6570\u66f4\u65b0 \u53ef\u4ee5\u770b\u4f5c\u975e\u5168\u5c40\u4f18\u5316\u7684 BGD\uff0c\u5f15\u5165\u4e86\u968f\u673a\u566a\u58f0\uff0c\u88ab\u8ba4\u4e3a\u4e0d\u5bb9\u6613\u843d\u5165\u5c40\u90e8\u6781\u503c\uff0c\u5728\u975e\u51f8\u4f18\u5316\u4e2d\u5f88\u6d41\u884c \u53ef\u4ee5\u770b\u51fa SGD \u76f8\u5bf9\u4e8e BGD \u66f4\u65b0\u9891\u7387\u66f4\u9ad8\uff0c\u9002\u7528\u4e8e\u9ad8\u5ea6\u5197\u4f59\u7684\u6570\u636e\u96c6\uff0c\u4f46\u6ce8\u610f\u89c2\u6d4b\u635f\u5931\u53ef\u80fd\u8981\u5f52\u4e00\u5316\uff08\u91c7\u7528 MSE \u800c\u4e0d\u662f SSE\uff09 \u4f18\u5316\u65b9\u6cd5\u603b\u7ed3 \u00b6 \u6b63\u89c4\u65b9\u7a0b\u6c42\u89e3\uff1a \\(\\boldsymbol{\\theta}^* = (\\mathbf{X}^\\mathrm{T}\\mathbf{X})^{-1}\\mathbf{X}^\\mathrm{T}\\mathbf{y}\\) \u4f18\u70b9\uff1a\u4e00\u6b65\u5230\u4f4d\uff0c\u5bb9\u6613\u5b9e\u73b0 \u7f3a\u70b9\uff1a\u9700\u8981\u6c42\u89e3 \\((\\mathbf{X}^\\mathrm{T}\\mathbf{X})^{-1}\\) \uff0c\u6210\u672c\u9ad8\u6602\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u6709\u89e3\uff08\u4f8b\u5982 \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \u662f\u4e0d\u53ef\u9006\u7684\uff09 GD / BGD\uff1a \\(\\boldsymbol{\\theta}^{t+1} = \\boldsymbol{\\theta}^{t} + \\alpha\\mathbf{X}^\\mathrm{T}(\\mathbf{y}-\\mathbf{X}\\boldsymbol{\\theta}^{t})\\) \u4f18\u70b9\uff1a\u5bb9\u6613\u5b9e\u73b0\uff0c\u5f62\u5f0f\u7b80\u6d01\uff0c\u5728 LR \u60c5\u5f62\u4e0b\u80fd\u4fdd\u8bc1\u6536\u655b \u7f3a\u70b9\uff1a\u5927\u6279\u91cf\uff0c\u6536\u655b\u6162 SGD / Mini-SGD\uff1a \\(\\boldsymbol{\\theta}^{t+1} = \\boldsymbol{\\theta}^{t} + \\alpha\\sum_{i=1}^{B}(y_i-\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}^{t})\\mathbf{x}_i\\) \u4f18\u70b9\uff1a\u66f4\u65b0\u9891\u7387\u9ad8\uff0c\u6536\u655b\u5feb\uff1b\u4e0d\u5bb9\u6613\u843d\u5165\u5c40\u90e8\u6781\u503c \u7f3a\u70b9\uff1a\u4e0d\u80fd\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18 \u6b63\u5219\u5316 \u00b6 \u6211\u4eec\u4ece\u6b63\u89c4\u65b9\u7a0b\u6c42\u89e3\u7684\u89c6\u89d2\u5f15\u5165 \\[ \\boldsymbol{\\theta}^* = (\\mathbf{X}^\\mathrm{T}\\mathbf{X})^{-1}\\mathbf{X}^\\mathrm{T}\\mathbf{y} \\] \u80fd\u5f97\u5230\u7684\u524d\u63d0\u662f \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \u53ef\u9006\uff0c\u4f46\u5982\u679c\u4e0d\u53ef\u9006\u600e\u4e48\u529e\uff1f Ridge Regression | L-2 \u6b63\u5219 \u00b6 \u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u65b9\u6cd5\u662f\u6dfb\u52a0\u6b63\u503c\u7684\u5bf9\u89d2\u77e9\u9635 \\[ \\boldsymbol{\\theta}_{ridge}^* = (\\mathbf{X}^\\mathrm{T}\\mathbf{X} + \\lambda \\mathbf{I})^{-1}\\mathbf{X}^\\mathrm{T}\\mathbf{y} \\] \u4e8e\u662f\u53ef\u4ee5\u770b\u4f5c \\[ \\boldsymbol{\\theta}_{ridge} = \\mathop{\\arg\\min}\\limits_{\\theta}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})+\\lambda\\boldsymbol{\\theta}^\\mathrm{T}\\boldsymbol{\\theta} \\] \u6c42\u89e3\uff0c\u5e76\u6c42\u4e00\u9636\u5bfc\u4ee4\u4e3a 0 \u7684\u60c5\u5f62\uff0c\u8054\u7cfb KKT \u6761\u4ef6\uff0c\u53ef\u4ee5\u7b49\u4ef7\u4e8e \\[ \\begin{aligned} \\boldsymbol{\\theta}_{ridge} &= \\mathop{\\arg\\min}\\limits_{\\theta}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})\\\\ s.t. &\\quad \\boldsymbol{\\theta}^\\mathrm{T}\\boldsymbol{\\theta}\\leq s^2 \\end{aligned} \\] \u5176\u5b9e\u5c31\u662f\u5728 \\(\\boldsymbol{\\theta}^\\mathrm{T}\\boldsymbol{\\theta}\\leq s^2\\) \u7684\u6761\u4ef6\u4e0b\uff0c\u6c42\u539f\u7ebf\u6027\u56de\u5f52\u7684\u89e3 \u53c2\u6570\u6536\u7f29 \u7b80\u5316\u8d77\u89c1\uff0c\u5047\u8bbe \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X} = \\mathbf{I}\\) \\[ \\begin{aligned} \\boldsymbol{\\theta}^* &= \\mathbf{X}^\\mathrm{T}\\mathbf{y}\\\\ \\boldsymbol{\\theta}_{ridge}^* &= \\frac{1}{1+\\lambda}\\mathbf{X}^\\mathrm{T}\\mathbf{y} \\end{aligned} \\] \u6545\u6709 \\(\\boldsymbol{\\theta}_{ridge}^* = \\frac{1}{1+\\lambda}\\boldsymbol{\\theta}^*\\) \uff0c\u8d77\u5230\u53c2\u6570\u6536\u7f29\u7684\u4f5c\u7528\uff0c\u5f53 \\(\\lambda\\) \u4e3a 0 \u65f6\uff0c\u53d8\u4e3a\u6b63\u5e38\u7ebf\u6027\u56de\u5f52 Lasso Regression | L-1 \u6b63\u5219 \u00b6 \u7c7b\u4f3c L-2 \u6b63\u5219\uff0cLasso \u56de\u5f52\u53ea\u4e0d\u8fc7\u5c06\u60e9\u7f5a\u9879\u7531 \\(\\lambda\\boldsymbol{\\theta}^\\mathrm{T}\\boldsymbol{\\theta}\\) \u5e73\u65b9\u9879\u53d8\u4e3a\u7edd\u5bf9\u503c\uff0c\u4e5f\u5c31\u662f L-1 \u8303\u6570 \\[ \\begin{aligned} \\boldsymbol{\\theta}_{lasso} &= \\mathop{\\arg\\min}\\limits_{\\theta}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})+\\lambda\\sum_{i=1}^n\\vert\\theta_i\\vert\\\\ \\boldsymbol{\\theta}_{lasso} &= \\mathop{\\arg\\min}\\limits_{\\theta}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})\\\\ s.t. &\\quad \\sum_{i=1}^n\\vert\\theta_i\\vert\\leq s \\end{aligned} \\] \u7279\u5f81\u9009\u62e9 \u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u53c2\u6570\u503c\u4e0d\u5927\u65f6\uff0cL-1 \u6b63\u5219\u503e\u5411\u4e8e\u5c06\u4e00\u4e9b\u4e0d\u91cd\u8981\u7684\u53c2\u6570\u7f6e\u4e3a 0\uff0c\u8d77\u5230\u7279\u5f81\u9009\u62e9\u7684\u4f5c\u7528 Elastic Regression | L-1 & L-2 \u00b6 \u4e00\u8d77\u7528 \\[ \\begin{aligned} \\boldsymbol{\\theta}_{elastic} = &\\mathop{\\arg\\min}\\limits_{\\theta}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})+\\lambda_1\\sum_{i=1}^n\\vert\\theta_i\\vert+\\lambda_2\\boldsymbol{\\theta}^\\mathrm{T}\\boldsymbol{\\theta}\\\\ \\boldsymbol{\\theta}_{elastic} &= \\mathop{\\arg\\min}\\limits_{\\theta}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})\\\\ s.t. &\\quad \\sum_{i=1}^n\\vert\\theta_i\\vert\\leq s; \\quad \\boldsymbol{\\theta}^\\mathrm{T}\\boldsymbol{\\theta}\\leq s^2 \\end{aligned} \\]","title":"\u7ebf\u6027\u56de\u5f52"},{"location":"ai/ch1_3/#_1","text":"\u7ebf\u6027\u56de\u5f52\uff08linear regression\uff09\u662f\u5e94\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684\u56de\u5f52\u6a21\u578b\uff0c\u4f46\u5176\u57fa\u672c\u601d\u60f3\u4e0e\u5f62\u5f0f\u65e9\u5df2\u8d85\u51fa\u4e86\u5355\u7eaf\u7684\u56de\u5f52\u573a\u666f\u3002\u56e0\u4e3a\u5176\u63a8\u5bfc\u5f62\u5f0f\u6bd4\u8f83\u7b80\u5355\u3001\u7ecf\u5178\uff0c\u5c31\u62ff\u6765\u8bb0\u5f55\u4e00\u4e0b\uff0c\u987a\u5e26\u7ed3\u5408\u76f8\u5173\u7684\u4f18\u5316\u5b66\u4e60\u4e0e\u6b63\u5219\u6280\u5de7\u4e00\u8d77\u4e86","title":"\u7ebf\u6027\u56de\u5f52"},{"location":"ai/ch1_3/#_2","text":"\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u975e\u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b","title":"\u5206\u7c7b"},{"location":"ai/ch1_3/#_3","text":"\u5047\u8bbe\u6837\u672c\u5199\u4f5c\u589e\u5e7f\u540e\u7684\u5217\u5411\u91cf\uff0c\u5373 \\[ \\mathbf{x} = [1,x^{(1)},x^{(2)},\u00b7\u00b7\u00b7,x^{(p)}]^\\mathrm{T} \\] \u5373\u7b2c\u4e00\u4e2a\u5bf9\u5e94\u53c2\u6570\u7684\u504f\u7f6e\u9879\uff0c\u5269\u4e0b\u7684\u5373\u662f\u6837\u672c\u7684\u7279\u5f81\u9879\uff0c\u7ebf\u6027\u56de\u5f52\u7684\u6a21\u578b\u76f8\u5f53\u7b80\u6d01 \\[ y = \\theta_0+\\theta_1x^{(1)}+\\theta_2x^{(2)}+\u00b7\u00b7\u00b7\\theta_px^{(p)} \\] \u5373 \\[ y = \\mathbf{x}^\\mathrm{T}\\boldsymbol{\\theta} \\] \u5c06\u6574\u4e2a\u6837\u672c\u5199\u4f5c\u77e9\u9635\u5f62\u5f0f\uff0c\u6709 \\[ \\begin{aligned} \\mathbf{X} &= [\\mathbf{x_1},\\mathbf{x_2},\u00b7\u00b7\u00b7,\\mathbf{x_n}]^\\mathrm{T}\\\\ \\mathbf{y} &= [y_1,y_2,\u00b7\u00b7\u00b7,y_n]^\\mathrm{T}\\\\ \\boldsymbol{\\theta} &= [\\theta_0,\\theta_1,\u00b7\u00b7\u00b7,\\theta_p]^\\mathrm{T} \\end{aligned} \\] \u5219 \\[ \\mathbf{y} = f(\\mathbf{X};\\boldsymbol{\\theta}) = \\mathbf{X}\\boldsymbol{\\theta} \\]","title":"\u57fa\u672c\u5f62\u5f0f"},{"location":"ai/ch1_3/#_4","text":"\u91c7\u53d6 SSE\uff08sum of squared error\uff09\uff0c\u5c31\u662f\u5e38\u89c1\u7684\u5e73\u65b9\u635f\u5931\uff0c\u8be5\u51fd\u6570\u662f\u51f8\u51fd\u6570\uff0c\u8fd9\u4e00\u4f18\u79c0\u7684\u6027\u8d28\u662f\u6b63\u89c4\u65b9\u7a0b\u6c42\u6700\u4f18\u89e3\u7684\u57fa\u7840 \\[ \\begin{aligned} J(\\boldsymbol{\\theta}) &= \\frac{1}{2}\\sum_{i=1}^{n}(\\hat{y_i}-y_i)^2\\\\ % &= \\frac{1}{2}\\sum_{i=1}^{n}(\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}-y_i)^2\\\\ &= \\frac{1}{2}(\\hat{\\mathbf{y}}-\\mathbf{y})^\\mathrm{T}(\\hat{\\mathbf{y}}-\\mathbf{y})\\\\ &= \\frac{1}{2}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})\\\\ &= \\frac{1}{2}(\\boldsymbol{\\theta}^\\mathrm{T}\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y}^\\mathrm{T}\\mathbf{X}\\boldsymbol{\\theta}-\\boldsymbol{\\theta}^\\mathrm{T}\\mathbf{X}^\\mathrm{T}\\mathbf{y}+\\mathbf{y}^\\mathrm{T}\\mathbf{y}) \\end{aligned} \\]","title":"\u635f\u5931\u7b56\u7565"},{"location":"ai/ch1_3/#_5","text":"","title":"\u4f18\u5316\u5b66\u4e60"},{"location":"ai/ch1_3/#_6","text":"\u4e3a\u4e86\u5f97\u5230\u5b66\u4e60\u7684\u53c2\u6570 \\(\\boldsymbol{\\theta}\\) \uff0c\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u76f4\u63a5\u6c42\u89e3 \\[ \\boldsymbol{\\theta}^*=\\mathop{\\arg\\min}\\limits_{\\theta}J(\\boldsymbol{\\theta}) \\] \u5373\u6c42\u635f\u5931\u51fd\u6570 \\(J(\\boldsymbol{\\theta})\\) \u7684\u6700\u5c0f\u503c\u70b9\uff0c\u5148\u5bf9\u5176\u6c42\u4e00\u9636\u5bfc \\[ \\begin{aligned} \\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta}) &= \\frac{\\partial J(\\boldsymbol{\\theta})}{\\partial\\boldsymbol{\\theta}}\\\\ &= \\frac{1}{2}(2\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\boldsymbol{\\theta}-2\\mathbf{X}^\\mathrm{T}\\mathbf{y})\\\\ &= \\mathbf{X}^\\mathrm{T}\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{X}^\\mathrm{T}\\mathbf{y} \\end{aligned} \\] \u518d\u6709\u4e8c\u9636\u5bfc \\[ \\frac{\\partial\\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta})}{\\partial\\boldsymbol{\\theta}} = \\mathbf{X}^\\mathrm{T}\\mathbf{X} \\] \u5173\u4e8e \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \\(\\mathbf{H} = \\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \u603b\u662f\u534a\u6b63\u5b9a\u7684\uff08PSD\uff0cpositive semi-definite\uff09\uff0c\u56e0\u4e3a\u5bf9\u4efb\u610f\u975e\u96f6\u5217\u5411\u91cf \\(\\mathbf{a}\\) \uff0c\u603b\u6709 \\[ \\mathbf{a}^\\mathrm{T}\\mathbf{H}\\mathbf{a} = \\mathbf{a}^\\mathrm{T}\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{a} = \\Vert\\mathbf{X}\\mathbf{a}\\Vert_2^2 \\geq 0 \\] \u4e14\u5f53 \\(\\mathbf{X}\\) \u5217\u6ee1\u79e9\u65f6\uff0c \\(\\mathbf{H}\\) \u4e3a\u6b63\u5b9a\u7684\uff08PD\uff0cpisitive definite\uff09\uff0c\u6545 \\(\\mathbf{H} = \\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \u53ef\u9006 \u56de\u5230\u51fd\u6570 \u7531 \\(J(\\boldsymbol{\\theta})\\) \u7684\u4e8c\u9636\u5bfc\uff0c\u5373 Hessian \u77e9\u9635\u53ef\u77e5\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c \\(\\mathbf{X}\\) \u7684\u884c\u6570\u8fdc\u5927\u4e8e\u5217\u6570\uff08\u6837\u672c\u6570\u8fdc\u591a\u4e8e\u7279\u5f81\u6570\uff09\uff0c\u8fd9\u610f\u5473\u7740 \\(\\mathbf{X}\\) \u662f\u5217\u6ee1\u79e9\u7684\uff0c\u6545 \\(J(\\boldsymbol{\\theta})\\) \u7684\u4e8c\u9636\u5bfc\u6b63\u5b9a\u53ef\u9006 \u8fdb\u4e00\u6b65\u6211\u4eec\u77e5\u9053\uff0c\u591a\u5143\u51fd\u6570 \\(J(\\boldsymbol{\\theta})\\) \u662f\u51f8\u51fd\u6570 \u6781\u503c\u70b9\u4fbf\u662f\u6700\u503c\u70b9 \u6781\u503c\u70b9 \\(\\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta}) = 0\\) \u662f\u6781\u5c0f\u503c\u70b9 \u6545\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5199\u51fa \\(\\boldsymbol{\\theta}^*\\) \u7684\u89e3\u6790\u89e3 \\[ \\begin{aligned} \\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta}) &= \\mathbf{X}^\\mathrm{T}\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{X}^\\mathrm{T}\\mathbf{y} = 0\\\\ \\boldsymbol{\\theta}^*&= (\\mathbf{X}^\\mathrm{T}\\mathbf{X})^{-1}\\mathbf{X}^\\mathrm{T}\\mathbf{y} \\end{aligned} \\] \u8ba1\u7b97\u5f00\u9500\u7c97\u4f30 \\[ \\boldsymbol{\\theta}^* = (\\mathbf{X}^\\mathrm{T}\\mathbf{X})^{-1}\\mathbf{X}^\\mathrm{T}\\mathbf{y} \\] \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \uff1a \\(O(p^2n)\\) \uff0c \\(\\mathbf{X}^\\mathrm{T}\\mathbf{y}\\) \uff1a \\(O(p^3)\\) \uff0c\u5408\u8d77\u6765 \\(O(p^2n+p^3)\\) \u5f53 \\(n >> p\\) \u65f6\uff0c\u524d\u4e00\u6b65\u4e58\u79ef\u5f00\u9500\u66f4\u5927","title":"\u6b63\u89c4\u65b9\u7a0b\u76f4\u63a5\u6c42\u89e3"},{"location":"ai/ch1_3/#_7","text":"\u4e00\u822c\u7684\u60c5\u5f62 \u5bf9\u4efb\u610f\u53ef\u5f97\u5230\u4e00\u9636\u5bfc\u7684\u51fd\u6570 \\(f(\\mathbf{x})\\) \u521d\u59cb\u5316 \\(k = 0\\) \uff0c\u968f\u673a\u6216\u4e13\u95e8\u9009\u53d6\u8d77\u59cb\u70b9 \\(\\mathbf{x}_0\\) \u5f53 \\(k < k_{max}\\) \u65f6\uff0c\u5373\u8bbe\u5b9a\u8fed\u4ee3 \\(k_{max}\\) \u6b21\uff1a \\[ \\mathbf{x}_{t+1} = \\mathbf{x}_t - \\alpha \\nabla_{\\mathbf{x}}f(\\mathbf{x}_t) \\] \u5176\u5b66\u4e60\u7387 \\(\\alpha\\) \uff0c\u8d77\u59cb\u70b9 \\(\\mathbf{x}_0\\) \uff08\u82e5 \\(f(\\mathbf{x})\\) \u4e3a\u51f8\u5219\u80fd\u907f\u514d\u6536\u655b\u5230\u5c40\u90e8\u6781\u503c\uff09\u4ee5\u53ca\u4f18\u5316\u5bf9\u8c61 \\(f(\\mathbf{x})\\) \u90fd\u4f1a\u5bf9\u68af\u5ea6\u4e0b\u964d\u6548\u679c\u6709\u5f71\u54cd \u7ebf\u6027\u56de\u5f52\u7684\u60c5\u5f62 \u4e4b\u524d\u63a8\u5bfc\u4e2d\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u51f8\u51fd\u6570 \\(J(\\boldsymbol{\\theta})\\) \u7684\u4e00\u9636\u5bfc \\[ \\begin{aligned} \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} - \\alpha \\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta}^{t})\\\\ \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} - \\alpha (\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\boldsymbol{\\theta}^{t}-\\mathbf{X}^\\mathrm{T}\\mathbf{y})\\\\ \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} + \\alpha\\mathbf{X}^\\mathrm{T}(\\mathbf{y}-\\mathbf{X}\\boldsymbol{\\theta}^{t}) \\end{aligned} \\] \u8fd9\u91cc\u6211\u4eec\u5c06\u6837\u672c \\(\\mathbf{X}\\) \u5199\u6210\u4e86\u6574\u4f53\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u4ee3\u8868\u6211\u4eec\u80fd\u4e00\u6b21\u83b7\u53d6\u5927\u91cf\u6570\u636e\uff0c\u4e5f\u53eb\u505a\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08BGD\uff0cBatch Gradient Descent\uff09 \u4f46\u5b9e\u9645\u5e94\u7528\u65f6\uff0c\u6211\u4eec\u4e0d\u4e00\u5b9a\u80fd\u968f\u65f6\u83b7\u53d6\u5927\u6279\u91cf\u7684\u6837\u672c\u4fe1\u606f\uff08\u4f8b\u5982\u5728\u7ebf\u5b66\u4e60\uff09\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u6539\u5199\u5f62\u5f0f \\[ \\begin{aligned} \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} + \\alpha\\mathbf{X}^\\mathrm{T}(\\mathbf{y}-\\mathbf{X}\\boldsymbol{\\theta}^{t})\\\\ \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} + \\alpha\\sum_{i=1}^{n}(y_i-\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}^{t})\\mathbf{x}_i \\end{aligned} \\] \u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u5bf9\u5355\u72ec \\(\\mathbf{x}\\) \uff0c\u6211\u4eec\u6709 \\[ \\boldsymbol{\\theta}^{t+1} = \\boldsymbol{\\theta}^{t} + \\alpha (y-\\mathbf{x}^\\mathrm{T}\\boldsymbol{\\theta}^{t})\\mathbf{x} \\] \u4e8e\u662f\u5c06 \\(\\mathbf{X}\\) \u5199\u6210\u4e86\u5355\u4e2a\u6837\u672c \\(\\mathbf{x}\\) \u7684\u5f62\u5f0f\uff0c\u4ee3\u8868\u6211\u4eec\u4ec5\u51ed\u5c11\u91cf\u751a\u81f3\u5355\u4e2a\u6570\u636e\u4fe1\u606f\u4e5f\u80fd\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\uff0c\u5373\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD\uff0cStochastic Gradient Descent\uff09 \u5404\u81ea\u7279\u70b9 \u5bf9\u4e8e BGD\uff1a \u5bf9\u5e94\u6574\u4e2a\u6570\u636e\u96c6 \\(\\mathbf{X}\\) \u5f62\u5f0f\uff0c\u5b58\u50a8\u5f00\u9500\u5927 \u4e00\u6b21 Epoch \u7ecf\u8fc7 1 \u6b21\u53c2\u6570\u66f4\u65b0 \u5bf9\u4e8e SGD\uff1a \u5bf9\u5e94\u6570\u636e\u96c6\u67d0\u4e00\u90e8\u5206 \\(\\alpha\\sum_{i=1}^{B}(y_i-\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}^{t})\\mathbf{x}_i\\) \u5f62\u5f0f\uff08Mini-Batch\uff09\uff0c\u5b58\u50a8\u5f00\u9500\u9002\u4e2d \u4e00\u6b21 Epoch \u7ecf\u8fc7 \\(\\frac{n}{B}\\) \u6b21\u53c2\u6570\u66f4\u65b0 \u67d0\u4e9b\u60c5\u51b5\u53ea\u9700\u5355\u4e00\u6837\u672c \\(\\mathbf{x}\\) \uff08Single-Sample\uff09\uff0c\u5b58\u50a8\u5f00\u9500\u5c0f \u4e00\u6b21 Epoch \u7ecf\u8fc7 \\(n\\) \u6b21\u53c2\u6570\u66f4\u65b0 \u53ef\u4ee5\u770b\u4f5c\u975e\u5168\u5c40\u4f18\u5316\u7684 BGD\uff0c\u5f15\u5165\u4e86\u968f\u673a\u566a\u58f0\uff0c\u88ab\u8ba4\u4e3a\u4e0d\u5bb9\u6613\u843d\u5165\u5c40\u90e8\u6781\u503c\uff0c\u5728\u975e\u51f8\u4f18\u5316\u4e2d\u5f88\u6d41\u884c \u53ef\u4ee5\u770b\u51fa SGD \u76f8\u5bf9\u4e8e BGD \u66f4\u65b0\u9891\u7387\u66f4\u9ad8\uff0c\u9002\u7528\u4e8e\u9ad8\u5ea6\u5197\u4f59\u7684\u6570\u636e\u96c6\uff0c\u4f46\u6ce8\u610f\u89c2\u6d4b\u635f\u5931\u53ef\u80fd\u8981\u5f52\u4e00\u5316\uff08\u91c7\u7528 MSE \u800c\u4e0d\u662f SSE\uff09","title":"\u68af\u5ea6\u4e0b\u964d"},{"location":"ai/ch1_3/#_8","text":"\u6b63\u89c4\u65b9\u7a0b\u6c42\u89e3\uff1a \\(\\boldsymbol{\\theta}^* = (\\mathbf{X}^\\mathrm{T}\\mathbf{X})^{-1}\\mathbf{X}^\\mathrm{T}\\mathbf{y}\\) \u4f18\u70b9\uff1a\u4e00\u6b65\u5230\u4f4d\uff0c\u5bb9\u6613\u5b9e\u73b0 \u7f3a\u70b9\uff1a\u9700\u8981\u6c42\u89e3 \\((\\mathbf{X}^\\mathrm{T}\\mathbf{X})^{-1}\\) \uff0c\u6210\u672c\u9ad8\u6602\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u6709\u89e3\uff08\u4f8b\u5982 \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \u662f\u4e0d\u53ef\u9006\u7684\uff09 GD / BGD\uff1a \\(\\boldsymbol{\\theta}^{t+1} = \\boldsymbol{\\theta}^{t} + \\alpha\\mathbf{X}^\\mathrm{T}(\\mathbf{y}-\\mathbf{X}\\boldsymbol{\\theta}^{t})\\) \u4f18\u70b9\uff1a\u5bb9\u6613\u5b9e\u73b0\uff0c\u5f62\u5f0f\u7b80\u6d01\uff0c\u5728 LR \u60c5\u5f62\u4e0b\u80fd\u4fdd\u8bc1\u6536\u655b \u7f3a\u70b9\uff1a\u5927\u6279\u91cf\uff0c\u6536\u655b\u6162 SGD / Mini-SGD\uff1a \\(\\boldsymbol{\\theta}^{t+1} = \\boldsymbol{\\theta}^{t} + \\alpha\\sum_{i=1}^{B}(y_i-\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}^{t})\\mathbf{x}_i\\) \u4f18\u70b9\uff1a\u66f4\u65b0\u9891\u7387\u9ad8\uff0c\u6536\u655b\u5feb\uff1b\u4e0d\u5bb9\u6613\u843d\u5165\u5c40\u90e8\u6781\u503c \u7f3a\u70b9\uff1a\u4e0d\u80fd\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18","title":"\u4f18\u5316\u65b9\u6cd5\u603b\u7ed3"},{"location":"ai/ch1_3/#_9","text":"\u6211\u4eec\u4ece\u6b63\u89c4\u65b9\u7a0b\u6c42\u89e3\u7684\u89c6\u89d2\u5f15\u5165 \\[ \\boldsymbol{\\theta}^* = (\\mathbf{X}^\\mathrm{T}\\mathbf{X})^{-1}\\mathbf{X}^\\mathrm{T}\\mathbf{y} \\] \u80fd\u5f97\u5230\u7684\u524d\u63d0\u662f \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \u53ef\u9006\uff0c\u4f46\u5982\u679c\u4e0d\u53ef\u9006\u600e\u4e48\u529e\uff1f","title":"\u6b63\u5219\u5316"},{"location":"ai/ch1_3/#ridge-regression-l-2","text":"\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u65b9\u6cd5\u662f\u6dfb\u52a0\u6b63\u503c\u7684\u5bf9\u89d2\u77e9\u9635 \\[ \\boldsymbol{\\theta}_{ridge}^* = (\\mathbf{X}^\\mathrm{T}\\mathbf{X} + \\lambda \\mathbf{I})^{-1}\\mathbf{X}^\\mathrm{T}\\mathbf{y} \\] \u4e8e\u662f\u53ef\u4ee5\u770b\u4f5c \\[ \\boldsymbol{\\theta}_{ridge} = \\mathop{\\arg\\min}\\limits_{\\theta}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})+\\lambda\\boldsymbol{\\theta}^\\mathrm{T}\\boldsymbol{\\theta} \\] \u6c42\u89e3\uff0c\u5e76\u6c42\u4e00\u9636\u5bfc\u4ee4\u4e3a 0 \u7684\u60c5\u5f62\uff0c\u8054\u7cfb KKT \u6761\u4ef6\uff0c\u53ef\u4ee5\u7b49\u4ef7\u4e8e \\[ \\begin{aligned} \\boldsymbol{\\theta}_{ridge} &= \\mathop{\\arg\\min}\\limits_{\\theta}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})\\\\ s.t. &\\quad \\boldsymbol{\\theta}^\\mathrm{T}\\boldsymbol{\\theta}\\leq s^2 \\end{aligned} \\] \u5176\u5b9e\u5c31\u662f\u5728 \\(\\boldsymbol{\\theta}^\\mathrm{T}\\boldsymbol{\\theta}\\leq s^2\\) \u7684\u6761\u4ef6\u4e0b\uff0c\u6c42\u539f\u7ebf\u6027\u56de\u5f52\u7684\u89e3 \u53c2\u6570\u6536\u7f29 \u7b80\u5316\u8d77\u89c1\uff0c\u5047\u8bbe \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X} = \\mathbf{I}\\) \\[ \\begin{aligned} \\boldsymbol{\\theta}^* &= \\mathbf{X}^\\mathrm{T}\\mathbf{y}\\\\ \\boldsymbol{\\theta}_{ridge}^* &= \\frac{1}{1+\\lambda}\\mathbf{X}^\\mathrm{T}\\mathbf{y} \\end{aligned} \\] \u6545\u6709 \\(\\boldsymbol{\\theta}_{ridge}^* = \\frac{1}{1+\\lambda}\\boldsymbol{\\theta}^*\\) \uff0c\u8d77\u5230\u53c2\u6570\u6536\u7f29\u7684\u4f5c\u7528\uff0c\u5f53 \\(\\lambda\\) \u4e3a 0 \u65f6\uff0c\u53d8\u4e3a\u6b63\u5e38\u7ebf\u6027\u56de\u5f52","title":"Ridge Regression | L-2 \u6b63\u5219"},{"location":"ai/ch1_3/#lasso-regression-l-1","text":"\u7c7b\u4f3c L-2 \u6b63\u5219\uff0cLasso \u56de\u5f52\u53ea\u4e0d\u8fc7\u5c06\u60e9\u7f5a\u9879\u7531 \\(\\lambda\\boldsymbol{\\theta}^\\mathrm{T}\\boldsymbol{\\theta}\\) \u5e73\u65b9\u9879\u53d8\u4e3a\u7edd\u5bf9\u503c\uff0c\u4e5f\u5c31\u662f L-1 \u8303\u6570 \\[ \\begin{aligned} \\boldsymbol{\\theta}_{lasso} &= \\mathop{\\arg\\min}\\limits_{\\theta}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})+\\lambda\\sum_{i=1}^n\\vert\\theta_i\\vert\\\\ \\boldsymbol{\\theta}_{lasso} &= \\mathop{\\arg\\min}\\limits_{\\theta}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})\\\\ s.t. &\\quad \\sum_{i=1}^n\\vert\\theta_i\\vert\\leq s \\end{aligned} \\] \u7279\u5f81\u9009\u62e9 \u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u53c2\u6570\u503c\u4e0d\u5927\u65f6\uff0cL-1 \u6b63\u5219\u503e\u5411\u4e8e\u5c06\u4e00\u4e9b\u4e0d\u91cd\u8981\u7684\u53c2\u6570\u7f6e\u4e3a 0\uff0c\u8d77\u5230\u7279\u5f81\u9009\u62e9\u7684\u4f5c\u7528","title":"Lasso Regression | L-1 \u6b63\u5219"},{"location":"ai/ch1_3/#elastic-regression-l-1-l-2","text":"\u4e00\u8d77\u7528 \\[ \\begin{aligned} \\boldsymbol{\\theta}_{elastic} = &\\mathop{\\arg\\min}\\limits_{\\theta}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})+\\lambda_1\\sum_{i=1}^n\\vert\\theta_i\\vert+\\lambda_2\\boldsymbol{\\theta}^\\mathrm{T}\\boldsymbol{\\theta}\\\\ \\boldsymbol{\\theta}_{elastic} &= \\mathop{\\arg\\min}\\limits_{\\theta}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})^\\mathrm{T}(\\mathbf{X}\\boldsymbol{\\theta}-\\mathbf{y})\\\\ s.t. &\\quad \\sum_{i=1}^n\\vert\\theta_i\\vert\\leq s; \\quad \\boldsymbol{\\theta}^\\mathrm{T}\\boldsymbol{\\theta}\\leq s^2 \\end{aligned} \\]","title":"Elastic Regression | L-1 &amp; L-2"},{"location":"ai/ch1_4/","text":"\u6734\u7d20\u8d1d\u53f6\u65af \u00b6 \u6734\u7d20\u8d1d\u53f6\u65af\uff08Naive Bayes\uff09\u6cd5\u662f\u57fa\u4e8e\u8d1d\u53f6\u65af\u5b9a\u7406\u548c\u7279\u5f81\u6761\u4ef6\u72ec\u7acb\u5047\u8bbe\u7684\u5206\u7c7b\u65b9\u6cd5\uff0c\u5b9e\u73b0\u7b80\u5355\uff0c\u5b66\u4e60\u4e0e\u9884\u6d4b\u7684\u6548\u7387\u90fd\u5f88\u9ad8\uff0c\u662f\u4e00\u79cd\u5e38\u7528\u7684\u751f\u6210\u5b66\u4e60\u65b9\u6cd5 \u5206\u7c7b \u00b6 \u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u751f\u6210\u5b66\u4e60\u65b9\u6cd5 \u57fa\u672c\u65b9\u6cd5 \u00b6 \u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u4e3a \\[ T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\},\\quad x\\in \\mathcal{X},y\\in \\mathcal{Y} \\] \u5176\u4e2d\u8f93\u5165\u7a7a\u95f4 \\(\\mathcal{X}\\subseteq R^n\\) \u4e3a \\(n\\) \u7ef4\u7a7a\u95f4\u5411\u91cf\u7684\u96c6\u5408\uff0c\u8f93\u51fa\u7a7a\u95f4\u4e3a\u7c7b\u6807\u8bb0\u96c6\u5408 \\(\\mathcal{Y}=\\{c_1,c_2,\u00b7\u00b7\u00b7,c_K\\}\\) \u4ee4 \\(X\\) \u548c \\(Y\\) \u5206\u522b\u4e3a\u5b9a\u4e49\u5728\u8f93\u5165\u3001\u8f93\u51fa\u7a7a\u95f4\u4e0a\u7684\u968f\u673a\u53d8\u91cf\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u57fa\u4e8e\u8d1d\u53f6\u65af\u5b9a\u7406\u9996\u5148\u5c06\u6700\u7ec8\u76ee\u6807\uff0c\u5373\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\(P(Y=c_k \\mid X=x)\\) \u8f6c\u5316\u4e3a\u6c42\u89e3\u8054\u5408\u6982\u7387\u5206\u5e03 \\(P(X=x,Y=c_k)\\) \\[ \\begin{aligned} P(Y=c_k \\mid X = x) &= \\frac{P(X=x,Y=c_k)}{P(X=x)}\\\\ &=\\frac{P(Y=c_k)P(X=x \\mid Y=c_k)}{\\sum_{Y}P(Y)P(X = x \\mid Y)} \\end{aligned} \\] \u4e3a\u6b64\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u9700\u8981\u9996\u5148\u5b66\u4e60\u5230\u5148\u9a8c\u6982\u7387 \\[ P(Y=c_k),\\quad k=1,2,\u00b7\u00b7\u00b7,K \\] \u4ee5\u53ca\u76f8\u5e94\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\[ \\begin{aligned} P(X=x \\mid Y=c_k)=&(X^{(1)}=x^{(1)},\u00b7\u00b7\u00b7,X^{(n)}=x^{(n)}\\mid Y=c_k)\\\\ &k=1,2,\u00b7\u00b7\u00b7,K \\end{aligned} \\] \u95ee\u9898\u5728\u4e8e\u6734\u7d20\u8d1d\u53f6\u65af\u5bf9\u4e8e\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\(P(X=x \\mid Y=c_k)\\) \u7684\u4f30\u8ba1\uff0c\u5728\u5b9e\u9645\u7684\u6837\u672c\u4e2d\u8be5\u5206\u5e03\u6709\u7740\u6307\u6570\u7ea7\u6570\u91cf\u7684\u53c2\u6570\u9700\u8981\u4f30\u8ba1 \u8bbe \\(X^{(i)}\\) \u53ef\u53d6\u503c\u6709 \\(S_i\\) \u4e2a\uff0c \\(i=1,2,\u00b7\u00b7\u00b7,n\\) \uff0c \\(Y\\) \u7684\u53d6\u503c\u6709 \\(K\\) \u4e2a\uff0c\u5219\u6240\u9700\u5b66\u4e60\u53c2\u6570\u4e2a\u6570\u4e3a \\(K\\prod_{i=1}^{n}S_i\\) \u4e3a\u6b64\u6734\u7d20\u8d1d\u53f6\u65af\u5bf9\u6761\u4ef6\u6982\u7387\u4f5c\u4e86\u4e00\u4e2a\u8f83\u5f3a\u7684\u6761\u4ef6\u72ec\u7acb\u6027\u5047\u8bbe\uff1a \\[ \\begin{aligned} P(X=x \\mid Y=c_k)&=(X^{(1)}=x^{(1)},\u00b7\u00b7\u00b7,X^{(n)}=x^{(n)}\\mid Y=c_k)\\\\ &=\\prod_{i=1}^{n}P(X^{(i)}=x^{(i)} \\mid Y=c_k) \\end{aligned} \\] \u5177\u4f53\u800c\u8a00\uff0c\u8be5\u5047\u8bbe\u8ba4\u4e3a\u7528\u4e8e\u5206\u7c7b\u7684\u7279\u5f81\u5728\u7c7b\u786e\u5b9a\u7684\u524d\u63d0\u4e0b\u662f\u6761\u4ef6\u72ec\u7acb\u7684\u3002\u8fd9\u4e00\u5047\u8bbe\u4f7f\u53c2\u6570\u5b66\u4e60\u53d8\u5f97\u7b80\u5355\uff08\u53c2\u6570\u4e2a\u6570\u53d8\u4e3a\u4e86 \\(K\\sum_{i=1}^{n}S_i\\) \uff09\uff0c\u4f46\u4f1a\u727a\u7272\u4e00\u5b9a\u7684\u51c6\u786e\u7387 \u4e8e\u662f\uff0c\u5728\u5b66\u4e60\u5230\u53c2\u6570\u6a21\u578b\u540e\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u53ef\u8868\u793a\u4e3a\uff1a \\[ y = f(x) = \\mathop{\\arg\\max}\\limits_{c_k}\\frac{P(Y=c_k)\\prod_{i}P(X^{(i)}=x^{(i)} \\mid Y=c_k)}{\\sum_{k}P(Y)\\prod_{i}P(X^{(i)} = x^{(i)} \\mid Y=c_k)} \\] \u56e0\u4e3a\u5bf9\u6240\u6709 \\(c_k\\) \u4e0a\u5f0f\u5206\u6bcd\u90fd\u76f8\u540c\uff0c\u6240\u4ee5\u53ea\u9700\uff1a \\[ y = f(x) = \\mathop{\\arg\\max}\\limits_{c_k}P(Y=c_k)\\prod_{i}P(X^{(i)}=x^{(i)} \\mid Y=c_k) \\] \u53c2\u6570\u4f30\u8ba1 \u00b6 \u5728\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u4e2d\uff0c\u5b66\u4e60\u610f\u5473\u7740\u4f30\u8ba1 \\(P(Y=c_k)\\) \u548c \\(P(X^{(j)}=x^{(j)}\\mid Y=c_k)\\) \u5e38\u89c1\u7684\u4f30\u8ba1\u65b9\u6cd5\u4e3a\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u4e0e\u8d1d\u53f6\u65af\u4f30\u8ba1\uff0c\u540c\u65f6\u57fa\u4e8e\u4e0d\u540c\u7684\u5206\u5e03\u5047\u8bbe\uff08\u5982\u6b63\u6001\u5206\u5e03\uff09\uff0c\u6211\u4eec\u8fd8\u80fd\u8fdb\u4e00\u6b65\u5bf9\u6240\u9700\u6c42\u5f97\u7684\u53c2\u6570\u91cf\u8fdb\u884c\u7b80\u5316\uff0c\u8fd9\u70b9\u5c06\u5728\u540e\u9762\u7684\u4ee3\u7801\u90e8\u5206\u8fdb\u884c\u89e3\u91ca \u6781\u5927\u4f3c\u7136\u4f30\u8ba1 \u00b6 \u5bf9\u5148\u9a8c\u6982\u7387\u7684\u4f30\u8ba1\u4e3a \\[ P(Y=c_k)=\\frac{\\sum_{i=1}^NI(y_i=c_k)}{N},\\quad k=1,2,\u00b7\u00b7\u00b7,K \\] \u5bf9\u6761\u4ef6\u6982\u7387\u7684\u4f30\u8ba1\u4e3a \\[ \\begin{aligned} P(X^{(j)}=a_{jl}\\mid Y=c_k)=\\frac{\\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)}{\\sum_{i=1}^NI(y_i=c_k)}\\\\ j=1,2,\u00b7\u00b7\u00b7,n; \\quad l=1,2,\u00b7\u00b7\u00b7,S_j;\\quad k=1,2,\u00b7\u00b7\u00b7,K \\end{aligned} \\] \u5176\u4e2d\u7b2c \\(j\\) \u4e2a\u7279\u5f81 \\(x^{(i)}\\) \u53ef\u80fd\u53d6\u503c\u7684\u96c6\u5408\u4e3a \\(\\{a_{j1},a_{j2},\u00b7\u00b7\u00b7,a_{jS_j}\\}\\) \u8d1d\u53f6\u65af\u4f30\u8ba1 \u00b6 \u7528\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u53ef\u80fd\u4f1a\u51fa\u73b0\u6240\u8981\u4f30\u8ba1\u7684\u6982\u7387\u503c\u4e3a0\u7684\u60c5\u51b5\u3002\u8fd9\u4f1a\u5f71\u54cd\u5230\u540e\u7eed\u6982\u7387\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u4f7f\u5206\u7c7b\u4ea7\u751f\u504f\u5dee \u4e3a\u6b64\u5e38\u7528\u8d1d\u53f6\u65af\u4f30\u8ba1\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a \\[ P_{\\lambda}(Y=c_k)=\\frac{\\sum_{i=1}^NI(y_i=c_k)+\\lambda}{N+K\\lambda} \\] \\[ P_{\\lambda}(X^{(j)}=a_{jl}\\mid Y=c_k)=\\frac{\\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)+\\lambda}{\\sum_{i=1}^NI(y_i=c_k)+S_j\\lambda} \\] \u7ecf\u8fc7\u4e0a\u5f0f\u64cd\u4f5c\uff0c\u4f9d\u7136\u80fd\u8bc1\u660e\u5176\u4ecd\u4e3a\u4e00\u79cd\u6982\u7387\u5206\u5e03 \u5f53 \\(\\lambda\\) \u53d6 \\(1\\) \u65f6\uff0c\u88ab\u79f0\u4e3a\u62c9\u666e\u62c9\u65af\u5e73\u6ed1\uff08Laplacian smoothing\uff09 \u4ee3\u7801\u5b9e\u73b0 \u00b6 \u8fd9\u91cc\u5b9e\u73b0\u7684\u4e3a GaussianNaiveBayesClassifier 1 \uff0c\u5177\u4f53\u7684\uff0c\u5176\u5bf9 \\(P(X^{(j)}=x^{(j)}\\mid Y=c_k)\\) \u7684\u5047\u8bbe\u4e3a\u6b63\u6001\u5206\u5e03\uff1a \\[ P(X^{(j)}=x^{(j)}\\mid Y=c_k)=\\frac{1}{\\sqrt{2 \\pi \\sigma_{c_k}^2}} \\exp \\left(-\\frac{\\left(x_i-\\mu_{c_k}\\right)^2}{2 \\sigma_{c_k}^2}\\right) \\] \u53ef\u4ee5\u770b\u5230\u57fa\u4e8e\u5982\u4e0a\u5047\u8bbe\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u51fa\u6781\u5c11\u7684\u53c2\u6570\uff08 \\(\\sigma_{c_k}\\) \uff0c \\(\\mu_{c_k}\\) \uff09\u4fbf\u80fd\u5b8c\u6210\u5b66\u4e60 Python class GaussianNBClassifier : def __init__ ( self , eps = 1e-6 ): self . labels = None self . hyperparameters = { \"eps\" : eps } self . parameters = { \"mean\" : None , # shape: (K, M) \"sigma\" : None , # shape: (K, M) \"prior\" : None , # shape: (K,) } def fit ( self , X , y ): P = self . parameters H = self . hyperparameters self . labels = np . unique ( y ) K = len ( self . labels ) N , M = X . shape P [ \"mean\" ] = np . zeros (( K , M )) P [ \"sigma\" ] = np . zeros (( K , M )) P [ \"prior\" ] = np . zeros (( K ,)) for i , c in enumerate ( self . labels ): X_c = X [ y == c , :] P [ \"mean\" ][ i , :] = np . mean ( X_c , axis = 0 ) P [ \"sigma\" ][ i , :] = np . var ( X_c , axis = 0 ) + H [ \"eps\" ] P [ \"prior\" ][ i ] = X_c . shape [ 0 ] / N return self def predict ( self , X ): return self . labels [ self . _log_posterior ( X ) . argmax ( axis = 1 )] def _log_posterior ( self , X ): K = len ( self . labels ) log_posterior = np . zeros (( X . shape [ 0 ], K )) for i in range ( K ): log_posterior [:, i ] = self . _log_class_posterior ( X , i ) return log_posterior def _log_class_posterior ( self , X , class_idx ): P = self . parameters mu = P [ \"mean\" ][ class_idx ] prior = P [ \"prior\" ][ class_idx ] sigsq = P [ \"sigma\" ][ class_idx ] log_likelihood = - 0.5 * np . sum ( np . log ( 2 * np . pi * sigsq )) log_likelihood -= 0.5 * np . sum ((( X - mu ) ** 2 ) / sigsq , axis = 1 ) return log_likelihood + np . log ( prior ) \u5b8c\u6574\u4ee3\u7801\u5df2\u4e0a\u4f20\u81f3 Repo \u53c2\u8003\u8d44\u6599 \u00b6 \u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\uff08\u7b2c\u4e8c\u7248\uff09\u300b\u674e\u822a https://scikit-learn.org/stable/modules/naive_bayes.html#gaussian-naive-bayes \u21a9","title":"\u6734\u7d20\u8d1d\u53f6\u65af"},{"location":"ai/ch1_4/#_1","text":"\u6734\u7d20\u8d1d\u53f6\u65af\uff08Naive Bayes\uff09\u6cd5\u662f\u57fa\u4e8e\u8d1d\u53f6\u65af\u5b9a\u7406\u548c\u7279\u5f81\u6761\u4ef6\u72ec\u7acb\u5047\u8bbe\u7684\u5206\u7c7b\u65b9\u6cd5\uff0c\u5b9e\u73b0\u7b80\u5355\uff0c\u5b66\u4e60\u4e0e\u9884\u6d4b\u7684\u6548\u7387\u90fd\u5f88\u9ad8\uff0c\u662f\u4e00\u79cd\u5e38\u7528\u7684\u751f\u6210\u5b66\u4e60\u65b9\u6cd5","title":"\u6734\u7d20\u8d1d\u53f6\u65af"},{"location":"ai/ch1_4/#_2","text":"\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u751f\u6210\u5b66\u4e60\u65b9\u6cd5","title":"\u5206\u7c7b"},{"location":"ai/ch1_4/#_3","text":"\u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u4e3a \\[ T=\\{(x_1,y_1),(x_2,y_2),\u00b7\u00b7\u00b7,(x_N,y_N)\\},\\quad x\\in \\mathcal{X},y\\in \\mathcal{Y} \\] \u5176\u4e2d\u8f93\u5165\u7a7a\u95f4 \\(\\mathcal{X}\\subseteq R^n\\) \u4e3a \\(n\\) \u7ef4\u7a7a\u95f4\u5411\u91cf\u7684\u96c6\u5408\uff0c\u8f93\u51fa\u7a7a\u95f4\u4e3a\u7c7b\u6807\u8bb0\u96c6\u5408 \\(\\mathcal{Y}=\\{c_1,c_2,\u00b7\u00b7\u00b7,c_K\\}\\) \u4ee4 \\(X\\) \u548c \\(Y\\) \u5206\u522b\u4e3a\u5b9a\u4e49\u5728\u8f93\u5165\u3001\u8f93\u51fa\u7a7a\u95f4\u4e0a\u7684\u968f\u673a\u53d8\u91cf\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u57fa\u4e8e\u8d1d\u53f6\u65af\u5b9a\u7406\u9996\u5148\u5c06\u6700\u7ec8\u76ee\u6807\uff0c\u5373\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\(P(Y=c_k \\mid X=x)\\) \u8f6c\u5316\u4e3a\u6c42\u89e3\u8054\u5408\u6982\u7387\u5206\u5e03 \\(P(X=x,Y=c_k)\\) \\[ \\begin{aligned} P(Y=c_k \\mid X = x) &= \\frac{P(X=x,Y=c_k)}{P(X=x)}\\\\ &=\\frac{P(Y=c_k)P(X=x \\mid Y=c_k)}{\\sum_{Y}P(Y)P(X = x \\mid Y)} \\end{aligned} \\] \u4e3a\u6b64\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u9700\u8981\u9996\u5148\u5b66\u4e60\u5230\u5148\u9a8c\u6982\u7387 \\[ P(Y=c_k),\\quad k=1,2,\u00b7\u00b7\u00b7,K \\] \u4ee5\u53ca\u76f8\u5e94\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\[ \\begin{aligned} P(X=x \\mid Y=c_k)=&(X^{(1)}=x^{(1)},\u00b7\u00b7\u00b7,X^{(n)}=x^{(n)}\\mid Y=c_k)\\\\ &k=1,2,\u00b7\u00b7\u00b7,K \\end{aligned} \\] \u95ee\u9898\u5728\u4e8e\u6734\u7d20\u8d1d\u53f6\u65af\u5bf9\u4e8e\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\(P(X=x \\mid Y=c_k)\\) \u7684\u4f30\u8ba1\uff0c\u5728\u5b9e\u9645\u7684\u6837\u672c\u4e2d\u8be5\u5206\u5e03\u6709\u7740\u6307\u6570\u7ea7\u6570\u91cf\u7684\u53c2\u6570\u9700\u8981\u4f30\u8ba1 \u8bbe \\(X^{(i)}\\) \u53ef\u53d6\u503c\u6709 \\(S_i\\) \u4e2a\uff0c \\(i=1,2,\u00b7\u00b7\u00b7,n\\) \uff0c \\(Y\\) \u7684\u53d6\u503c\u6709 \\(K\\) \u4e2a\uff0c\u5219\u6240\u9700\u5b66\u4e60\u53c2\u6570\u4e2a\u6570\u4e3a \\(K\\prod_{i=1}^{n}S_i\\) \u4e3a\u6b64\u6734\u7d20\u8d1d\u53f6\u65af\u5bf9\u6761\u4ef6\u6982\u7387\u4f5c\u4e86\u4e00\u4e2a\u8f83\u5f3a\u7684\u6761\u4ef6\u72ec\u7acb\u6027\u5047\u8bbe\uff1a \\[ \\begin{aligned} P(X=x \\mid Y=c_k)&=(X^{(1)}=x^{(1)},\u00b7\u00b7\u00b7,X^{(n)}=x^{(n)}\\mid Y=c_k)\\\\ &=\\prod_{i=1}^{n}P(X^{(i)}=x^{(i)} \\mid Y=c_k) \\end{aligned} \\] \u5177\u4f53\u800c\u8a00\uff0c\u8be5\u5047\u8bbe\u8ba4\u4e3a\u7528\u4e8e\u5206\u7c7b\u7684\u7279\u5f81\u5728\u7c7b\u786e\u5b9a\u7684\u524d\u63d0\u4e0b\u662f\u6761\u4ef6\u72ec\u7acb\u7684\u3002\u8fd9\u4e00\u5047\u8bbe\u4f7f\u53c2\u6570\u5b66\u4e60\u53d8\u5f97\u7b80\u5355\uff08\u53c2\u6570\u4e2a\u6570\u53d8\u4e3a\u4e86 \\(K\\sum_{i=1}^{n}S_i\\) \uff09\uff0c\u4f46\u4f1a\u727a\u7272\u4e00\u5b9a\u7684\u51c6\u786e\u7387 \u4e8e\u662f\uff0c\u5728\u5b66\u4e60\u5230\u53c2\u6570\u6a21\u578b\u540e\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u53ef\u8868\u793a\u4e3a\uff1a \\[ y = f(x) = \\mathop{\\arg\\max}\\limits_{c_k}\\frac{P(Y=c_k)\\prod_{i}P(X^{(i)}=x^{(i)} \\mid Y=c_k)}{\\sum_{k}P(Y)\\prod_{i}P(X^{(i)} = x^{(i)} \\mid Y=c_k)} \\] \u56e0\u4e3a\u5bf9\u6240\u6709 \\(c_k\\) \u4e0a\u5f0f\u5206\u6bcd\u90fd\u76f8\u540c\uff0c\u6240\u4ee5\u53ea\u9700\uff1a \\[ y = f(x) = \\mathop{\\arg\\max}\\limits_{c_k}P(Y=c_k)\\prod_{i}P(X^{(i)}=x^{(i)} \\mid Y=c_k) \\]","title":"\u57fa\u672c\u65b9\u6cd5"},{"location":"ai/ch1_4/#_4","text":"\u5728\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u4e2d\uff0c\u5b66\u4e60\u610f\u5473\u7740\u4f30\u8ba1 \\(P(Y=c_k)\\) \u548c \\(P(X^{(j)}=x^{(j)}\\mid Y=c_k)\\) \u5e38\u89c1\u7684\u4f30\u8ba1\u65b9\u6cd5\u4e3a\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u4e0e\u8d1d\u53f6\u65af\u4f30\u8ba1\uff0c\u540c\u65f6\u57fa\u4e8e\u4e0d\u540c\u7684\u5206\u5e03\u5047\u8bbe\uff08\u5982\u6b63\u6001\u5206\u5e03\uff09\uff0c\u6211\u4eec\u8fd8\u80fd\u8fdb\u4e00\u6b65\u5bf9\u6240\u9700\u6c42\u5f97\u7684\u53c2\u6570\u91cf\u8fdb\u884c\u7b80\u5316\uff0c\u8fd9\u70b9\u5c06\u5728\u540e\u9762\u7684\u4ee3\u7801\u90e8\u5206\u8fdb\u884c\u89e3\u91ca","title":"\u53c2\u6570\u4f30\u8ba1"},{"location":"ai/ch1_4/#_5","text":"\u5bf9\u5148\u9a8c\u6982\u7387\u7684\u4f30\u8ba1\u4e3a \\[ P(Y=c_k)=\\frac{\\sum_{i=1}^NI(y_i=c_k)}{N},\\quad k=1,2,\u00b7\u00b7\u00b7,K \\] \u5bf9\u6761\u4ef6\u6982\u7387\u7684\u4f30\u8ba1\u4e3a \\[ \\begin{aligned} P(X^{(j)}=a_{jl}\\mid Y=c_k)=\\frac{\\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)}{\\sum_{i=1}^NI(y_i=c_k)}\\\\ j=1,2,\u00b7\u00b7\u00b7,n; \\quad l=1,2,\u00b7\u00b7\u00b7,S_j;\\quad k=1,2,\u00b7\u00b7\u00b7,K \\end{aligned} \\] \u5176\u4e2d\u7b2c \\(j\\) \u4e2a\u7279\u5f81 \\(x^{(i)}\\) \u53ef\u80fd\u53d6\u503c\u7684\u96c6\u5408\u4e3a \\(\\{a_{j1},a_{j2},\u00b7\u00b7\u00b7,a_{jS_j}\\}\\)","title":"\u6781\u5927\u4f3c\u7136\u4f30\u8ba1"},{"location":"ai/ch1_4/#_6","text":"\u7528\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u53ef\u80fd\u4f1a\u51fa\u73b0\u6240\u8981\u4f30\u8ba1\u7684\u6982\u7387\u503c\u4e3a0\u7684\u60c5\u51b5\u3002\u8fd9\u4f1a\u5f71\u54cd\u5230\u540e\u7eed\u6982\u7387\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u4f7f\u5206\u7c7b\u4ea7\u751f\u504f\u5dee \u4e3a\u6b64\u5e38\u7528\u8d1d\u53f6\u65af\u4f30\u8ba1\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a \\[ P_{\\lambda}(Y=c_k)=\\frac{\\sum_{i=1}^NI(y_i=c_k)+\\lambda}{N+K\\lambda} \\] \\[ P_{\\lambda}(X^{(j)}=a_{jl}\\mid Y=c_k)=\\frac{\\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)+\\lambda}{\\sum_{i=1}^NI(y_i=c_k)+S_j\\lambda} \\] \u7ecf\u8fc7\u4e0a\u5f0f\u64cd\u4f5c\uff0c\u4f9d\u7136\u80fd\u8bc1\u660e\u5176\u4ecd\u4e3a\u4e00\u79cd\u6982\u7387\u5206\u5e03 \u5f53 \\(\\lambda\\) \u53d6 \\(1\\) \u65f6\uff0c\u88ab\u79f0\u4e3a\u62c9\u666e\u62c9\u65af\u5e73\u6ed1\uff08Laplacian smoothing\uff09","title":"\u8d1d\u53f6\u65af\u4f30\u8ba1"},{"location":"ai/ch1_4/#_7","text":"\u8fd9\u91cc\u5b9e\u73b0\u7684\u4e3a GaussianNaiveBayesClassifier 1 \uff0c\u5177\u4f53\u7684\uff0c\u5176\u5bf9 \\(P(X^{(j)}=x^{(j)}\\mid Y=c_k)\\) \u7684\u5047\u8bbe\u4e3a\u6b63\u6001\u5206\u5e03\uff1a \\[ P(X^{(j)}=x^{(j)}\\mid Y=c_k)=\\frac{1}{\\sqrt{2 \\pi \\sigma_{c_k}^2}} \\exp \\left(-\\frac{\\left(x_i-\\mu_{c_k}\\right)^2}{2 \\sigma_{c_k}^2}\\right) \\] \u53ef\u4ee5\u770b\u5230\u57fa\u4e8e\u5982\u4e0a\u5047\u8bbe\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u51fa\u6781\u5c11\u7684\u53c2\u6570\uff08 \\(\\sigma_{c_k}\\) \uff0c \\(\\mu_{c_k}\\) \uff09\u4fbf\u80fd\u5b8c\u6210\u5b66\u4e60 Python class GaussianNBClassifier : def __init__ ( self , eps = 1e-6 ): self . labels = None self . hyperparameters = { \"eps\" : eps } self . parameters = { \"mean\" : None , # shape: (K, M) \"sigma\" : None , # shape: (K, M) \"prior\" : None , # shape: (K,) } def fit ( self , X , y ): P = self . parameters H = self . hyperparameters self . labels = np . unique ( y ) K = len ( self . labels ) N , M = X . shape P [ \"mean\" ] = np . zeros (( K , M )) P [ \"sigma\" ] = np . zeros (( K , M )) P [ \"prior\" ] = np . zeros (( K ,)) for i , c in enumerate ( self . labels ): X_c = X [ y == c , :] P [ \"mean\" ][ i , :] = np . mean ( X_c , axis = 0 ) P [ \"sigma\" ][ i , :] = np . var ( X_c , axis = 0 ) + H [ \"eps\" ] P [ \"prior\" ][ i ] = X_c . shape [ 0 ] / N return self def predict ( self , X ): return self . labels [ self . _log_posterior ( X ) . argmax ( axis = 1 )] def _log_posterior ( self , X ): K = len ( self . labels ) log_posterior = np . zeros (( X . shape [ 0 ], K )) for i in range ( K ): log_posterior [:, i ] = self . _log_class_posterior ( X , i ) return log_posterior def _log_class_posterior ( self , X , class_idx ): P = self . parameters mu = P [ \"mean\" ][ class_idx ] prior = P [ \"prior\" ][ class_idx ] sigsq = P [ \"sigma\" ][ class_idx ] log_likelihood = - 0.5 * np . sum ( np . log ( 2 * np . pi * sigsq )) log_likelihood -= 0.5 * np . sum ((( X - mu ) ** 2 ) / sigsq , axis = 1 ) return log_likelihood + np . log ( prior ) \u5b8c\u6574\u4ee3\u7801\u5df2\u4e0a\u4f20\u81f3 Repo","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"ai/ch1_4/#_8","text":"\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\uff08\u7b2c\u4e8c\u7248\uff09\u300b\u674e\u822a https://scikit-learn.org/stable/modules/naive_bayes.html#gaussian-naive-bayes \u21a9","title":"\u53c2\u8003\u8d44\u6599"},{"location":"ai/ch1_5/","text":"\u903b\u8f91\u56de\u5f52 \u00b6 \u903b\u8f91\u56de\u5f52\uff08logistic regression\uff09\u662f\u6982\u7387\u7edf\u8ba1\u89c6\u89d2\u4e0b\u5f88\u7ecf\u5178\u7684\u5206\u7c7b\u6a21\u578b\uff0c\u5c06\u6837\u672c\u7684\u7279\u5f81\u4e0e\u6807\u7b7e\u90fd\u89c6\u4e3a\u968f\u673a\u53d8\u91cf\uff0c\u901a\u8fc7\u5bfb\u6c42\u6700\u5927\u5316\u540e\u9a8c\u6982\u7387\uff08MAP\uff0cmaximum a posterior probability\uff09\u6765\u83b7\u5f97\u53ef\u5206\u7c7b\u7684\u6a21\u578b \u5206\u7c7b \u00b6 \u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u5224\u522b\u5b66\u4e60\u65b9\u6cd5 \u57fa\u672c\u5f62\u5f0f \u00b6 \u5047\u8bbe\u6837\u672c\u5199\u4f5c\u589e\u5e7f\u540e\u7684\u5217\u5411\u91cf\uff0c\u5373 \\[ \\mathbf{x} = [1,x^{(1)},x^{(2)},\u00b7\u00b7\u00b7,x^{(p)}]^\\mathrm{T} \\] \u7b2c\u4e00\u4e2a\u5bf9\u5e94\u53c2\u6570\u7684\u504f\u7f6e\u9879\uff0c\u5269\u4e0b\u7684\u5373\u662f\u6837\u672c\u7684\u7279\u5f81\u9879 \u903b\u8f91\u56de\u5f52\u4e0d\u76f4\u63a5\u8f93\u51fa\u5b9e\u6570\uff0c\u800c\u662f\u5173\u6ce8\u4e00\u4e2a\u540e\u9a8c\u6982\u7387 \\(P(Y\\mid X=\\mathbf{x})\\) \uff0c\u5728\u4e8c\u5206\u7c7b\u7684\u60c5\u5f62\u4e0b\uff0c\u5c06\u6807\u7b7e\u5206\u522b\u7f16\u7801\u4e3a 0\uff0c1\uff0c\u6211\u4eec\u53ef\u4ee5\u5177\u4f53\u5047\u8bbe\u8be5\u540e\u9a8c\u6982\u7387\u4e3a \\(Y=1\\) \u7684\u6982\u7387 \\[ P(Y=1\\mid X=\\mathbf{x}) = f(\\mathbf{x};\\boldsymbol{\\theta}) \\] \u4e8e\u662f\u7531\u5bf9\u7acb\u4e8b\u4ef6\u53ef\u77e5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u8be5\u8f93\u51fa\u662f\u5426\u5927\u4e8e 0.5 \u5373\u53ef\uff0c\u5927\u4e8e\u5219\u4e3a \\(Y=1\\) \uff0c\u5c0f\u4e8e\u5219\u4e3a \\(Y=-1\\) \u4f46\u6982\u7387\u7684\u53d6\u503c\u662f \\([0,1]\\) \uff0c\u6211\u4eec\u8be5\u5982\u4f55\u5b9a\u4e49 \\(f(\\mathbf{x};\\boldsymbol{\\theta})\\) \u5462\uff1f\u903b\u8f91\u56de\u5f52\u7ed9\u51fa\u4e00\u4e2a\u6f02\u4eae\u7684\u5f0f\u5b50 \\[ \\ln \\left[\\frac{P(Y=1\\mid X=\\mathbf{x})}{1-P(Y=1\\mid X=\\mathbf{x})}\\right] = \\mathbf{x}^\\mathrm{T}\\boldsymbol{\\theta} \\] \u5982\u6b64\u4fbf\u5c06\u540e\u9a8c\u6982\u7387\u53d6\u503c\u6620\u5c04\u5230\u5b9e\u6570\u8303\u56f4\uff0c\u4e8e\u662f\u6709 \\[ P(Y=1\\mid X=\\mathbf{x}) = f(\\mathbf{x};\\boldsymbol{\\theta}) = \\frac{e^{\\mathbf{x}^\\mathrm{T}\\boldsymbol{\\theta}}}{1+e^{\\mathbf{x}^\\mathrm{T}\\boldsymbol{\\theta}}} \\] \u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u903b\u8f91\u56de\u5f52\u7684\u57fa\u672c\u5f62\u5f0f \u635f\u5931\u7b56\u7565 \u00b6 \u5229\u7528\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\uff08MLE\uff0cmaximum likelihood estimation\uff09\uff0c\u6211\u4eec\u5c06\u6700\u5927\u5316\u5bf9\u6570\u4f3c\u7136\u51fd\u6570\u4f5c\u4e3a\u4f18\u5316\u7684\u635f\u5931\u7b56\u7565 \u6709\u5bf9\u6570\u4f3c\u7136\u51fd\u6570 \\[ \\begin{aligned} L(\\boldsymbol{\\theta}) &= \\ln \\left[\\prod_{i=1}^nP(Y=y_i\\mid X=\\mathbf{x_i})\\right]\\\\ &= \\sum_{i=1}^n\\ln P(Y=y_i\\mid X=\\mathbf{x_i})\\\\ &= \\sum_{i=1}^n\\left[y_i\\ln P(Y=1\\mid X=\\mathbf{x_i})+(1-y_i)\\ln P(Y=0\\mid X=\\mathbf{x_i})\\right]\\\\ &= \\sum_{i=1}^n\\left[y_i\\ln \\frac{e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}{1+e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}+(1-y_i)\\ln \\frac{1}{1+e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}\\right]\\\\ &= \\sum_{i=1}^n\\left[y_i\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}-\\ln (1+e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}})\\right] \\end{aligned} \\] \u4ee4 \\(J(\\boldsymbol{\\theta}) = -L(\\boldsymbol{\\theta})\\) \uff0c\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u6700\u5927\u5316 \\(L(\\boldsymbol{\\theta})\\) \u7b49\u4ef7\u4e8e\u6700\u5c0f\u5316 \\(J(\\boldsymbol{\\theta})\\) \u4f18\u5316\u5b66\u4e60 \u00b6 \u5e38\u7528\u65b9\u6cd5\u4e3a\u68af\u5ea6\u4e0b\u964d\u4e0e\u62df\u725b\u987f\u6cd5 \u68af\u5ea6\u4e0b\u964d \u00b6 \u5bf9\u635f\u5931\u51fd\u6570 \\(J(\\boldsymbol{\\theta})\\) \u6c42\u4e00\u9636\u5bfc \\[ \\begin{aligned} \\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta}) &= -\\sum_{i}^n\\left[y_i\\mathbf{x}_i-\\frac{\\mathbf{x}_ie^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}{1+e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}\\right]\\\\ &= \\sum_{i}^n\\left[\\frac{e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}{1+e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}-y_i\\right]\\mathbf{x}_i \\end{aligned} \\] \u6545\u6709 \\[ \\begin{aligned} \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} - \\alpha \\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta}^{t})\\\\ \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} - \\alpha \\sum_{i}^n\\left[\\frac{e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}^{t}}}{1+e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}^{t}}}-y_i\\right]\\mathbf{x}_i \\end{aligned} \\]","title":"\u903b\u8f91\u56de\u5f52"},{"location":"ai/ch1_5/#_1","text":"\u903b\u8f91\u56de\u5f52\uff08logistic regression\uff09\u662f\u6982\u7387\u7edf\u8ba1\u89c6\u89d2\u4e0b\u5f88\u7ecf\u5178\u7684\u5206\u7c7b\u6a21\u578b\uff0c\u5c06\u6837\u672c\u7684\u7279\u5f81\u4e0e\u6807\u7b7e\u90fd\u89c6\u4e3a\u968f\u673a\u53d8\u91cf\uff0c\u901a\u8fc7\u5bfb\u6c42\u6700\u5927\u5316\u540e\u9a8c\u6982\u7387\uff08MAP\uff0cmaximum a posterior probability\uff09\u6765\u83b7\u5f97\u53ef\u5206\u7c7b\u7684\u6a21\u578b","title":"\u903b\u8f91\u56de\u5f52"},{"location":"ai/ch1_5/#_2","text":"\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u5224\u522b\u5b66\u4e60\u65b9\u6cd5","title":"\u5206\u7c7b"},{"location":"ai/ch1_5/#_3","text":"\u5047\u8bbe\u6837\u672c\u5199\u4f5c\u589e\u5e7f\u540e\u7684\u5217\u5411\u91cf\uff0c\u5373 \\[ \\mathbf{x} = [1,x^{(1)},x^{(2)},\u00b7\u00b7\u00b7,x^{(p)}]^\\mathrm{T} \\] \u7b2c\u4e00\u4e2a\u5bf9\u5e94\u53c2\u6570\u7684\u504f\u7f6e\u9879\uff0c\u5269\u4e0b\u7684\u5373\u662f\u6837\u672c\u7684\u7279\u5f81\u9879 \u903b\u8f91\u56de\u5f52\u4e0d\u76f4\u63a5\u8f93\u51fa\u5b9e\u6570\uff0c\u800c\u662f\u5173\u6ce8\u4e00\u4e2a\u540e\u9a8c\u6982\u7387 \\(P(Y\\mid X=\\mathbf{x})\\) \uff0c\u5728\u4e8c\u5206\u7c7b\u7684\u60c5\u5f62\u4e0b\uff0c\u5c06\u6807\u7b7e\u5206\u522b\u7f16\u7801\u4e3a 0\uff0c1\uff0c\u6211\u4eec\u53ef\u4ee5\u5177\u4f53\u5047\u8bbe\u8be5\u540e\u9a8c\u6982\u7387\u4e3a \\(Y=1\\) \u7684\u6982\u7387 \\[ P(Y=1\\mid X=\\mathbf{x}) = f(\\mathbf{x};\\boldsymbol{\\theta}) \\] \u4e8e\u662f\u7531\u5bf9\u7acb\u4e8b\u4ef6\u53ef\u77e5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u8be5\u8f93\u51fa\u662f\u5426\u5927\u4e8e 0.5 \u5373\u53ef\uff0c\u5927\u4e8e\u5219\u4e3a \\(Y=1\\) \uff0c\u5c0f\u4e8e\u5219\u4e3a \\(Y=-1\\) \u4f46\u6982\u7387\u7684\u53d6\u503c\u662f \\([0,1]\\) \uff0c\u6211\u4eec\u8be5\u5982\u4f55\u5b9a\u4e49 \\(f(\\mathbf{x};\\boldsymbol{\\theta})\\) \u5462\uff1f\u903b\u8f91\u56de\u5f52\u7ed9\u51fa\u4e00\u4e2a\u6f02\u4eae\u7684\u5f0f\u5b50 \\[ \\ln \\left[\\frac{P(Y=1\\mid X=\\mathbf{x})}{1-P(Y=1\\mid X=\\mathbf{x})}\\right] = \\mathbf{x}^\\mathrm{T}\\boldsymbol{\\theta} \\] \u5982\u6b64\u4fbf\u5c06\u540e\u9a8c\u6982\u7387\u53d6\u503c\u6620\u5c04\u5230\u5b9e\u6570\u8303\u56f4\uff0c\u4e8e\u662f\u6709 \\[ P(Y=1\\mid X=\\mathbf{x}) = f(\\mathbf{x};\\boldsymbol{\\theta}) = \\frac{e^{\\mathbf{x}^\\mathrm{T}\\boldsymbol{\\theta}}}{1+e^{\\mathbf{x}^\\mathrm{T}\\boldsymbol{\\theta}}} \\] \u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u903b\u8f91\u56de\u5f52\u7684\u57fa\u672c\u5f62\u5f0f","title":"\u57fa\u672c\u5f62\u5f0f"},{"location":"ai/ch1_5/#_4","text":"\u5229\u7528\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\uff08MLE\uff0cmaximum likelihood estimation\uff09\uff0c\u6211\u4eec\u5c06\u6700\u5927\u5316\u5bf9\u6570\u4f3c\u7136\u51fd\u6570\u4f5c\u4e3a\u4f18\u5316\u7684\u635f\u5931\u7b56\u7565 \u6709\u5bf9\u6570\u4f3c\u7136\u51fd\u6570 \\[ \\begin{aligned} L(\\boldsymbol{\\theta}) &= \\ln \\left[\\prod_{i=1}^nP(Y=y_i\\mid X=\\mathbf{x_i})\\right]\\\\ &= \\sum_{i=1}^n\\ln P(Y=y_i\\mid X=\\mathbf{x_i})\\\\ &= \\sum_{i=1}^n\\left[y_i\\ln P(Y=1\\mid X=\\mathbf{x_i})+(1-y_i)\\ln P(Y=0\\mid X=\\mathbf{x_i})\\right]\\\\ &= \\sum_{i=1}^n\\left[y_i\\ln \\frac{e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}{1+e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}+(1-y_i)\\ln \\frac{1}{1+e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}\\right]\\\\ &= \\sum_{i=1}^n\\left[y_i\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}-\\ln (1+e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}})\\right] \\end{aligned} \\] \u4ee4 \\(J(\\boldsymbol{\\theta}) = -L(\\boldsymbol{\\theta})\\) \uff0c\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u6700\u5927\u5316 \\(L(\\boldsymbol{\\theta})\\) \u7b49\u4ef7\u4e8e\u6700\u5c0f\u5316 \\(J(\\boldsymbol{\\theta})\\)","title":"\u635f\u5931\u7b56\u7565"},{"location":"ai/ch1_5/#_5","text":"\u5e38\u7528\u65b9\u6cd5\u4e3a\u68af\u5ea6\u4e0b\u964d\u4e0e\u62df\u725b\u987f\u6cd5","title":"\u4f18\u5316\u5b66\u4e60"},{"location":"ai/ch1_5/#_6","text":"\u5bf9\u635f\u5931\u51fd\u6570 \\(J(\\boldsymbol{\\theta})\\) \u6c42\u4e00\u9636\u5bfc \\[ \\begin{aligned} \\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta}) &= -\\sum_{i}^n\\left[y_i\\mathbf{x}_i-\\frac{\\mathbf{x}_ie^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}{1+e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}\\right]\\\\ &= \\sum_{i}^n\\left[\\frac{e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}{1+e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}}}-y_i\\right]\\mathbf{x}_i \\end{aligned} \\] \u6545\u6709 \\[ \\begin{aligned} \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} - \\alpha \\nabla_{\\boldsymbol{\\theta}}J(\\boldsymbol{\\theta}^{t})\\\\ \\boldsymbol{\\theta}^{t+1} &= \\boldsymbol{\\theta}^{t} - \\alpha \\sum_{i}^n\\left[\\frac{e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}^{t}}}{1+e^{\\mathbf{x}_i^\\mathrm{T}\\boldsymbol{\\theta}^{t}}}-y_i\\right]\\mathbf{x}_i \\end{aligned} \\]","title":"\u68af\u5ea6\u4e0b\u964d"},{"location":"ai/ch1_7/","text":"SVM \u00b6 \u652f\u6301\u5411\u91cf\u673a\uff08SVM, support vector machine\uff09\u4e00\u822c\u662f\u4e8c\u5206\u7c7b\u6a21\u578b\u3002\u5176\u57fa\u672c\u5f62\u5f0f\u662f\u5b9a\u4e49\u5728\u7279\u5f81\u7a7a\u95f4\u4e0a\u95f4\u9694\u6700\u5927\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u3002\u5b83\u5728\u611f\u77e5\u673a\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u95f4\u9694\u6700\u5927\u7684\u7b56\u7565\u635f\u5931\uff0c\u4e5f\u662f\u4e3b\u8981\u533a\u522b SVM \u662f\u6838\u6280\u5de7\u5e94\u7528\u7684\u4e00\u4e2a\u7ecf\u5178\u6848\u4f8b\uff0c\u7528\u4e8e\u5904\u7406\u975e\u7ebf\u6027\u7684\u6570\u636e\u96c6\uff1b\u9664\u6b64\u4e4b\u5916\u5b83\u5728\u5f88\u591a\u65b9\u9762\u7684\u4f7f\u7528\u6548\u679c\u4e5f\u76f8\u5f53\u51fa\u8272\uff08CV\uff0cNLP\uff0c\u63a8\u8350\u7cfb\u7edf\uff0c\u65f6\u5e8f\u5206\u6790\u7b49\u7b49\uff09 SVM \u7684\u635f\u5931\u7b56\u7565\u4e3a\u95f4\u9694\u6700\u5927\u5316\uff0c\u53ef\u5f62\u5f0f\u5316\u4e3a\u4e00\u4e2a\u6c42\u89e3\u51f8\u4e8c\u6b21\u89c4\u5212\u7684\u95ee\u9898\u3002\u5176\u5b66\u4e60\u7b97\u6cd5\u662f\u51f8\u4e8c\u6b21\u89c4\u5212\u7684\u6700\u4f18\u5316\u7b97\u6cd5\uff0c\u8f6c\u5316\u4e3a\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u95ee\u9898\u8054\u7cfb KKT \u6761\u4ef6\u6c42\u89e3 \u501f\u52a9 SVM \u7684\u5bf9\u5076\u5f62\u5f0f\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u501f\u52a9\u6838\u6280\u5de7 / \u6838\u65b9\u6cd5\uff08kernel trick / kernel method\uff09\u6765\u5e94\u5bf9\u975e\u7ebf\u6027\u60c5\u5f62 \u5206\u7c7b \u00b6 \u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u975e\u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u5224\u522b\u5b66\u4e60\u65b9\u6cd5 \u57fa\u672c\u5f62\u5f0f \u00b6 SVM \u7684\u57fa\u672c\u5f62\u5f0f\u4e0e\u611f\u77e5\u673a\u7c7b\u4f3c\uff0c\u4f46\u968f\u7740\u540e\u9762\u4f18\u5316\u6c42\u89e3\uff0c\u53ef\u4ee5\u63a8\u5bfc\u51fa\u66f4\u9002\u5408\u7684\u63a8\u7406\u5f62\u5f0f \u5047\u8bbe\u6837\u672c\u5199\u4f5c\u5217\u5411\u91cf\uff0c\u5373 \\[ \\mathbf{x} = [x^{(1)},x^{(2)},\u00b7\u00b7\u00b7,x^{(p)}]^\\mathrm{T} \\] SVM \u6709 \\[ y = f(\\mathbf{x};\\mathbf{w},b) = sgn(\\mathbf{w}^\\mathrm{T}\\mathbf{x}+b) \\] \u635f\u5931\u7b56\u7565 \u00b6 \u9996\u5148\u662f\u6838\u5fc3\u76ee\u6807\uff1a\u6700\u5927\u5316\u4e00\u4e2a\u53eb\u505a\u95f4\u9694\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u5bfc\u51fa\u5b83\u4e0e\u53c2\u6570 \\(\\mathbf{w}\\) \\(b\\) \u4e4b\u95f4\u7684\u5173\u7cfb \u95f4\u9694\u76f4\u89c2\u4e0a\u5c31\u662f SVM \u5728\u6837\u672c\u7a7a\u95f4\u610f\u5473\u7684\u8d85\u5e73\u9762\u5728\u6cd5\u5411\u91cf\u6307\u5411\u4e0a\u80fd\u81ea\u7531\u79fb\u52a8\u7684\u201c\u591a\u5c11\u201d\uff0c\u4e14\u80fd\u5bf9\u6570\u636e\u5206\u5e03\u6709\u8f83\u597d\u7684\u5206\u5272\u3002\u5f53\u8d85\u5e73\u9762\u79fb\u52a8\u65f6\uff0c\u6700\u5148\u9047\u5230\u5e76\u201c\u9876\u4f4f\u201d\u7684\u6837\u672c\u70b9\u88ab\u79f0\u4e3a\u201c\u652f\u6301\u5411\u91cf\uff08support vector\uff09\u201d\uff0c\u5b83\u4eec\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u51b3\u5b9a\u4e86 SVM \u5b66\u4e60\u6536\u655b\u7684\u6700\u540e\u5f62\u5f0f\uff0c\u4e5f\u662f SVM \u540d\u5b57\u7684\u7531\u6765 \u7c7b\u4f3c\u4e8e\u611f\u77e5\u673a\uff0c\u5bf9\u4e8e\u4e8c\u5206\u7c7b\u6837\u672c\u70b9 \\(y_i=1\\) \u4e0e \\(y_j=-1\\) \uff0c\u6211\u4eec\u81ea\u7136\u5e0c\u671b \\[ \\begin{aligned} &\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b \\geq 1, \\quad y_i = 1\\\\ &\\mathbf{w}^\\mathrm{T}\\mathbf{x}_j+b \\leq -1, \\quad y_j = -1 \\end{aligned} \\] \u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u95f4\u9694 \\(M\\) \u4e3a \u8d85\u5e73\u9762 \\(\\mathbf{w}^\\mathrm{T}\\mathbf{x}+b=1\\) \u4e0e \\(\\mathbf{w}^\\mathrm{T}\\mathbf{x}+b=-1\\) \u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u8bbe \\(\\mathbf{x}^+\\) \u4e0e \\(\\mathbf{x}^-\\) \u5206\u522b\u662f\u4e24\u5e73\u9762\u4e0a\u7684\u70b9\uff0c\u4e14 \\(\\mathbf{x}^+ - \\mathbf{x}^-\\) \u4e0e \\(\\mathbf{w}\\) \u5e73\u884c\uff0c\u5219\u6709 \\[ \\begin{aligned} M = \\Vert&\\mathbf{x}^+ - \\mathbf{x}^-\\Vert\\\\ \\Downarrow\\\\ M = \\Vert&\\lambda\\mathbf{w}\\Vert = \\lambda\\Vert\\mathbf{w}\\Vert \\end{aligned} \\] \u6211\u4eec\u9700\u8981\u6c42\u51fa \\(\\lambda\\) \\[ \\begin{aligned} \\mathbf{w}^\\mathrm{T}\\mathbf{x}^++b &= 1\\\\ \\mathbf{w}^\\mathrm{T}\\mathbf{x}^-+b &= -1\\\\ \\Downarrow\\\\ \\mathbf{w}^\\mathrm{T}(\\mathbf{x}^+ - \\mathbf{x}^-) &= 2\\\\ \\Downarrow\\\\ \\lambda\\mathbf{w}^\\mathrm{T}\\mathbf{w} &= 2 \\end{aligned} \\] \u6545 \\(\\lambda = 2 / \\mathbf{w}^\\mathrm{T}\\mathbf{w}\\) \uff0c\u53cd\u4ee3\u56de \\(M\\) \u8868\u8fbe\u5f0f \\[ M = \\frac{2\\Vert\\mathbf{w}\\Vert}{\\mathbf{w}^\\mathrm{T}\\mathbf{w}} = \\frac{2}{\\sqrt{\\mathbf{w}^\\mathrm{T}\\mathbf{w}}} \\] \u5230\u6b64\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u4e86\u9700\u8981\u4f18\u5316\u7684\u7b56\u7565\u76ee\u6807\uff0c\u6700\u5c0f\u5316 \\(M\\) \u5373\u6700\u5927\u5316 \\(\\mathbf{w}^\\mathrm{T}\\mathbf{w}\\) \u4f46\u4ec5\u6709\u95f4\u9694\u6700\u5927\u662f\u4e0d\u884c\u7684\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8ba9 SVM \u80fd\u6b63\u786e\u5206\u7c7b\uff0c\u56e0\u6b64\u9700\u8981\u6dfb\u52a0\u5404\u79cd\u7ea6\u675f\uff0c\u4ece\u6570\u636e\u96c6\u4e0a\u770b\uff0c\u5927\u81f4\u53ef\u5206\u4e3a hard SVM\uff08\u7ebf\u6027\u53ef\u5206\uff09\uff0csoft SVM\uff08\u7ebf\u6027\u4e0d\u53ef\u5206\uff09\u4ee5\u53ca\u6838\u65b9\u6cd5\u4f7f\u7528\u7684\u60c5\u5f62\uff08\u975e\u7ebf\u6027\uff09 \u7ebf\u6027\u53ef\u5206 | hard SVM \u00b6 \\[ \\begin{aligned} &\\min \\frac{1}{2}\\mathbf{w}^\\mathrm{T}\\mathbf{w}\\\\ s.t. \\quad &y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b)\\geq1, \\quad i = 0,1,\u00b7\u00b7,n \\end{aligned} \\] \u975e\u7ebf\u6027\u53ef\u5206 | soft SVM \u00b6 \\[ \\begin{aligned} &\\min \\frac{1}{2}\\mathbf{w}^\\mathrm{T}\\mathbf{w}+C\\sum_{i=1}^n\\varepsilon_i\\\\ s.t. \\quad &\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b\\geq1-\\varepsilon_i, \\quad y_i = 1;\\\\ &\\mathbf{w}^\\mathrm{T}\\mathbf{x}_j+b\\leq-1+\\varepsilon_j, \\quad y_j = -1;\\\\ &\\varepsilon_i, \\quad \\varepsilon_j \\geq 0 \\end{aligned} \\] \u4f18\u5316\u5b66\u4e60 \u00b6 \u6b63\u5f0f\u8fdb\u5165 SVM \u4f18\u5316\u63a8\u5bfc\u524d\uff0c\u8865\u4e00\u70b9\u51f8\u4f18\u5316\u7684\u77e5\u8bc6 \u62c9\u683c\u6717\u65e5\u5bf9\u5076 | Lagrange Duality \u00b6 \u5728\u4f18\u5316\u95ee\u9898\u4e2d\uff0c\u539f\u59cb\u95ee\u9898\u901a\u5e38\u4f1a\u5e26\u6709\u5f88\u591a\u7ea6\u675f\u6761\u4ef6\uff0c\u76f4\u63a5\u6c42\u89e3\u5f88\u56f0\u96be\uff0c\u5e38\u5e38\u8003\u8651\u5c06\u539f\u59cb\u95ee\u9898\u8f6c\u5316\u4e3a\u5b83\u7684\u5bf9\u5076\u95ee\u9898\uff0c\u901a\u8fc7\u6c42\u89e3\u5bf9\u5076\u95ee\u9898\u6765\u5f97\u5230\u539f\u59cb\u95ee\u9898\u7684\u89e3 \u539f\u59cb\u95ee\u9898\uff08Primal Problem\uff09 \\[ \\begin{aligned} &\\min_x f_0(x)\\\\ s.t. \\quad &f_i(x)\\leq0, \\quad i = 1,2,\u00b7\u00b7\u00b7,m;\\\\ &h_j(x)=0, \\quad j = 1,2,\u00b7\u00b7\u00b7,p \\end{aligned} \\] \u539f\u59cb\u95ee\u9898\u4e0d\u4e00\u5b9a\u662f\u51f8\u95ee\u9898\uff0c \\(f\\) \u4e0e \\(h\\) \u53ef\u4ee5\u662f\u4e00\u822c\u51fd\u6570 \u62c9\u683c\u6717\u65e5\u51fd\u6570\uff08Lagrangian function\uff09 \u539f\u59cb\u95ee\u9898\u7684\u62c9\u683c\u6717\u65e5\u51fd\u6570\u4e3a\uff1a \\[ L(x,\\boldsymbol{\\lambda},\\mathbf{v}) = f_0(x)+\\sum_{i=1}^m\\lambda_if_i(x)+\\sum_{i=1}^pv_ih_i(x) \\] \u5176\u4e2d \\(x\\in\\mathcal{R}^n,\\boldsymbol{\\lambda}\\in\\mathcal{R}^m,\\mathbf{v}\\in\\mathcal{R}^p\\) \u53ef\u4ee5\u770b\u5230\uff0c\u62c9\u683c\u6717\u65e5\u51fd\u6570\u76f8\u5bf9\u4e8e\u539f\u59cb\u95ee\u9898\u5f15\u5165\u4e86\u4e24\u4e2a\u65b0\u53d8\u91cf\uff08\u5411\u91cf\uff09\uff0c\u79f0\u4e3a\u62c9\u683c\u6717\u65e5\u4e58\u5b50 \u62c9\u683c\u6717\u65e5\u51fd\u6570 \\(L\\) \u5982\u679c\u770b\u6210\u662f\u5173\u4e8e \\(x\\) \u7684\u51fd\u6570\uff0c\u90a3\u5b83\u5176\u5b9e\u5c31\u662f\u5bf9\u539f\u59cb\u95ee\u9898\u4e2d\u76ee\u6807\u51fd\u6570\u4e0e\u7ea6\u675f\u6761\u4ef6\u8fdb\u884c\u7ebf\u6027\u52a0\u6743\uff0c\u76ee\u6807\u51fd\u6570\u7684\u6743\u7cfb\u6570\u662f 1\uff0c\u7ea6\u675f\u6761\u4ef6\u7684\u6743\u7cfb\u6570\u662f \\(\\lambda_i\\) \u6216 \\(v_i\\) \u5982\u679c\u770b\u6210\u662f\u5173\u4e8e \\(\\lambda_i\\) \u6216 \\(v_i\\) \u7684\u51fd\u6570\uff0c\u5219\u5176\u4f59\u90e8\u5206\u53ef\u770b\u6210\u5e38\u6570\uff0c \\(L\\) \u5c31\u53ef\u770b\u4f5c\u662f\u4e00\u4e2a\u5173\u4e8e \\(\\lambda_i\\) \u6216 \\(v_i\\) \u7684\u4eff\u5c04\u51fd\u6570\uff08\u5373\u6700\u9ad8\u6b21\u5e42\u4e3a1\u7684\u591a\u9879\u5f0f\u51fd\u6570\uff09 \u62c9\u683c\u6717\u65e5\u5bf9\u5076\u51fd\u6570\uff08Lagrange dual function\uff09 \u62c9\u683c\u6717\u65e5\u5bf9\u5076\u51fd\u6570\uff08\u7b80\u79f0\u5bf9\u5076\u51fd\u6570\uff09\u901a\u8fc7\u5bf9\u62c9\u683c\u6717\u65e5\u51fd\u6570\u5173\u4e8e \\(x\\) \u53d6\u4e0b\u786e\u754c\u5f97\u5230: \\[ g(\\boldsymbol{\\lambda},\\mathbf{v}) = \\inf_xL(x,\\boldsymbol{\\lambda},\\mathbf{v}) \\] \u6c42\u89e3\u6790\u5f0f\u53ef\u5148\u5c06 \\(L\\) \u770b\u6210\u662f\u5173\u4e8e \\(x\\) \u7684\u51fd\u6570\uff0c\u800c\u5c06\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u770b\u4f5c\u5e38\u6570\uff0c\u6c42\u51fa \\(L\\) \u7684\u6781\u5c0f\u503c\u70b9\uff0c\u518d\u5c06\u8be5\u70b9\u56de\u4ee3\uff0c\u5f97\u5230\u7684\u5173\u4e8e \\(\\boldsymbol{\\lambda}\\) \u548c \\(\\mathbf{v}\\) \u7684\u8868\u8fbe\u5f0f\u5c31\u662f\u5bf9\u5076\u51fd\u6570 \u5bf9\u5076\u51fd\u6570\u5177\u6709\u4e24\u6761\u91cd\u8981\u6027\u8d28\uff1a \u5bf9\u5076\u51fd\u6570\u4e00\u5b9a\u662f \u51f9\u51fd\u6570 \uff0c\u5176\u51f9\u6027\u4e0e\u539f\u76ee\u6807\u51fd\u6570\u548c\u7ea6\u675f\u51fd\u6570\u51f9\u51f8\u4e0e\u5426 \u65e0\u5173 \u8bc1\u660e\uff1a \\(L(x,\\boldsymbol{\\lambda},\\mathbf{v})\\) \u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u65e0\u9650\u7684\u51fd\u6570\u96c6\uff0c\u8fd9\u4e2a\u51fd\u6570\u96c6\u4e2d\u6bcf\u4e2a\u5143\u7d20\u662f \\(L(x_i,\\boldsymbol{\\lambda},\\mathbf{v})\\) \uff0c \\(x\\) \u53d6\u904d\u5176\u5728\u5b9a\u4e49\u57df\u4e0a\u7684\u6240\u6709\u503c\u5f97\u5230\u4e0d\u540c\u7684 \\(x_i\\) \u3002\u9488\u5bf9\u4e0d\u540c\u7684 \\(x_i\\) \uff0c \\(L(x_i,\\boldsymbol{\\lambda},\\mathbf{v})\\) \u90fd\u662f\u5173\u4e8e \\(\\boldsymbol{\\lambda}\\) \u548c \\(\\mathbf{v}\\) \u7684\u4eff\u5c04\u51fd\u6570\uff0c\u6545\u6709 \\[ g(\\boldsymbol{\\lambda},\\mathbf{v}) = \\inf_x\\{L(x_1,\\boldsymbol{\\lambda},\\mathbf{v}),L(x_2,\\boldsymbol{\\lambda},\\mathbf{v}),\u00b7\u00b7\u00b7\\} \\] \u5bf9\u4eff\u5c04\u51fd\u6570\u96c6\u53d6\u4e0b\u754c\uff0c\u5f97\u5230\u7684\u51fd\u6570\u662f\u51f9\u51fd\u6570 \u5bf9 \\(\\forall \\lambda_i\\geq0,\\forall v\\) \uff0c\u5982\u679c\u539f\u95ee\u9898\u6700\u4f18\u89e3\u5bf9\u5e94\u7684\u76ee\u6807\u51fd\u6570\u503c\u4e3a \\(p^*\\) \uff0c\u5219 \\(g(\\boldsymbol{\\lambda},\\mathbf{v})\\leq p^*\\) \u8bc1\u660e\uff1a\u8bbe\u539f\u95ee\u9898\u6700\u4f18\u89e3\u4e3a \\(x^*\\) \uff0c\u6709 \\[ \\begin{aligned} L(x^*,\\boldsymbol{\\lambda},\\mathbf{v}) &= f_0(x^*)+\\sum_{i=1}^m\\lambda_if_i(x^*)+\\sum_{i=1}^pv_ih_i(x^*)\\\\ &\\leq f_0(x^*) = p^* \\end{aligned} \\] \u53c8\u7531 \\(g(\\boldsymbol{\\lambda},\\mathbf{v})\\) \u7684\u5b9a\u4e49\uff0c\u603b\u6709 \\[ g(\\boldsymbol{\\lambda},\\mathbf{v}) \\leq L(x^*,\\boldsymbol{\\lambda},\\mathbf{v}) \\leq p^* \\] \u62c9\u683c\u6717\u65e5\u5bf9\u5076\u95ee\u9898\uff08Lagrange dual problem\uff09 \u6839\u636e\u5bf9\u5076\u51fd\u6570\u7684\u91cd\u8981\u6027\u8d28\uff0c\u5bf9 \\(\\forall \\lambda_i\\geq0,\\forall v\\) \uff0c \\(g(\\boldsymbol{\\lambda},\\mathbf{v})\\) \u662f\u539f\u95ee\u9898\u6700\u4f18\u503c \\(p^*\\) \u7684\u4e00\u4e2a\u4e0b\u754c\uff0c\u6700\u597d\u7684\u4e0b\u754c\u5c31\u662f\u6700\u5927\u5316\u5bf9\u5076\u51fd\u6570\uff0c\u56e0\u6b64\u6784\u9020\u539f\u95ee\u9898\u7684\u5bf9\u5076\u95ee\u9898\uff1a \\[ \\begin{aligned} \\max_{\\boldsymbol{\\lambda},\\mathbf{v}} g(\\boldsymbol{\\lambda},\\mathbf{v})\\\\ s.t. \\quad \\lambda_i\\geq0 \\end{aligned} \\] \u56e0\u4e3a \\(g(\\boldsymbol{\\lambda},\\mathbf{v})\\) \u662f\u51f9\u51fd\u6570\uff0c\u6545\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u95ee\u9898\u4e00\u5b9a\u662f\u51f8\u95ee\u9898\uff0c\u5176\u5bf9\u5e94\u7684\u6700\u4f18\u89e3\u4e3a \\(\\boldsymbol{\\lambda}^*\\) \uff0c \\(\\mathbf{v}^*\\) \uff08\u6700\u4f18\u62c9\u683c\u6717\u65e5\u4e58\u5b50\uff09\uff0c\u82e5\u5bf9\u5e94\u7684\u6700\u4f18\u503c\u4e3a \\(d^*\\) \uff0c\u5219\u603b\u6709 \\(d^* \\leq p^*\\) \\(d^* \\leq p^*\\) \u65f6\uff0c\u79f0\u4e3a\u5f31\u5bf9\u5076\uff08weak duality\uff09 \\(d^* = p^*\\) \u65f6\uff0c\u79f0\u4e3a\u5f3a\u5bf9\u5076\uff08strong duality\uff09 \\(p^* - d^*\\) \u79f0\u4e3a\u5bf9\u5076\u95f4\u9699\uff08duality gap\uff09 \u5f53\u539f\u95ee\u9898\u662f\u51f8\u95ee\u9898\u4e14\u5f3a\u5bf9\u5076\u65f6\uff0cKKT \u6761\u4ef6\u662f \\(x^*\\) \uff0c \\(\\boldsymbol{\\lambda}^*\\) \uff0c \\(\\mathbf{v}^*\\) \u4e3a\u6700\u4f18\u89e3\u7684\u5145\u8981\u6761\u4ef6 SVM \u4f18\u5316\u7684\u60c5\u5f62 \u00b6 \u7ebf\u6027\u53ef\u5206 | hard SVM \\[ \\begin{aligned} &\\min \\frac{1}{2}\\mathbf{w}^\\mathrm{T}\\mathbf{w}\\\\ s.t. \\quad &y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b)\\geq1, \\quad i = 0,1,\u00b7\u00b7,n \\end{aligned} \\] \u597d\u5728 \u539f\u95ee\u9898\u662f\u51f8\u95ee\u9898\uff0c\u5e76\u4e14\u5f3a\u5bf9\u5076 \uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u8f6c\u5316\u4e3a\u5bf9\u5076\u95ee\u9898\u540e\u7684\u6700\u4f18\u89e3\u4e5f\u80fd\u4fdd\u8bc1\u5728\u539f\u95ee\u9898\u4e0a\u662f\u6700\u4f18\u89e3 \u9996\u5148\u5f97\u5230\u539f\u59cb\u95ee\u9898\u7684\u62c9\u683c\u6717\u65e5\u51fd\u6570 \\[ L(\\mathbf{w},b,\\boldsymbol{\\alpha}) = \\frac{1}{2}\\mathbf{w}^\\mathrm{T}\\mathbf{w}+\\sum_{i=1}^n\\alpha_i(1-y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b)) \\] \u5c06\u62c9\u683c\u6717\u65e5\u4e58\u5b50 \\(\\boldsymbol{\\alpha}\\) \u89c6\u4e3a\u5e38\u6570\uff0c\u6c42\u6781\u5c0f\u503c \u5bf9 \\(\\mathbf{w}\\) \uff0c \\(b\\) \u5206\u522b\u6c42\u4e00\u9636\u5bfc\u96f6\u70b9 \\[ \\begin{aligned} \\nabla_{\\mathbf{w}}L(\\mathbf{w},b,\\boldsymbol{\\alpha}) = \\mathbf{w}-\\sum_{i=1}^n\\alpha_iy_i\\mathbf{x}_i = 0\\\\ \\nabla_bL(\\mathbf{w},b,\\boldsymbol{\\alpha}) = -\\sum_{i=1}^n\\alpha_iy_i = 0 \\end{aligned} \\] \u56de\u4ee3\u8fdb \\(L(\\mathbf{w},b,\\boldsymbol{\\alpha})\\) \uff0c\u6709\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u51fd\u6570 \\[ \\begin{aligned} g(\\boldsymbol{\\alpha}) &= \\frac{1}{2}(\\sum_{i=1}^n\\alpha_iy_i\\mathbf{x}_i)^\\mathrm{T}(\\sum_{j=1}^n\\alpha_jy_j\\mathbf{x}_j)-\\sum_{i=1}^n\\alpha_iy_i(\\sum_{j=1}^n\\alpha_jy_j\\mathbf{x}_j)^\\mathrm{T}\\mathbf{x}_i+\\sum_{i=1}^n\\alpha_i\\\\ &= \\frac{1}{2}\\sum_{i=1}^n\\alpha_iy_i\\mathbf{x}_i^\\mathrm{T}\\sum_{j=1}^n\\alpha_jy_j\\mathbf{x}_j-\\sum_{i=1}^n\\alpha_iy_i(\\sum_{j=1}^n\\alpha_jy_j\\mathbf{x}_j^\\mathrm{T}\\mathbf{x}_i)+\\sum_{i=1}^n\\alpha_i\\\\ &= \\frac{1}{2}\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_j\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}_j-\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_j\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}_j+\\sum_{i=1}^n\\alpha_i\\\\ &= -\\frac{1}{2}\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_j\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}_j+\\sum_{i=1}^n\\alpha_i\\\\ \\end{aligned} \\] \u6545 \\[ g(\\boldsymbol{\\alpha}) = \\sum_{i=1}^n\\alpha_i-\\frac{1}{2}\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_j\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}_j \\] \u4e8e\u662f\u6211\u4eec\u5f97\u5230\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u95ee\u9898 \\[ \\begin{aligned} \\max &\\sum_{i=1}^n\\alpha_i-\\frac{1}{2}\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_j\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}_j\\\\ s.t. \\quad &\\sum_{i=1}^n\\alpha_iy_i = 0;\\\\ &\\alpha_i\\geq0, \\quad i=1,2\u00b7\u00b7\u00b7,n \\end{aligned} \\] \u8be5\u5f62\u5f0f\u6bd4\u539f\u59cb\u95ee\u9898\u66f4\u597d\u6c42\u89e3\uff0c\u56e0\u4e3a\u5b58\u5728\u6709\u6548\u7684\u7b97\u6cd5\u627e\u5230\u6700\u4f18\u89e3 \\(\\alpha_i^*\\) \u6c42\u51fa \\(\\alpha_i^*\\) \u540e\uff0c\u7531\u4e4b\u524d\u4e00\u9636\u5bfc\u6761\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(\\mathbf{w}\\) \u7684\u8bad\u7ec3\u7ed3\u679c \\[ \\mathbf{w}^* = \\sum_{i=1}^n\\alpha_i^*y_i\\mathbf{x}_i \\] \u5bf9\u4e8e\u504f\u7f6e\u9879 \\(b\\) \uff0c\u6211\u5728\u7f51\u4e0a\u521d\u6b65\u641c\u7d22\u5f97\u5230\u7684\u8bb2\u89e3\u4e5f\u6bd4\u8f83\u5c11\uff0c\u666e\u904d\u601d\u8def\u662f\u6839\u636e SVM \u4ee5\u53ca\u6837\u672c\u53cd\u4ee3 \\[ \\begin{aligned} b^* &= y'-(\\mathbf{w}^*)^\\mathrm{T}\\mathbf{x}'\\\\ &= y'-\\sum_{i=1}^n\\alpha_i^*y_i\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}' \\end{aligned} \\] \u6ce8\u610f\u8fd9\u91cc\u6837\u672c\u9009\u53d6\u6709\u8981\u6c42\uff0c\u53ef\u4ee5\u770b\u51fa\u8be5\u6837\u672c \\((\\mathbf{x}',y')\\) \u6ee1\u8db3 \\[ (\\mathbf{w}^*)^\\mathrm{T}\\mathbf{x}'+b^* = y' \\] \\(y'\\) \u53d6\u503c\u8981\u4e48 +1 \u8981\u4e48 -1\uff0c\u5373\u8be5\u6837\u672c\u5e94\u8be5\u662f\u5728\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49 \\(M\\) \u8bbe\u7684\u4e24\u4e2a\u8d85\u5e73\u9762\u4e0a\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u5e94\u8be5\u662f\u652f\u6301\u5411\u91cf\u4e4b\u4e00 \u975e\u7ebf\u6027\u53ef\u5206 | soft SVM \u4e0e\u7ebf\u6027\u53ef\u5206\u5f62\u5f0f\u76f8\u8fd1 \\[ \\begin{aligned} \\max &\\sum_{i=1}^n\\alpha_i-\\frac{1}{2}\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_j\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}_j\\\\ s.t. \\quad &\\sum_{i=1}^n\\alpha_iy_i = 0;\\\\ &C\\geq\\alpha_i\\geq0, \\quad i=1,2\u00b7\u00b7\u00b7,n \\end{aligned} \\] \u5176\u4e2d \\(C\\) \u4e3a\u8d85\u53c2 \u5bf9\u5076\u5f62\u5f0f\u7684 SVM \u00b6 \u652f\u6301\u5411\u91cf \u00b6 \u8ba8\u8bba\u4e00\u4e0b \\(\\alpha_i\\) \u4e0e\u5bf9\u5e94\u6837\u672c \\((\\mathbf{x}_i,y_i)\\) \u4e4b\u95f4\u5173\u7cfb\uff0c\u5e76\u8bf4\u660e\u652f\u6301\u5411\u91cf\u5230\u5e95\u662f\u4ec0\u4e48 \u5bf9\u4e8e hard SVM \u539f\u95ee\u9898\u4ee5\u53ca\u5176\u62c9\u683c\u6717\u65e5\u51fd\u6570 \\[ \\begin{aligned} &\\min \\frac{1}{2}\\mathbf{w}^\\mathrm{T}\\mathbf{w}\\\\ s.t. \\quad &y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b)\\geq1, \\quad i = 0,1,\u00b7\u00b7,n \\end{aligned} \\] \\[ L(\\mathbf{w},b,\\boldsymbol{\\alpha}) = \\frac{1}{2}\\mathbf{w}^\\mathrm{T}\\mathbf{w}+\\sum_{i=1}^n\\alpha_i(1-y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b)) \\] \u5982\u679c\u6211\u4eec\u4e0d\u8003\u8651\u5bf9\u5076\u5f62\u5f0f\uff0c\u5355\u7eaf\u4ece\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\u7684\u89c6\u89d2\u89c2\u5bdf\uff0c\u5bf9\u4e8e\u4efb\u4e00\u4e2a\u6837\u672c\u5e26\u6765\u7684\u7ea6\u675f\u6761\u4ef6 \\[ 1-y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b)\\leq0 \\] \u82e5\u6700\u4f18\u89e3\u5728\u8fb9\u754c\u5904\u53d6\u5230\uff0c\u5373 \\(1-y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b) = 0\\) \uff0c\u4e3a\u6ee1\u8db3\u89e3\u5b58\u5728\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u5fc5\u6709\u5176\u5bf9\u5e94\u7684\u62c9\u683c\u6717\u65e5\u4e58\u5b50 \\(\\alpha_i > 0\\) \uff0c\u800c\u5bf9\u5e94\u7684\u6837\u672c\u60c5\u51b5\u6070\u597d\u662f\u6837\u672c\u5728\u5b9a\u4e49\u95f4\u9694 \\(M\\) \u7684\u8d85\u5e73\u9762\u4e4b\u4e00\u4e0a\uff0c\u5373\u6837\u672c\u4e3a\u652f\u6301\u5411\u91cf \u76f8\u5bf9\u5e94\u7684\uff0c\u82e5\u6700\u4f18\u89e3\u5728\u5185\u90e8\u53d6\u5230\uff0c\u5373 \\(1-y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b) < 0\\) \uff0c\u4e3a\u6ee1\u8db3\u89e3\u5b58\u5728\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u5fc5\u6709\u5176\u5bf9\u5e94\u7684\u62c9\u683c\u6717\u65e5\u4e58\u5b50 \\(\\alpha_i = 0\\) \uff0c\u5bf9\u5e94\u7684\u6837\u672c\u60c5\u51b5\u662f\u6837\u672c\u843d\u5728\u5b9a\u4e49\u95f4\u9694 \\(M\\) \u7684\u8d85\u5e73\u9762\u4e24\u8fb9\uff0c\u4e0d\u4e3a\u652f\u6301\u5411\u91cf \u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u77e5\u9053 \u652f\u6301\u5411\u91cf\u5c31\u662f\u5177\u6709\u5982\u4e0b\u7279\u5f81\u7684\u6837\u672c\u70b9 \uff1a \u843d\u5728\u5b9a\u4e49\u95f4\u9694 \\(M\\) \u8bbe\u5b9a\u7684\u4e24\u4e2a\u8d85\u5e73\u9762\u4e4b\u4e00\u4e0a\uff0c\u8d1f\u8d23\u201c\u9876\u4f4f\u201d SVM \u5bf9\u5e94\u7684\u62c9\u683c\u6717\u65e5\u4e58\u5b50 \\(\\alpha_i > 0\\) \uff0c\u5176\u4f59 \\(\\alpha_i\\) \u5747\u4e3a 0 \u771f\u6b63\u5bf9 SVM \u6700\u540e\u6536\u655b\u8d77\u51b3\u5b9a\u4f5c\u7528 \u53e6\u5916\u6709\u7528\u7684\u662f\uff0c\u6574\u4e2a\u6837\u672c\u96c6\u4e2d\uff0c \u652f\u6301\u5411\u91cf\u5f80\u5f80\u5360\u5c11\u90e8\u5206\uff08\u5927\u90e8\u5206 \\(\\alpha_i = 0\\) \uff09\uff0c\u5f53\u6211\u4eec\u91c7\u7528\u5bf9\u5076\u5f62\u5f0f\u8868\u8fbe SVM \u65f6\uff0c\u5728\u63a8\u7406\u7b49\u65b9\u9762\u53ef\u4ee5\u83b7\u5f97\u65b9\u4fbf \u5bf9\u5076 SVM \u00b6 \u8054\u7cfb\u652f\u6301\u5411\u91cf\u4e0e\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u6539\u5199 SVM \u7684\u57fa\u672c\u5f62\u5f0f \\[ \\begin{aligned} y &= sgn(\\mathbf{w}^\\mathrm{T}\\mathbf{x}+b)\\\\ y &= sgn((\\sum_{i=1}^n\\alpha_iy_i\\mathbf{x}_i)^\\mathrm{T}\\mathbf{x}+b)\\\\ y &= sgn(\\sum_{i=1}^n\\alpha_iy_i\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}+b) \\end{aligned} \\] \u56e0\u4e3a\u5927\u90e8\u5206 \\(\\alpha_i = 0\\) \uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8ba9\u652f\u6301\u5411\u91cf\u53c2\u4e0e\u63a8\u7406 \\[ y = sgn(\\sum_{i\\in SV}\\alpha_iy_i\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}+b) \\] \u6838\u65b9\u6cd5\u5728 SVM \u7684\u5e94\u7528 \u00b6 \u589e\u52a0\u7ef4\u5ea6 \u00b6 \u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5728\u5f53\u524d\u7684\u7ef4\u5ea6\u7a7a\u95f4\u6211\u4eec\u65e0\u6cd5\u5f97\u5230\u53ef\u884c\u7684\u7ebf\u6027\u5212\u5206\uff0c\u4f46\u80fd\u5f97\u5230\u4e00\u4e2a\u975e\u7ebf\u6027\u7684\u5212\u5206\uff0c\u6b64\u65f6\u6211\u4eec\u5e38\u5e38\u8003\u8651\u589e\u52a0\u6837\u672c\u7684\u8f93\u5165\u7ef4\u5ea6\uff0c\u4f8b\u5982 \\[ y = \\mathbf{x}^\\mathrm{T}\\boldsymbol{\\theta},\\quad \\mathbf{x} = [1,x^{(1)},x^{(2)},\u00b7\u00b7\u00b7,x^{(p)}]^\\mathrm{T} \\] \u5982\u679c\u7ef4\u5ea6\u592a\u4f4e\uff0c\u6211\u4eec\u8003\u8651 \\[ y = \\phi(\\mathbf{x})^\\mathrm{T}\\boldsymbol{\\theta},\\quad \\phi(\\mathbf{x}) = [1,x^{(1)},\u00b7\u00b7\u00b7,x^{(p)},(x^{(1)})^2,\u00b7\u00b7\u00b7,]^\\mathrm{T} \\] \u8fd9\u91cc\u62d3\u5c55\u7684\u7ef4\u5ea6\u9879\u53ef\u4ee5\u662f\u4efb\u610f\u7684\uff0c\u4e0a\u5f0f\u53ea\u4f5c\u4e3a\u793a\u610f \u4e00\u5b9a\u5b58\u5728\u9ad8\u7ef4\u7ebf\u6027\u53ef\u5206\u5417\uff1f \u5982\u679c\u6570\u636e\u88ab\u6620\u5c04\u5230\u8db3\u591f\u9ad8\u7684\u7ef4\u5ea6\uff0c\u6837\u672c\u901a\u5e38\u662f\u7ebf\u6027\u53ef\u5206\u7684\u3002VC\uff08Vapnik-Chervonenkis\uff09\u7ef4\u6570\u4e5f\u7ed9\u51fa\u8fc7\u89e3\u91ca\uff0c\u8fd9\u91cc\u53ea\u63d0\u53ca\u4e00\u4e0b \u6838\u65b9\u6cd5 | Kernel method \u00b6 \u6709\u5bf9\u5076\u5f62\u5f0f\u7684 SVM \\[ y = sgn(\\sum_{i=1}^n\\alpha_iy_i\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}+b) \\] \u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u5168\u65b0\u6620\u5c04 \\(\\phi:\\mathcal{R}^p \\mapsto \\mathcal{R}^k, k > p\\) \u6765\u589e\u52a0 SVM \u8f93\u5165\u7a7a\u95f4\u7684\u7ef4\u5ea6\uff0c\u5219\u6709 \\[ y = sgn(\\sum_{i=1}^n\\alpha_iy_i\\phi(\\mathbf{x}_i)^\\mathrm{T}\\phi(\\mathbf{x})+b) \\] \u6ce8\u610f\u5230\u65e0\u8bba\u662f\u62d3\u5c55\u524d\u540e\uff0c \\(\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}\\) \u4e0e \\(\\phi(\\mathbf{x}_i)^\\mathrm{T}\\phi(\\mathbf{x})\\) \u90fd\u662f\u5f88\u4f18\u7f8e\u7684\u5185\u79ef\u5f62\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e9b\u6280\u5de7\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684 kernel trick\uff0c\u6765\u8fdb\u4e00\u6b65\u7b80\u5316\u8fd0\u7b97 \u5e38\u89c1\u7684\u6838 | Kernel \u5bf9\u4e8e\u4e00\u4e9b\u7ea6\u5b9a\u7684\u57fa\u51fd\u6570 \\(\\phi(\\mathbf{x})\\) \uff0c\u5b83\u4eec\u7684\u5185\u79ef\u53ef\u4ee5\u5199\u4f5c\u66f4\u7b80\u6d01\u7684\u6838\u51fd\u6570\u5f62\u5f0f \\[ K(\\mathbf{x}, \\mathbf{z}) = \\phi(\\mathbf{x})^\\mathrm{T}\\phi(\\mathbf{z}) \\] \u8fd9\u76f8\u5f53\u4e8e\u5c06\u57fa\u51fd\u6570\u6240\u5c55\u73b0\u7684\u9ad8\u7ef4\u7a7a\u95f4\u9690\u5f0f\u7684\u8868\u8fbe\u51fa\u6765\uff0c\u540c\u65f6\u51cf\u8f7b\u8ba1\u7b97\u4e0a\u7684\u590d\u6742\u7a0b\u5ea6\uff0c\u76f8\u5f53\u5b9e\u7528 Linear kernel\uff08\u7ebf\u6027\u6838\uff09 \\[ K(\\mathbf{x}, \\mathbf{z}) = \\mathbf{x}^\\mathrm{T}\\mathbf{z} \\] Polynomial kernel\uff08\u591a\u9879\u5f0f\u6838\uff09 \\[ K(\\mathbf{x}, \\mathbf{z}) = (1+\\mathbf{x}^\\mathrm{T}\\mathbf{z})^d \\] \u8fd9\u91cc \\(d\\) \u89c6\u60c5\u51b5\u9009\u53d6\uff0c\u4f8b\u5982\u5982\u679c\u9009\u53d6 \\(d = 2\\) \uff0c\u5bf9\u5e94\u7684\u57fa\u51fd\u6570\u4fbf\u662f \\[ \\phi(\\mathbf{x}) = [1,\\sqrt{2}x_1,\u00b7\u00b7\u00b7,\\sqrt{2}x_p,x_1^2,\u00b7\u00b7\u00b7,x_p^2,\\sqrt{2}x_1x_2,\u00b7\u00b7\u00b7,\\sqrt{2}x_{p-1}x_p]^\\mathrm{T} \\] \u5bb9\u6613\u9a8c\u8bc1 \\(K(\\mathbf{x}, \\mathbf{z}) = \\phi(\\mathbf{x})^\\mathrm{T}\\phi(\\mathbf{z})\\) \uff0c\u4e14\u62d3\u5c55\u540e\u7684\u7ef4\u5ea6 \\(k = C_p^2+2p+1 > p\\) \uff0c\u5c06\u539f\u59cb\u6570\u636e\u6620\u5c04\u5230\u66f4\u9ad8\u7684\u7ef4\u5ea6\uff0c\u5b83\u5305\u542b\u4e86\u6240\u6709\u53ef\u80fd\u7684\u4e8c\u6b21\u9879 Radial basis kernel \uff08\u5f84\u5411\u57fa\u6838\uff09 \\[ K(\\mathbf{x}, \\mathbf{z}) = e^{-r\\Vert\\mathbf{x}-\\mathbf{z}\\Vert^2} \\] \u5176\u4e2d \\(r\\) \u662f\u8d85\u53c2\uff0c\u5176\u5bf9\u5e94\u7684\u57fa\u51fd\u6570\u6620\u5c04\u5230\u65e0\u7a77\u7ef4\u7a7a\u95f4 \u5bf9\u5076 SVM \u7684 Kernel trick \u56de\u5230\u5f00\u59cb\u6211\u4eec\u4e3a\u5bf9\u5076 SVM \u8bbe\u8ba1\u7684\u7ef4\u5ea6\u62d3\u5c55 \\[ y = sgn(\\sum_{i=1}^n\\alpha_iy_i\\phi(\\mathbf{x}_i)^\\mathrm{T}\\phi(\\mathbf{x})+b) \\] \u5982\u679c\u6211\u4eec\u5c06\u5176\u5b9a\u4e49\u4e3a\u591a\u9879\u5f0f\u6838\u7684\u57fa\u51fd\u6570\uff0c \\(d\\) \u9009\u53d6\u4e3a 2\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u4e0d\u7528\u5904\u7406\u989d\u5916\u7684\u9ad8\u7ef4\u5f00\u9500\uff0c\u800c\u662f\u5c06\u5176\u5185\u79ef\u5de7\u5999\u7684\u8f6c\u5316\u4e3a\u6838\u51fd\u6570 \\[ \\begin{aligned} y &= sgn(\\sum_{i=1}^n\\alpha_iy_iK(\\mathbf{x}_i,\\mathbf{x})+b)\\\\ &= sgn(\\sum_{i=1}^n\\alpha_iy_i(1+\\mathbf{x}_i^\\mathrm{T}\\mathbf{x})^2+b) \\end{aligned} \\] \u5bf9\u4e8e\u4f18\u5316\u5f62\u5f0f\uff0c\u540c\u6837\u53ef\u4ee5\u6539\u5199\u5bf9\u5076\u95ee\u9898 \\[ \\begin{aligned} \\max &\\sum_{i=1}^n\\alpha_i-\\frac{1}{2}\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_jK(\\mathbf{x}_i,\\mathbf{x}_j)\\\\ s.t. \\quad &\\sum_{i=1}^n\\alpha_iy_i = 0;\\\\ &\\alpha_i\\geq0, \\quad i=1,2\u00b7\u00b7\u00b7,n \\end{aligned} \\] \u603b\u7ed3 \u00b6 \u6838\u65b9\u6cd5\u662f\u4e00\u7c7b\u628a\u4f4e\u7ef4\u7a7a\u95f4\u7684\u975e\u7ebf\u6027\u53ef\u5206\u95ee\u9898\uff0c\u8f6c\u5316\u4e3a\u9ad8\u7ef4\u7a7a\u95f4\u7684\u7ebf\u6027\u53ef\u5206\u95ee\u9898\u7684\u65b9\u6cd5 \u6838\u6280\u5de7\u5229\u7528\u6838\u51fd\u6570\u76f4\u63a5\u8ba1\u7b97\u57fa\u51fd\u6570\u5185\u79ef\uff0c\u4ee5\u907f\u5f00\u8ba1\u7b97\u57fa\u51fd\u6570\u7684\u9ad8\u7ef4\u6620\u5c04\uff0c\u4ece\u800c\u52a0\u901f\u6838\u65b9\u6cd5","title":"SVM"},{"location":"ai/ch1_7/#svm","text":"\u652f\u6301\u5411\u91cf\u673a\uff08SVM, support vector machine\uff09\u4e00\u822c\u662f\u4e8c\u5206\u7c7b\u6a21\u578b\u3002\u5176\u57fa\u672c\u5f62\u5f0f\u662f\u5b9a\u4e49\u5728\u7279\u5f81\u7a7a\u95f4\u4e0a\u95f4\u9694\u6700\u5927\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u3002\u5b83\u5728\u611f\u77e5\u673a\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u95f4\u9694\u6700\u5927\u7684\u7b56\u7565\u635f\u5931\uff0c\u4e5f\u662f\u4e3b\u8981\u533a\u522b SVM \u662f\u6838\u6280\u5de7\u5e94\u7528\u7684\u4e00\u4e2a\u7ecf\u5178\u6848\u4f8b\uff0c\u7528\u4e8e\u5904\u7406\u975e\u7ebf\u6027\u7684\u6570\u636e\u96c6\uff1b\u9664\u6b64\u4e4b\u5916\u5b83\u5728\u5f88\u591a\u65b9\u9762\u7684\u4f7f\u7528\u6548\u679c\u4e5f\u76f8\u5f53\u51fa\u8272\uff08CV\uff0cNLP\uff0c\u63a8\u8350\u7cfb\u7edf\uff0c\u65f6\u5e8f\u5206\u6790\u7b49\u7b49\uff09 SVM \u7684\u635f\u5931\u7b56\u7565\u4e3a\u95f4\u9694\u6700\u5927\u5316\uff0c\u53ef\u5f62\u5f0f\u5316\u4e3a\u4e00\u4e2a\u6c42\u89e3\u51f8\u4e8c\u6b21\u89c4\u5212\u7684\u95ee\u9898\u3002\u5176\u5b66\u4e60\u7b97\u6cd5\u662f\u51f8\u4e8c\u6b21\u89c4\u5212\u7684\u6700\u4f18\u5316\u7b97\u6cd5\uff0c\u8f6c\u5316\u4e3a\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u95ee\u9898\u8054\u7cfb KKT \u6761\u4ef6\u6c42\u89e3 \u501f\u52a9 SVM \u7684\u5bf9\u5076\u5f62\u5f0f\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u501f\u52a9\u6838\u6280\u5de7 / \u6838\u65b9\u6cd5\uff08kernel trick / kernel method\uff09\u6765\u5e94\u5bf9\u975e\u7ebf\u6027\u60c5\u5f62","title":"SVM"},{"location":"ai/ch1_7/#_1","text":"\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u975e\u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u5224\u522b\u5b66\u4e60\u65b9\u6cd5","title":"\u5206\u7c7b"},{"location":"ai/ch1_7/#_2","text":"SVM \u7684\u57fa\u672c\u5f62\u5f0f\u4e0e\u611f\u77e5\u673a\u7c7b\u4f3c\uff0c\u4f46\u968f\u7740\u540e\u9762\u4f18\u5316\u6c42\u89e3\uff0c\u53ef\u4ee5\u63a8\u5bfc\u51fa\u66f4\u9002\u5408\u7684\u63a8\u7406\u5f62\u5f0f \u5047\u8bbe\u6837\u672c\u5199\u4f5c\u5217\u5411\u91cf\uff0c\u5373 \\[ \\mathbf{x} = [x^{(1)},x^{(2)},\u00b7\u00b7\u00b7,x^{(p)}]^\\mathrm{T} \\] SVM \u6709 \\[ y = f(\\mathbf{x};\\mathbf{w},b) = sgn(\\mathbf{w}^\\mathrm{T}\\mathbf{x}+b) \\]","title":"\u57fa\u672c\u5f62\u5f0f"},{"location":"ai/ch1_7/#_3","text":"\u9996\u5148\u662f\u6838\u5fc3\u76ee\u6807\uff1a\u6700\u5927\u5316\u4e00\u4e2a\u53eb\u505a\u95f4\u9694\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u5bfc\u51fa\u5b83\u4e0e\u53c2\u6570 \\(\\mathbf{w}\\) \\(b\\) \u4e4b\u95f4\u7684\u5173\u7cfb \u95f4\u9694\u76f4\u89c2\u4e0a\u5c31\u662f SVM \u5728\u6837\u672c\u7a7a\u95f4\u610f\u5473\u7684\u8d85\u5e73\u9762\u5728\u6cd5\u5411\u91cf\u6307\u5411\u4e0a\u80fd\u81ea\u7531\u79fb\u52a8\u7684\u201c\u591a\u5c11\u201d\uff0c\u4e14\u80fd\u5bf9\u6570\u636e\u5206\u5e03\u6709\u8f83\u597d\u7684\u5206\u5272\u3002\u5f53\u8d85\u5e73\u9762\u79fb\u52a8\u65f6\uff0c\u6700\u5148\u9047\u5230\u5e76\u201c\u9876\u4f4f\u201d\u7684\u6837\u672c\u70b9\u88ab\u79f0\u4e3a\u201c\u652f\u6301\u5411\u91cf\uff08support vector\uff09\u201d\uff0c\u5b83\u4eec\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u51b3\u5b9a\u4e86 SVM \u5b66\u4e60\u6536\u655b\u7684\u6700\u540e\u5f62\u5f0f\uff0c\u4e5f\u662f SVM \u540d\u5b57\u7684\u7531\u6765 \u7c7b\u4f3c\u4e8e\u611f\u77e5\u673a\uff0c\u5bf9\u4e8e\u4e8c\u5206\u7c7b\u6837\u672c\u70b9 \\(y_i=1\\) \u4e0e \\(y_j=-1\\) \uff0c\u6211\u4eec\u81ea\u7136\u5e0c\u671b \\[ \\begin{aligned} &\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b \\geq 1, \\quad y_i = 1\\\\ &\\mathbf{w}^\\mathrm{T}\\mathbf{x}_j+b \\leq -1, \\quad y_j = -1 \\end{aligned} \\] \u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u95f4\u9694 \\(M\\) \u4e3a \u8d85\u5e73\u9762 \\(\\mathbf{w}^\\mathrm{T}\\mathbf{x}+b=1\\) \u4e0e \\(\\mathbf{w}^\\mathrm{T}\\mathbf{x}+b=-1\\) \u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u8bbe \\(\\mathbf{x}^+\\) \u4e0e \\(\\mathbf{x}^-\\) \u5206\u522b\u662f\u4e24\u5e73\u9762\u4e0a\u7684\u70b9\uff0c\u4e14 \\(\\mathbf{x}^+ - \\mathbf{x}^-\\) \u4e0e \\(\\mathbf{w}\\) \u5e73\u884c\uff0c\u5219\u6709 \\[ \\begin{aligned} M = \\Vert&\\mathbf{x}^+ - \\mathbf{x}^-\\Vert\\\\ \\Downarrow\\\\ M = \\Vert&\\lambda\\mathbf{w}\\Vert = \\lambda\\Vert\\mathbf{w}\\Vert \\end{aligned} \\] \u6211\u4eec\u9700\u8981\u6c42\u51fa \\(\\lambda\\) \\[ \\begin{aligned} \\mathbf{w}^\\mathrm{T}\\mathbf{x}^++b &= 1\\\\ \\mathbf{w}^\\mathrm{T}\\mathbf{x}^-+b &= -1\\\\ \\Downarrow\\\\ \\mathbf{w}^\\mathrm{T}(\\mathbf{x}^+ - \\mathbf{x}^-) &= 2\\\\ \\Downarrow\\\\ \\lambda\\mathbf{w}^\\mathrm{T}\\mathbf{w} &= 2 \\end{aligned} \\] \u6545 \\(\\lambda = 2 / \\mathbf{w}^\\mathrm{T}\\mathbf{w}\\) \uff0c\u53cd\u4ee3\u56de \\(M\\) \u8868\u8fbe\u5f0f \\[ M = \\frac{2\\Vert\\mathbf{w}\\Vert}{\\mathbf{w}^\\mathrm{T}\\mathbf{w}} = \\frac{2}{\\sqrt{\\mathbf{w}^\\mathrm{T}\\mathbf{w}}} \\] \u5230\u6b64\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u4e86\u9700\u8981\u4f18\u5316\u7684\u7b56\u7565\u76ee\u6807\uff0c\u6700\u5c0f\u5316 \\(M\\) \u5373\u6700\u5927\u5316 \\(\\mathbf{w}^\\mathrm{T}\\mathbf{w}\\) \u4f46\u4ec5\u6709\u95f4\u9694\u6700\u5927\u662f\u4e0d\u884c\u7684\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8ba9 SVM \u80fd\u6b63\u786e\u5206\u7c7b\uff0c\u56e0\u6b64\u9700\u8981\u6dfb\u52a0\u5404\u79cd\u7ea6\u675f\uff0c\u4ece\u6570\u636e\u96c6\u4e0a\u770b\uff0c\u5927\u81f4\u53ef\u5206\u4e3a hard SVM\uff08\u7ebf\u6027\u53ef\u5206\uff09\uff0csoft SVM\uff08\u7ebf\u6027\u4e0d\u53ef\u5206\uff09\u4ee5\u53ca\u6838\u65b9\u6cd5\u4f7f\u7528\u7684\u60c5\u5f62\uff08\u975e\u7ebf\u6027\uff09","title":"\u635f\u5931\u7b56\u7565"},{"location":"ai/ch1_7/#hard-svm","text":"\\[ \\begin{aligned} &\\min \\frac{1}{2}\\mathbf{w}^\\mathrm{T}\\mathbf{w}\\\\ s.t. \\quad &y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b)\\geq1, \\quad i = 0,1,\u00b7\u00b7,n \\end{aligned} \\]","title":"\u7ebf\u6027\u53ef\u5206 | hard SVM"},{"location":"ai/ch1_7/#soft-svm","text":"\\[ \\begin{aligned} &\\min \\frac{1}{2}\\mathbf{w}^\\mathrm{T}\\mathbf{w}+C\\sum_{i=1}^n\\varepsilon_i\\\\ s.t. \\quad &\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b\\geq1-\\varepsilon_i, \\quad y_i = 1;\\\\ &\\mathbf{w}^\\mathrm{T}\\mathbf{x}_j+b\\leq-1+\\varepsilon_j, \\quad y_j = -1;\\\\ &\\varepsilon_i, \\quad \\varepsilon_j \\geq 0 \\end{aligned} \\]","title":"\u975e\u7ebf\u6027\u53ef\u5206 | soft SVM"},{"location":"ai/ch1_7/#_4","text":"\u6b63\u5f0f\u8fdb\u5165 SVM \u4f18\u5316\u63a8\u5bfc\u524d\uff0c\u8865\u4e00\u70b9\u51f8\u4f18\u5316\u7684\u77e5\u8bc6","title":"\u4f18\u5316\u5b66\u4e60"},{"location":"ai/ch1_7/#lagrange-duality","text":"\u5728\u4f18\u5316\u95ee\u9898\u4e2d\uff0c\u539f\u59cb\u95ee\u9898\u901a\u5e38\u4f1a\u5e26\u6709\u5f88\u591a\u7ea6\u675f\u6761\u4ef6\uff0c\u76f4\u63a5\u6c42\u89e3\u5f88\u56f0\u96be\uff0c\u5e38\u5e38\u8003\u8651\u5c06\u539f\u59cb\u95ee\u9898\u8f6c\u5316\u4e3a\u5b83\u7684\u5bf9\u5076\u95ee\u9898\uff0c\u901a\u8fc7\u6c42\u89e3\u5bf9\u5076\u95ee\u9898\u6765\u5f97\u5230\u539f\u59cb\u95ee\u9898\u7684\u89e3 \u539f\u59cb\u95ee\u9898\uff08Primal Problem\uff09 \\[ \\begin{aligned} &\\min_x f_0(x)\\\\ s.t. \\quad &f_i(x)\\leq0, \\quad i = 1,2,\u00b7\u00b7\u00b7,m;\\\\ &h_j(x)=0, \\quad j = 1,2,\u00b7\u00b7\u00b7,p \\end{aligned} \\] \u539f\u59cb\u95ee\u9898\u4e0d\u4e00\u5b9a\u662f\u51f8\u95ee\u9898\uff0c \\(f\\) \u4e0e \\(h\\) \u53ef\u4ee5\u662f\u4e00\u822c\u51fd\u6570 \u62c9\u683c\u6717\u65e5\u51fd\u6570\uff08Lagrangian function\uff09 \u539f\u59cb\u95ee\u9898\u7684\u62c9\u683c\u6717\u65e5\u51fd\u6570\u4e3a\uff1a \\[ L(x,\\boldsymbol{\\lambda},\\mathbf{v}) = f_0(x)+\\sum_{i=1}^m\\lambda_if_i(x)+\\sum_{i=1}^pv_ih_i(x) \\] \u5176\u4e2d \\(x\\in\\mathcal{R}^n,\\boldsymbol{\\lambda}\\in\\mathcal{R}^m,\\mathbf{v}\\in\\mathcal{R}^p\\) \u53ef\u4ee5\u770b\u5230\uff0c\u62c9\u683c\u6717\u65e5\u51fd\u6570\u76f8\u5bf9\u4e8e\u539f\u59cb\u95ee\u9898\u5f15\u5165\u4e86\u4e24\u4e2a\u65b0\u53d8\u91cf\uff08\u5411\u91cf\uff09\uff0c\u79f0\u4e3a\u62c9\u683c\u6717\u65e5\u4e58\u5b50 \u62c9\u683c\u6717\u65e5\u51fd\u6570 \\(L\\) \u5982\u679c\u770b\u6210\u662f\u5173\u4e8e \\(x\\) \u7684\u51fd\u6570\uff0c\u90a3\u5b83\u5176\u5b9e\u5c31\u662f\u5bf9\u539f\u59cb\u95ee\u9898\u4e2d\u76ee\u6807\u51fd\u6570\u4e0e\u7ea6\u675f\u6761\u4ef6\u8fdb\u884c\u7ebf\u6027\u52a0\u6743\uff0c\u76ee\u6807\u51fd\u6570\u7684\u6743\u7cfb\u6570\u662f 1\uff0c\u7ea6\u675f\u6761\u4ef6\u7684\u6743\u7cfb\u6570\u662f \\(\\lambda_i\\) \u6216 \\(v_i\\) \u5982\u679c\u770b\u6210\u662f\u5173\u4e8e \\(\\lambda_i\\) \u6216 \\(v_i\\) \u7684\u51fd\u6570\uff0c\u5219\u5176\u4f59\u90e8\u5206\u53ef\u770b\u6210\u5e38\u6570\uff0c \\(L\\) \u5c31\u53ef\u770b\u4f5c\u662f\u4e00\u4e2a\u5173\u4e8e \\(\\lambda_i\\) \u6216 \\(v_i\\) \u7684\u4eff\u5c04\u51fd\u6570\uff08\u5373\u6700\u9ad8\u6b21\u5e42\u4e3a1\u7684\u591a\u9879\u5f0f\u51fd\u6570\uff09 \u62c9\u683c\u6717\u65e5\u5bf9\u5076\u51fd\u6570\uff08Lagrange dual function\uff09 \u62c9\u683c\u6717\u65e5\u5bf9\u5076\u51fd\u6570\uff08\u7b80\u79f0\u5bf9\u5076\u51fd\u6570\uff09\u901a\u8fc7\u5bf9\u62c9\u683c\u6717\u65e5\u51fd\u6570\u5173\u4e8e \\(x\\) \u53d6\u4e0b\u786e\u754c\u5f97\u5230: \\[ g(\\boldsymbol{\\lambda},\\mathbf{v}) = \\inf_xL(x,\\boldsymbol{\\lambda},\\mathbf{v}) \\] \u6c42\u89e3\u6790\u5f0f\u53ef\u5148\u5c06 \\(L\\) \u770b\u6210\u662f\u5173\u4e8e \\(x\\) \u7684\u51fd\u6570\uff0c\u800c\u5c06\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u770b\u4f5c\u5e38\u6570\uff0c\u6c42\u51fa \\(L\\) \u7684\u6781\u5c0f\u503c\u70b9\uff0c\u518d\u5c06\u8be5\u70b9\u56de\u4ee3\uff0c\u5f97\u5230\u7684\u5173\u4e8e \\(\\boldsymbol{\\lambda}\\) \u548c \\(\\mathbf{v}\\) \u7684\u8868\u8fbe\u5f0f\u5c31\u662f\u5bf9\u5076\u51fd\u6570 \u5bf9\u5076\u51fd\u6570\u5177\u6709\u4e24\u6761\u91cd\u8981\u6027\u8d28\uff1a \u5bf9\u5076\u51fd\u6570\u4e00\u5b9a\u662f \u51f9\u51fd\u6570 \uff0c\u5176\u51f9\u6027\u4e0e\u539f\u76ee\u6807\u51fd\u6570\u548c\u7ea6\u675f\u51fd\u6570\u51f9\u51f8\u4e0e\u5426 \u65e0\u5173 \u8bc1\u660e\uff1a \\(L(x,\\boldsymbol{\\lambda},\\mathbf{v})\\) \u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u65e0\u9650\u7684\u51fd\u6570\u96c6\uff0c\u8fd9\u4e2a\u51fd\u6570\u96c6\u4e2d\u6bcf\u4e2a\u5143\u7d20\u662f \\(L(x_i,\\boldsymbol{\\lambda},\\mathbf{v})\\) \uff0c \\(x\\) \u53d6\u904d\u5176\u5728\u5b9a\u4e49\u57df\u4e0a\u7684\u6240\u6709\u503c\u5f97\u5230\u4e0d\u540c\u7684 \\(x_i\\) \u3002\u9488\u5bf9\u4e0d\u540c\u7684 \\(x_i\\) \uff0c \\(L(x_i,\\boldsymbol{\\lambda},\\mathbf{v})\\) \u90fd\u662f\u5173\u4e8e \\(\\boldsymbol{\\lambda}\\) \u548c \\(\\mathbf{v}\\) \u7684\u4eff\u5c04\u51fd\u6570\uff0c\u6545\u6709 \\[ g(\\boldsymbol{\\lambda},\\mathbf{v}) = \\inf_x\\{L(x_1,\\boldsymbol{\\lambda},\\mathbf{v}),L(x_2,\\boldsymbol{\\lambda},\\mathbf{v}),\u00b7\u00b7\u00b7\\} \\] \u5bf9\u4eff\u5c04\u51fd\u6570\u96c6\u53d6\u4e0b\u754c\uff0c\u5f97\u5230\u7684\u51fd\u6570\u662f\u51f9\u51fd\u6570 \u5bf9 \\(\\forall \\lambda_i\\geq0,\\forall v\\) \uff0c\u5982\u679c\u539f\u95ee\u9898\u6700\u4f18\u89e3\u5bf9\u5e94\u7684\u76ee\u6807\u51fd\u6570\u503c\u4e3a \\(p^*\\) \uff0c\u5219 \\(g(\\boldsymbol{\\lambda},\\mathbf{v})\\leq p^*\\) \u8bc1\u660e\uff1a\u8bbe\u539f\u95ee\u9898\u6700\u4f18\u89e3\u4e3a \\(x^*\\) \uff0c\u6709 \\[ \\begin{aligned} L(x^*,\\boldsymbol{\\lambda},\\mathbf{v}) &= f_0(x^*)+\\sum_{i=1}^m\\lambda_if_i(x^*)+\\sum_{i=1}^pv_ih_i(x^*)\\\\ &\\leq f_0(x^*) = p^* \\end{aligned} \\] \u53c8\u7531 \\(g(\\boldsymbol{\\lambda},\\mathbf{v})\\) \u7684\u5b9a\u4e49\uff0c\u603b\u6709 \\[ g(\\boldsymbol{\\lambda},\\mathbf{v}) \\leq L(x^*,\\boldsymbol{\\lambda},\\mathbf{v}) \\leq p^* \\] \u62c9\u683c\u6717\u65e5\u5bf9\u5076\u95ee\u9898\uff08Lagrange dual problem\uff09 \u6839\u636e\u5bf9\u5076\u51fd\u6570\u7684\u91cd\u8981\u6027\u8d28\uff0c\u5bf9 \\(\\forall \\lambda_i\\geq0,\\forall v\\) \uff0c \\(g(\\boldsymbol{\\lambda},\\mathbf{v})\\) \u662f\u539f\u95ee\u9898\u6700\u4f18\u503c \\(p^*\\) \u7684\u4e00\u4e2a\u4e0b\u754c\uff0c\u6700\u597d\u7684\u4e0b\u754c\u5c31\u662f\u6700\u5927\u5316\u5bf9\u5076\u51fd\u6570\uff0c\u56e0\u6b64\u6784\u9020\u539f\u95ee\u9898\u7684\u5bf9\u5076\u95ee\u9898\uff1a \\[ \\begin{aligned} \\max_{\\boldsymbol{\\lambda},\\mathbf{v}} g(\\boldsymbol{\\lambda},\\mathbf{v})\\\\ s.t. \\quad \\lambda_i\\geq0 \\end{aligned} \\] \u56e0\u4e3a \\(g(\\boldsymbol{\\lambda},\\mathbf{v})\\) \u662f\u51f9\u51fd\u6570\uff0c\u6545\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u95ee\u9898\u4e00\u5b9a\u662f\u51f8\u95ee\u9898\uff0c\u5176\u5bf9\u5e94\u7684\u6700\u4f18\u89e3\u4e3a \\(\\boldsymbol{\\lambda}^*\\) \uff0c \\(\\mathbf{v}^*\\) \uff08\u6700\u4f18\u62c9\u683c\u6717\u65e5\u4e58\u5b50\uff09\uff0c\u82e5\u5bf9\u5e94\u7684\u6700\u4f18\u503c\u4e3a \\(d^*\\) \uff0c\u5219\u603b\u6709 \\(d^* \\leq p^*\\) \\(d^* \\leq p^*\\) \u65f6\uff0c\u79f0\u4e3a\u5f31\u5bf9\u5076\uff08weak duality\uff09 \\(d^* = p^*\\) \u65f6\uff0c\u79f0\u4e3a\u5f3a\u5bf9\u5076\uff08strong duality\uff09 \\(p^* - d^*\\) \u79f0\u4e3a\u5bf9\u5076\u95f4\u9699\uff08duality gap\uff09 \u5f53\u539f\u95ee\u9898\u662f\u51f8\u95ee\u9898\u4e14\u5f3a\u5bf9\u5076\u65f6\uff0cKKT \u6761\u4ef6\u662f \\(x^*\\) \uff0c \\(\\boldsymbol{\\lambda}^*\\) \uff0c \\(\\mathbf{v}^*\\) \u4e3a\u6700\u4f18\u89e3\u7684\u5145\u8981\u6761\u4ef6","title":"\u62c9\u683c\u6717\u65e5\u5bf9\u5076 | Lagrange Duality"},{"location":"ai/ch1_7/#svm_1","text":"\u7ebf\u6027\u53ef\u5206 | hard SVM \\[ \\begin{aligned} &\\min \\frac{1}{2}\\mathbf{w}^\\mathrm{T}\\mathbf{w}\\\\ s.t. \\quad &y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b)\\geq1, \\quad i = 0,1,\u00b7\u00b7,n \\end{aligned} \\] \u597d\u5728 \u539f\u95ee\u9898\u662f\u51f8\u95ee\u9898\uff0c\u5e76\u4e14\u5f3a\u5bf9\u5076 \uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u8f6c\u5316\u4e3a\u5bf9\u5076\u95ee\u9898\u540e\u7684\u6700\u4f18\u89e3\u4e5f\u80fd\u4fdd\u8bc1\u5728\u539f\u95ee\u9898\u4e0a\u662f\u6700\u4f18\u89e3 \u9996\u5148\u5f97\u5230\u539f\u59cb\u95ee\u9898\u7684\u62c9\u683c\u6717\u65e5\u51fd\u6570 \\[ L(\\mathbf{w},b,\\boldsymbol{\\alpha}) = \\frac{1}{2}\\mathbf{w}^\\mathrm{T}\\mathbf{w}+\\sum_{i=1}^n\\alpha_i(1-y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b)) \\] \u5c06\u62c9\u683c\u6717\u65e5\u4e58\u5b50 \\(\\boldsymbol{\\alpha}\\) \u89c6\u4e3a\u5e38\u6570\uff0c\u6c42\u6781\u5c0f\u503c \u5bf9 \\(\\mathbf{w}\\) \uff0c \\(b\\) \u5206\u522b\u6c42\u4e00\u9636\u5bfc\u96f6\u70b9 \\[ \\begin{aligned} \\nabla_{\\mathbf{w}}L(\\mathbf{w},b,\\boldsymbol{\\alpha}) = \\mathbf{w}-\\sum_{i=1}^n\\alpha_iy_i\\mathbf{x}_i = 0\\\\ \\nabla_bL(\\mathbf{w},b,\\boldsymbol{\\alpha}) = -\\sum_{i=1}^n\\alpha_iy_i = 0 \\end{aligned} \\] \u56de\u4ee3\u8fdb \\(L(\\mathbf{w},b,\\boldsymbol{\\alpha})\\) \uff0c\u6709\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u51fd\u6570 \\[ \\begin{aligned} g(\\boldsymbol{\\alpha}) &= \\frac{1}{2}(\\sum_{i=1}^n\\alpha_iy_i\\mathbf{x}_i)^\\mathrm{T}(\\sum_{j=1}^n\\alpha_jy_j\\mathbf{x}_j)-\\sum_{i=1}^n\\alpha_iy_i(\\sum_{j=1}^n\\alpha_jy_j\\mathbf{x}_j)^\\mathrm{T}\\mathbf{x}_i+\\sum_{i=1}^n\\alpha_i\\\\ &= \\frac{1}{2}\\sum_{i=1}^n\\alpha_iy_i\\mathbf{x}_i^\\mathrm{T}\\sum_{j=1}^n\\alpha_jy_j\\mathbf{x}_j-\\sum_{i=1}^n\\alpha_iy_i(\\sum_{j=1}^n\\alpha_jy_j\\mathbf{x}_j^\\mathrm{T}\\mathbf{x}_i)+\\sum_{i=1}^n\\alpha_i\\\\ &= \\frac{1}{2}\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_j\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}_j-\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_j\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}_j+\\sum_{i=1}^n\\alpha_i\\\\ &= -\\frac{1}{2}\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_j\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}_j+\\sum_{i=1}^n\\alpha_i\\\\ \\end{aligned} \\] \u6545 \\[ g(\\boldsymbol{\\alpha}) = \\sum_{i=1}^n\\alpha_i-\\frac{1}{2}\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_j\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}_j \\] \u4e8e\u662f\u6211\u4eec\u5f97\u5230\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u95ee\u9898 \\[ \\begin{aligned} \\max &\\sum_{i=1}^n\\alpha_i-\\frac{1}{2}\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_j\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}_j\\\\ s.t. \\quad &\\sum_{i=1}^n\\alpha_iy_i = 0;\\\\ &\\alpha_i\\geq0, \\quad i=1,2\u00b7\u00b7\u00b7,n \\end{aligned} \\] \u8be5\u5f62\u5f0f\u6bd4\u539f\u59cb\u95ee\u9898\u66f4\u597d\u6c42\u89e3\uff0c\u56e0\u4e3a\u5b58\u5728\u6709\u6548\u7684\u7b97\u6cd5\u627e\u5230\u6700\u4f18\u89e3 \\(\\alpha_i^*\\) \u6c42\u51fa \\(\\alpha_i^*\\) \u540e\uff0c\u7531\u4e4b\u524d\u4e00\u9636\u5bfc\u6761\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(\\mathbf{w}\\) \u7684\u8bad\u7ec3\u7ed3\u679c \\[ \\mathbf{w}^* = \\sum_{i=1}^n\\alpha_i^*y_i\\mathbf{x}_i \\] \u5bf9\u4e8e\u504f\u7f6e\u9879 \\(b\\) \uff0c\u6211\u5728\u7f51\u4e0a\u521d\u6b65\u641c\u7d22\u5f97\u5230\u7684\u8bb2\u89e3\u4e5f\u6bd4\u8f83\u5c11\uff0c\u666e\u904d\u601d\u8def\u662f\u6839\u636e SVM \u4ee5\u53ca\u6837\u672c\u53cd\u4ee3 \\[ \\begin{aligned} b^* &= y'-(\\mathbf{w}^*)^\\mathrm{T}\\mathbf{x}'\\\\ &= y'-\\sum_{i=1}^n\\alpha_i^*y_i\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}' \\end{aligned} \\] \u6ce8\u610f\u8fd9\u91cc\u6837\u672c\u9009\u53d6\u6709\u8981\u6c42\uff0c\u53ef\u4ee5\u770b\u51fa\u8be5\u6837\u672c \\((\\mathbf{x}',y')\\) \u6ee1\u8db3 \\[ (\\mathbf{w}^*)^\\mathrm{T}\\mathbf{x}'+b^* = y' \\] \\(y'\\) \u53d6\u503c\u8981\u4e48 +1 \u8981\u4e48 -1\uff0c\u5373\u8be5\u6837\u672c\u5e94\u8be5\u662f\u5728\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49 \\(M\\) \u8bbe\u7684\u4e24\u4e2a\u8d85\u5e73\u9762\u4e0a\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u5e94\u8be5\u662f\u652f\u6301\u5411\u91cf\u4e4b\u4e00 \u975e\u7ebf\u6027\u53ef\u5206 | soft SVM \u4e0e\u7ebf\u6027\u53ef\u5206\u5f62\u5f0f\u76f8\u8fd1 \\[ \\begin{aligned} \\max &\\sum_{i=1}^n\\alpha_i-\\frac{1}{2}\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_j\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}_j\\\\ s.t. \\quad &\\sum_{i=1}^n\\alpha_iy_i = 0;\\\\ &C\\geq\\alpha_i\\geq0, \\quad i=1,2\u00b7\u00b7\u00b7,n \\end{aligned} \\] \u5176\u4e2d \\(C\\) \u4e3a\u8d85\u53c2","title":"SVM \u4f18\u5316\u7684\u60c5\u5f62"},{"location":"ai/ch1_7/#svm_2","text":"","title":"\u5bf9\u5076\u5f62\u5f0f\u7684 SVM"},{"location":"ai/ch1_7/#_5","text":"\u8ba8\u8bba\u4e00\u4e0b \\(\\alpha_i\\) \u4e0e\u5bf9\u5e94\u6837\u672c \\((\\mathbf{x}_i,y_i)\\) \u4e4b\u95f4\u5173\u7cfb\uff0c\u5e76\u8bf4\u660e\u652f\u6301\u5411\u91cf\u5230\u5e95\u662f\u4ec0\u4e48 \u5bf9\u4e8e hard SVM \u539f\u95ee\u9898\u4ee5\u53ca\u5176\u62c9\u683c\u6717\u65e5\u51fd\u6570 \\[ \\begin{aligned} &\\min \\frac{1}{2}\\mathbf{w}^\\mathrm{T}\\mathbf{w}\\\\ s.t. \\quad &y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b)\\geq1, \\quad i = 0,1,\u00b7\u00b7,n \\end{aligned} \\] \\[ L(\\mathbf{w},b,\\boldsymbol{\\alpha}) = \\frac{1}{2}\\mathbf{w}^\\mathrm{T}\\mathbf{w}+\\sum_{i=1}^n\\alpha_i(1-y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b)) \\] \u5982\u679c\u6211\u4eec\u4e0d\u8003\u8651\u5bf9\u5076\u5f62\u5f0f\uff0c\u5355\u7eaf\u4ece\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\u7684\u89c6\u89d2\u89c2\u5bdf\uff0c\u5bf9\u4e8e\u4efb\u4e00\u4e2a\u6837\u672c\u5e26\u6765\u7684\u7ea6\u675f\u6761\u4ef6 \\[ 1-y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b)\\leq0 \\] \u82e5\u6700\u4f18\u89e3\u5728\u8fb9\u754c\u5904\u53d6\u5230\uff0c\u5373 \\(1-y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b) = 0\\) \uff0c\u4e3a\u6ee1\u8db3\u89e3\u5b58\u5728\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u5fc5\u6709\u5176\u5bf9\u5e94\u7684\u62c9\u683c\u6717\u65e5\u4e58\u5b50 \\(\\alpha_i > 0\\) \uff0c\u800c\u5bf9\u5e94\u7684\u6837\u672c\u60c5\u51b5\u6070\u597d\u662f\u6837\u672c\u5728\u5b9a\u4e49\u95f4\u9694 \\(M\\) \u7684\u8d85\u5e73\u9762\u4e4b\u4e00\u4e0a\uff0c\u5373\u6837\u672c\u4e3a\u652f\u6301\u5411\u91cf \u76f8\u5bf9\u5e94\u7684\uff0c\u82e5\u6700\u4f18\u89e3\u5728\u5185\u90e8\u53d6\u5230\uff0c\u5373 \\(1-y_i(\\mathbf{w}^\\mathrm{T}\\mathbf{x}_i+b) < 0\\) \uff0c\u4e3a\u6ee1\u8db3\u89e3\u5b58\u5728\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u5fc5\u6709\u5176\u5bf9\u5e94\u7684\u62c9\u683c\u6717\u65e5\u4e58\u5b50 \\(\\alpha_i = 0\\) \uff0c\u5bf9\u5e94\u7684\u6837\u672c\u60c5\u51b5\u662f\u6837\u672c\u843d\u5728\u5b9a\u4e49\u95f4\u9694 \\(M\\) \u7684\u8d85\u5e73\u9762\u4e24\u8fb9\uff0c\u4e0d\u4e3a\u652f\u6301\u5411\u91cf \u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u77e5\u9053 \u652f\u6301\u5411\u91cf\u5c31\u662f\u5177\u6709\u5982\u4e0b\u7279\u5f81\u7684\u6837\u672c\u70b9 \uff1a \u843d\u5728\u5b9a\u4e49\u95f4\u9694 \\(M\\) \u8bbe\u5b9a\u7684\u4e24\u4e2a\u8d85\u5e73\u9762\u4e4b\u4e00\u4e0a\uff0c\u8d1f\u8d23\u201c\u9876\u4f4f\u201d SVM \u5bf9\u5e94\u7684\u62c9\u683c\u6717\u65e5\u4e58\u5b50 \\(\\alpha_i > 0\\) \uff0c\u5176\u4f59 \\(\\alpha_i\\) \u5747\u4e3a 0 \u771f\u6b63\u5bf9 SVM \u6700\u540e\u6536\u655b\u8d77\u51b3\u5b9a\u4f5c\u7528 \u53e6\u5916\u6709\u7528\u7684\u662f\uff0c\u6574\u4e2a\u6837\u672c\u96c6\u4e2d\uff0c \u652f\u6301\u5411\u91cf\u5f80\u5f80\u5360\u5c11\u90e8\u5206\uff08\u5927\u90e8\u5206 \\(\\alpha_i = 0\\) \uff09\uff0c\u5f53\u6211\u4eec\u91c7\u7528\u5bf9\u5076\u5f62\u5f0f\u8868\u8fbe SVM \u65f6\uff0c\u5728\u63a8\u7406\u7b49\u65b9\u9762\u53ef\u4ee5\u83b7\u5f97\u65b9\u4fbf","title":"\u652f\u6301\u5411\u91cf"},{"location":"ai/ch1_7/#svm_3","text":"\u8054\u7cfb\u652f\u6301\u5411\u91cf\u4e0e\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u6539\u5199 SVM \u7684\u57fa\u672c\u5f62\u5f0f \\[ \\begin{aligned} y &= sgn(\\mathbf{w}^\\mathrm{T}\\mathbf{x}+b)\\\\ y &= sgn((\\sum_{i=1}^n\\alpha_iy_i\\mathbf{x}_i)^\\mathrm{T}\\mathbf{x}+b)\\\\ y &= sgn(\\sum_{i=1}^n\\alpha_iy_i\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}+b) \\end{aligned} \\] \u56e0\u4e3a\u5927\u90e8\u5206 \\(\\alpha_i = 0\\) \uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8ba9\u652f\u6301\u5411\u91cf\u53c2\u4e0e\u63a8\u7406 \\[ y = sgn(\\sum_{i\\in SV}\\alpha_iy_i\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}+b) \\]","title":"\u5bf9\u5076 SVM"},{"location":"ai/ch1_7/#svm_4","text":"","title":"\u6838\u65b9\u6cd5\u5728 SVM \u7684\u5e94\u7528"},{"location":"ai/ch1_7/#_6","text":"\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5728\u5f53\u524d\u7684\u7ef4\u5ea6\u7a7a\u95f4\u6211\u4eec\u65e0\u6cd5\u5f97\u5230\u53ef\u884c\u7684\u7ebf\u6027\u5212\u5206\uff0c\u4f46\u80fd\u5f97\u5230\u4e00\u4e2a\u975e\u7ebf\u6027\u7684\u5212\u5206\uff0c\u6b64\u65f6\u6211\u4eec\u5e38\u5e38\u8003\u8651\u589e\u52a0\u6837\u672c\u7684\u8f93\u5165\u7ef4\u5ea6\uff0c\u4f8b\u5982 \\[ y = \\mathbf{x}^\\mathrm{T}\\boldsymbol{\\theta},\\quad \\mathbf{x} = [1,x^{(1)},x^{(2)},\u00b7\u00b7\u00b7,x^{(p)}]^\\mathrm{T} \\] \u5982\u679c\u7ef4\u5ea6\u592a\u4f4e\uff0c\u6211\u4eec\u8003\u8651 \\[ y = \\phi(\\mathbf{x})^\\mathrm{T}\\boldsymbol{\\theta},\\quad \\phi(\\mathbf{x}) = [1,x^{(1)},\u00b7\u00b7\u00b7,x^{(p)},(x^{(1)})^2,\u00b7\u00b7\u00b7,]^\\mathrm{T} \\] \u8fd9\u91cc\u62d3\u5c55\u7684\u7ef4\u5ea6\u9879\u53ef\u4ee5\u662f\u4efb\u610f\u7684\uff0c\u4e0a\u5f0f\u53ea\u4f5c\u4e3a\u793a\u610f \u4e00\u5b9a\u5b58\u5728\u9ad8\u7ef4\u7ebf\u6027\u53ef\u5206\u5417\uff1f \u5982\u679c\u6570\u636e\u88ab\u6620\u5c04\u5230\u8db3\u591f\u9ad8\u7684\u7ef4\u5ea6\uff0c\u6837\u672c\u901a\u5e38\u662f\u7ebf\u6027\u53ef\u5206\u7684\u3002VC\uff08Vapnik-Chervonenkis\uff09\u7ef4\u6570\u4e5f\u7ed9\u51fa\u8fc7\u89e3\u91ca\uff0c\u8fd9\u91cc\u53ea\u63d0\u53ca\u4e00\u4e0b","title":"\u589e\u52a0\u7ef4\u5ea6"},{"location":"ai/ch1_7/#kernel-method","text":"\u6709\u5bf9\u5076\u5f62\u5f0f\u7684 SVM \\[ y = sgn(\\sum_{i=1}^n\\alpha_iy_i\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}+b) \\] \u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u5168\u65b0\u6620\u5c04 \\(\\phi:\\mathcal{R}^p \\mapsto \\mathcal{R}^k, k > p\\) \u6765\u589e\u52a0 SVM \u8f93\u5165\u7a7a\u95f4\u7684\u7ef4\u5ea6\uff0c\u5219\u6709 \\[ y = sgn(\\sum_{i=1}^n\\alpha_iy_i\\phi(\\mathbf{x}_i)^\\mathrm{T}\\phi(\\mathbf{x})+b) \\] \u6ce8\u610f\u5230\u65e0\u8bba\u662f\u62d3\u5c55\u524d\u540e\uff0c \\(\\mathbf{x}_i^\\mathrm{T}\\mathbf{x}\\) \u4e0e \\(\\phi(\\mathbf{x}_i)^\\mathrm{T}\\phi(\\mathbf{x})\\) \u90fd\u662f\u5f88\u4f18\u7f8e\u7684\u5185\u79ef\u5f62\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e9b\u6280\u5de7\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684 kernel trick\uff0c\u6765\u8fdb\u4e00\u6b65\u7b80\u5316\u8fd0\u7b97 \u5e38\u89c1\u7684\u6838 | Kernel \u5bf9\u4e8e\u4e00\u4e9b\u7ea6\u5b9a\u7684\u57fa\u51fd\u6570 \\(\\phi(\\mathbf{x})\\) \uff0c\u5b83\u4eec\u7684\u5185\u79ef\u53ef\u4ee5\u5199\u4f5c\u66f4\u7b80\u6d01\u7684\u6838\u51fd\u6570\u5f62\u5f0f \\[ K(\\mathbf{x}, \\mathbf{z}) = \\phi(\\mathbf{x})^\\mathrm{T}\\phi(\\mathbf{z}) \\] \u8fd9\u76f8\u5f53\u4e8e\u5c06\u57fa\u51fd\u6570\u6240\u5c55\u73b0\u7684\u9ad8\u7ef4\u7a7a\u95f4\u9690\u5f0f\u7684\u8868\u8fbe\u51fa\u6765\uff0c\u540c\u65f6\u51cf\u8f7b\u8ba1\u7b97\u4e0a\u7684\u590d\u6742\u7a0b\u5ea6\uff0c\u76f8\u5f53\u5b9e\u7528 Linear kernel\uff08\u7ebf\u6027\u6838\uff09 \\[ K(\\mathbf{x}, \\mathbf{z}) = \\mathbf{x}^\\mathrm{T}\\mathbf{z} \\] Polynomial kernel\uff08\u591a\u9879\u5f0f\u6838\uff09 \\[ K(\\mathbf{x}, \\mathbf{z}) = (1+\\mathbf{x}^\\mathrm{T}\\mathbf{z})^d \\] \u8fd9\u91cc \\(d\\) \u89c6\u60c5\u51b5\u9009\u53d6\uff0c\u4f8b\u5982\u5982\u679c\u9009\u53d6 \\(d = 2\\) \uff0c\u5bf9\u5e94\u7684\u57fa\u51fd\u6570\u4fbf\u662f \\[ \\phi(\\mathbf{x}) = [1,\\sqrt{2}x_1,\u00b7\u00b7\u00b7,\\sqrt{2}x_p,x_1^2,\u00b7\u00b7\u00b7,x_p^2,\\sqrt{2}x_1x_2,\u00b7\u00b7\u00b7,\\sqrt{2}x_{p-1}x_p]^\\mathrm{T} \\] \u5bb9\u6613\u9a8c\u8bc1 \\(K(\\mathbf{x}, \\mathbf{z}) = \\phi(\\mathbf{x})^\\mathrm{T}\\phi(\\mathbf{z})\\) \uff0c\u4e14\u62d3\u5c55\u540e\u7684\u7ef4\u5ea6 \\(k = C_p^2+2p+1 > p\\) \uff0c\u5c06\u539f\u59cb\u6570\u636e\u6620\u5c04\u5230\u66f4\u9ad8\u7684\u7ef4\u5ea6\uff0c\u5b83\u5305\u542b\u4e86\u6240\u6709\u53ef\u80fd\u7684\u4e8c\u6b21\u9879 Radial basis kernel \uff08\u5f84\u5411\u57fa\u6838\uff09 \\[ K(\\mathbf{x}, \\mathbf{z}) = e^{-r\\Vert\\mathbf{x}-\\mathbf{z}\\Vert^2} \\] \u5176\u4e2d \\(r\\) \u662f\u8d85\u53c2\uff0c\u5176\u5bf9\u5e94\u7684\u57fa\u51fd\u6570\u6620\u5c04\u5230\u65e0\u7a77\u7ef4\u7a7a\u95f4 \u5bf9\u5076 SVM \u7684 Kernel trick \u56de\u5230\u5f00\u59cb\u6211\u4eec\u4e3a\u5bf9\u5076 SVM \u8bbe\u8ba1\u7684\u7ef4\u5ea6\u62d3\u5c55 \\[ y = sgn(\\sum_{i=1}^n\\alpha_iy_i\\phi(\\mathbf{x}_i)^\\mathrm{T}\\phi(\\mathbf{x})+b) \\] \u5982\u679c\u6211\u4eec\u5c06\u5176\u5b9a\u4e49\u4e3a\u591a\u9879\u5f0f\u6838\u7684\u57fa\u51fd\u6570\uff0c \\(d\\) \u9009\u53d6\u4e3a 2\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u4e0d\u7528\u5904\u7406\u989d\u5916\u7684\u9ad8\u7ef4\u5f00\u9500\uff0c\u800c\u662f\u5c06\u5176\u5185\u79ef\u5de7\u5999\u7684\u8f6c\u5316\u4e3a\u6838\u51fd\u6570 \\[ \\begin{aligned} y &= sgn(\\sum_{i=1}^n\\alpha_iy_iK(\\mathbf{x}_i,\\mathbf{x})+b)\\\\ &= sgn(\\sum_{i=1}^n\\alpha_iy_i(1+\\mathbf{x}_i^\\mathrm{T}\\mathbf{x})^2+b) \\end{aligned} \\] \u5bf9\u4e8e\u4f18\u5316\u5f62\u5f0f\uff0c\u540c\u6837\u53ef\u4ee5\u6539\u5199\u5bf9\u5076\u95ee\u9898 \\[ \\begin{aligned} \\max &\\sum_{i=1}^n\\alpha_i-\\frac{1}{2}\\sum_{i=1}^n\\sum_{j=1}^n\\alpha_i\\alpha_jy_iy_jK(\\mathbf{x}_i,\\mathbf{x}_j)\\\\ s.t. \\quad &\\sum_{i=1}^n\\alpha_iy_i = 0;\\\\ &\\alpha_i\\geq0, \\quad i=1,2\u00b7\u00b7\u00b7,n \\end{aligned} \\]","title":"\u6838\u65b9\u6cd5 | Kernel method"},{"location":"ai/ch1_7/#_7","text":"\u6838\u65b9\u6cd5\u662f\u4e00\u7c7b\u628a\u4f4e\u7ef4\u7a7a\u95f4\u7684\u975e\u7ebf\u6027\u53ef\u5206\u95ee\u9898\uff0c\u8f6c\u5316\u4e3a\u9ad8\u7ef4\u7a7a\u95f4\u7684\u7ebf\u6027\u53ef\u5206\u95ee\u9898\u7684\u65b9\u6cd5 \u6838\u6280\u5de7\u5229\u7528\u6838\u51fd\u6570\u76f4\u63a5\u8ba1\u7b97\u57fa\u51fd\u6570\u5185\u79ef\uff0c\u4ee5\u907f\u5f00\u8ba1\u7b97\u57fa\u51fd\u6570\u7684\u9ad8\u7ef4\u6620\u5c04\uff0c\u4ece\u800c\u52a0\u901f\u6838\u65b9\u6cd5","title":"\u603b\u7ed3"},{"location":"ai/ch1_8/","text":"PCA \u00b6 \u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff0cprincipal component analysis\uff09\u662f\u5e94\u7528\u5e7f\u6cdb\u7684\u65e0\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\uff0c\u901a\u8fc7\u5c06\u9ad8\u7ef4\u6570\u636e\u6295\u5c04\u5230\u6700\u5927\u5316\u65b9\u5dee\u5206\u5e03\u7684\u4e3b\u6210\u5206\uff08PC\uff0cprincipal component\uff09\u65b9\u5411\u4e0a\uff0c\u4ee5\u83b7\u5f97\u65b0\u7684\u4fe1\u606f\u66f4\u4e30\u5bcc\u3001\u5f7c\u6b64\u66f4\u72ec\u7acb\u7684\u65b0\u7279\u5f81\uff0c\u5e38\u7528\u4e8e\u6570\u636e\u964d\u7ef4 \u5206\u7c7b \u00b6 \u65e0\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u975e\u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b \u57fa\u672c\u5f62\u5f0f \u00b6 \u5047\u8bbe\u6837\u672c\u5199\u4f5c\u5217\u5411\u91cf\uff0c\u5373 \\[ \\mathbf{x} = [x^{(1)},x^{(2)},\u00b7\u00b7\u00b7,x^{(p)}]^\\mathrm{T} \\] PCA \u5bfb\u6c42 \\(k\\) \u4e2a\u4e3b\u6210\u5206\u5411\u91cf\uff0c\u5c06\u539f\u6837\u672c\u5728\u5176\u4e0a\u7684\u6295\u5f71\u4f5c\u4e3a\u964d\u7ef4\u540e\u65b0\u7684\u6570\u636e\u7279\u5f81\uff0c\u901a\u5e38 \\(k<p\\) \\[ \\mathbf{u} = [u^{(1)},u^{(2)},\u00b7\u00b7\u00b7,u^{(k)}]^\\mathrm{T}\\\\ \\] \u6bcf\u4e2a \\(u^{(i)}\\) \u7684\u5750\u6807\u7531\u4e2d\u5fc3\u5316\u540e\u7684\u539f\u6837\u672c\u6295\u5c04\u5230\u4e3b\u6210\u5206\u4e0a\u7684\u6570\u503c\u6240\u51b3\u5b9a\uff0c\u53ef\u4ee5\u89c6\u4e3a\u539f\u7279\u5f81\u9879\u7684\u7ebf\u6027\u52a0\u6743 \\[ \\begin{aligned} u^{(i)} &= \\mathbf{x}^\\mathrm{T}\\mathbf{v}_i\\\\ \\mathbf{u} &= [\\mathbf{v}_1,\\mathbf{v}_2,\u00b7\u00b7\u00b7,\\mathbf{v}_k]^\\mathrm{T}\\mathbf{x} \\end{aligned} \\] \u5176\u4e2d\u6bcf\u4e2a\u4e3b\u6210\u5206\u5411\u91cf\u4e3a \\[ \\mathbf{v} = [v^{(1)},v^{(2)},\u00b7\u00b7\u00b7,v^{(p)}]^\\mathrm{T} \\] \u4fbf\u662f\u6211\u4eec\u5bfb\u6c42\u7684\u53c2\u6570 \u635f\u5931\u7b56\u7565 \u00b6 \u5047\u8bbe\u73b0\u6709 \\(n\\) \u4e2a \\(p\\) \u7ef4\u539f\u59cb\u6837\u672c \\[ \\mathbf{x}_i = [x_i^{(1)},x_i^{(2)},\u00b7\u00b7\u00b7,x_i^{(p)}]^\\mathrm{T},\\quad i=1,2,\u00b7\u00b7\u00b7,n \\] PCA \u5f97\u5230 \\(n\\) \u4e2a \\(k\\) \u7ef4\u539f\u59cb\u6837\u672c \\[ \\mathbf{u}_i = [u_i^{(1)},u_i^{(2)},\u00b7\u00b7\u00b7,u_i^{(k)}]^\\mathrm{T},\\quad i=1,2,\u00b7\u00b7\u00b7,n \\] \u8003\u8651\u6700\u7ec8\u76ee\u6807\uff1a\u6700\u5927\u5316\u6295\u5f71\u5230\u4e3b\u6210\u5206\u7684 \u6837\u672c \u5206\u5e03\u65b9\u5dee\uff0c\u6211\u4eec\u5206\u6790\u5176\u4e2d\u4e00\u4e2a\u4e3b\u6210\u5206\u6295\u5f71\u7684\u60c5\u5f62\uff08\u5373\u6211\u4eec\u7814\u7a76\u6240\u6709\u7684 \\(u_i^{(1)}\\) \uff09\uff0c\u5176\u4f59\u7c7b\u4f3c \\[ \\begin{aligned} Var\\left(u^{(1)}\\right) &= \\sum_{i=1}^n\\left(u_i^{(1)}-\\overline{u^{(1)}}\\right)^2P(u^{(1)}=u_i^{(1)})\\\\ &= \\frac{1}{n}\\sum_{i=1}^n\\left(u_i^{(1)}-\\overline{u^{(1)}}\\right)^2 \\end{aligned} \\] \u8fdb\u4e00\u6b65\u7b80\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f \\(\\overline{u^{(1)}} = 0\\) \uff0c\u5e76\u7701\u7565\u6389\u7cfb\u6570 \\[ L = \\sum_{i=1}^n\\left(u_i^{(1)}\\right)^2 \\] \u5bf9\u540e\u9762 \\(k\\) \u4e2a\u4e3b\u6210\u5206\u6295\u5f71\u5f97\u5230\u7684\u7279\u5f81\u9879 \\(u^{(i)}\\) \uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u5199\u51fa\u7c7b\u4f3c\u7684\u76ee\u6807\u635f\u5931 \u4f18\u5316\u5b66\u4e60 \u00b6 \u6709\u4e86\u76ee\u6807\u635f\u5931\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u4e0e\u53c2\u6570\u8054\u7cfb\u8d77\u6765\uff0c\u5e76\u5236\u5b9a\u5b66\u4e60\u65b9\u6cd5\u3002\u597d\u5728 PCA \u4e0d\u9700\u8981\u4f9d\u8d56\u68af\u5ea6\u4e0b\u964d\uff0c\u7ecf\u8fc7\u63a8\u5bfc\u53ef\u4ee5\u53d1\u73b0\u5b83\u4e0e\u7279\u5f81\u503c\u7684\u5173\u7cfb\uff0c\u4ece\u800c\u4e00\u6b65\u5230\u4f4d \u5982\u4f55\u6295\u5f71 \u00b6 \u5bf9\u4e8e\u4e24\u4e2a\u5411\u91cf\uff0c\u5176\u4e2d\u4e00\u4e2a\u5230\u53e6\u4e00\u4e2a\u7684\u6295\u5f71\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\u53ef\u4ee5\u5199\u4f5c\u7b80\u6d01\u7684\u5185\u79ef\u5f62\u5f0f\u3002\u800c\u5982\u679c\u6211\u4eec\u5b9e\u73b0\u5bf9\u539f\u6570\u636e\u8fdb\u884c\u4e2d\u5fc3\u5316\uff0c\u6295\u5f71\u5728\u6570\u503c\u4e0a\u4fbf\u53ef\u4ee5\u8ba4\u4e3a\u5c31\u662f\u5728\u4e3b\u6210\u5206\u65b9\u5411\u4e0a\u7684\u65b0\u5750\u6807\uff0c\u5373 \\(u^{(i)}\\) \\[ u_i^{(1)} = \\mathbf{x}_i^\\mathrm{T}\\mathbf{v}_1\uff0c \\quad \\Vert \\mathbf{v}_1\\Vert = 1 \\] \u5176\u4e2d\u7b2c\u4e00\u4e2a\u4e3b\u6210\u5206 \\(\\mathbf{v}_1\\) \u5373\u662f\u6211\u4eec\u6240\u9700\u6c42\u7684\u53c2\u6570\uff0c\u6ce8\u610f\u6b64\u65f6\u8fd8\u9700\u6709\u9650\u5236\u6761\u4ef6\uff0c\u5373 \\(\\mathbf{v}_1\\) \u7684\u6a21\u4e3a 1 \u56e0\u6b64\u6211\u4eec\u6709 \\[ \\begin{aligned} L(\\mathbf{v}_1) &= \\sum_{i=1}^n(\\mathbf{x}_i^\\mathrm{T}\\mathbf{v}_1)^2\\\\ &= [\\mathbf{x}_1^\\mathrm{T}\\mathbf{v}_1,\\mathbf{x}_2^\\mathrm{T}\\mathbf{v}_1,\u00b7\u00b7\u00b7,\\mathbf{x}_n^\\mathrm{T}\\mathbf{v}_1][\\mathbf{x}_1^\\mathrm{T}\\mathbf{v}_1,\\mathbf{x}_2^\\mathrm{T}\\mathbf{v}_1,\u00b7\u00b7\u00b7,\\mathbf{x}_n^\\mathrm{T}\\mathbf{v}_1]^\\mathrm{T}\\\\ &= \\mathbf{v}_1^\\mathrm{T}\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{v}_1 \\end{aligned} \\] \u5176\u4e2d\uff0c \\(\\mathbf{X} = [\\mathbf{x}_1,\\mathbf{x}_2,\u00b7\u00b7\u00b7,\\mathbf{x}_n]^\\mathrm{T}\\) \uff0c \\(\\mathbf{v}_1^\\mathrm{T}\\mathbf{v}_1 = 1\\) \u4e8e\u662f\u7ec8\u4e8e\u80fd\u6e05\u695a\u8868\u793a PCA \u95ee\u9898 \\[ \\begin{aligned} &\\max \\mathbf{v}_1^\\mathrm{T}\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{v}_1\\\\ &s.t. \\quad \\mathbf{v}_1^\\mathrm{T}\\mathbf{v}_1 = 1 \\end{aligned} \\] \u7279\u5f81\u503c\u7684\u5173\u7cfb \u00b6 \u5bf9\u4e8e\u4f18\u5316\u76ee\u6807 \\(L(\\mathbf{v}_1)\\) \uff0c\u5982\u679c\u6211\u4eec\u4ee4\u5176\u503c\u4e3a \\(\\lambda\\) \\[ \\begin{aligned} \\mathbf{v}_1^\\mathrm{T}\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{v}_1 &= \\lambda = \\lambda\\mathbf{v}_1^\\mathrm{T}\\mathbf{v}_1\\\\ \\Downarrow\\\\ \\mathbf{v}_1^\\mathrm{T}(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{v}_1&-\\lambda\\mathbf{v}_1) = 0\\\\ \\Downarrow\\\\ \\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{v}_1&-\\lambda\\mathbf{v}_1 = 0 \\end{aligned} \\] \u5373 \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{v}_1 = \\lambda\\mathbf{v}_1\\) \uff0c\u8fd9\u6b63\u597d\u662f\u77e9\u9635\u7279\u5f81\u5411\u91cf\u53ca\u5176\u7279\u5f81\u503c\u7684\u5b9a\u4e49\uff0c\u5e76\u4e14 \\(\\lambda\\) \u5c31\u662f\u6211\u4eec\u7684\u4f18\u5316\u76ee\u6807\uff0c\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u89e3\u77e9\u9635 \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \u7684\u7279\u5f81\u5411\u91cf\u4e0e\u7279\u5f81\u503c \u968f\u7740\u7279\u5f81\u503c\u7531\u5927\u5230\u5c0f\uff0c\u5176\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u8868\u793a\u7684\u4e3b\u6210\u5206\uff08\u9700\u8981\u5355\u4f4d\u5316\uff0c\u56e0\u4e3a\u5f97\u5230\u7684\u539f\u59cb\u7279\u5f81\u5411\u91cf\u53ea\u662f\u5fc5\u8981\u6761\u4ef6\uff09\u6295\u5f71\u4e0b\u7684\u6837\u672c\u5206\u5e03\u65b9\u5dee\u9010\u6e10\u51cf\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u89c6\u60c5\u51b5\u9009\u62e9\u524d\u51e0\u4e2a\u6700\u5927\u7684\u7279\u5f81\u503c\u53ca\u5176\u5bf9\u5e94\u4e3b\u6210\u5206 \u5c40\u9650 \u00b6 \u4f18\u5316\u8fc7\u7a0b\u4e2d\u4e3b\u8981\u4f9d\u9760\u7279\u5f81\u503c\u7684\u5927\u5c0f\u9009\u53d6\u4e3b\u6210\u5206\uff0c\u5982\u679c\u7279\u5f81\u503c\u4e00\u6837\uff0c\u5c06\u96be\u4ee5\u9009\u53d6 \u6700\u5927\u5316\u964d\u7ef4\u5206\u5e03\u65b9\u5dee\u7684\u7b56\u7565\u4e0d\u4e00\u5b9a\u4e0e\u6700\u4f18\u5316\u5206\u7c7b\u6548\u679c\u4e00\u81f4\uff0c\u53ef\u80fd\u5bfb\u627e\u7684\u4e3b\u6210\u5206\u964d\u7ef4\u6837\u672c\u4f9d\u65e7\u96be\u4ee5\u5206\u7c7b","title":"PCA"},{"location":"ai/ch1_8/#pca","text":"\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff0cprincipal component analysis\uff09\u662f\u5e94\u7528\u5e7f\u6cdb\u7684\u65e0\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\uff0c\u901a\u8fc7\u5c06\u9ad8\u7ef4\u6570\u636e\u6295\u5c04\u5230\u6700\u5927\u5316\u65b9\u5dee\u5206\u5e03\u7684\u4e3b\u6210\u5206\uff08PC\uff0cprincipal component\uff09\u65b9\u5411\u4e0a\uff0c\u4ee5\u83b7\u5f97\u65b0\u7684\u4fe1\u606f\u66f4\u4e30\u5bcc\u3001\u5f7c\u6b64\u66f4\u72ec\u7acb\u7684\u65b0\u7279\u5f81\uff0c\u5e38\u7528\u4e8e\u6570\u636e\u964d\u7ef4","title":"PCA"},{"location":"ai/ch1_8/#_1","text":"\u65e0\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 \u975e\u6982\u7387\u6a21\u578b \u53c2\u6570\u5316\u6a21\u578b","title":"\u5206\u7c7b"},{"location":"ai/ch1_8/#_2","text":"\u5047\u8bbe\u6837\u672c\u5199\u4f5c\u5217\u5411\u91cf\uff0c\u5373 \\[ \\mathbf{x} = [x^{(1)},x^{(2)},\u00b7\u00b7\u00b7,x^{(p)}]^\\mathrm{T} \\] PCA \u5bfb\u6c42 \\(k\\) \u4e2a\u4e3b\u6210\u5206\u5411\u91cf\uff0c\u5c06\u539f\u6837\u672c\u5728\u5176\u4e0a\u7684\u6295\u5f71\u4f5c\u4e3a\u964d\u7ef4\u540e\u65b0\u7684\u6570\u636e\u7279\u5f81\uff0c\u901a\u5e38 \\(k<p\\) \\[ \\mathbf{u} = [u^{(1)},u^{(2)},\u00b7\u00b7\u00b7,u^{(k)}]^\\mathrm{T}\\\\ \\] \u6bcf\u4e2a \\(u^{(i)}\\) \u7684\u5750\u6807\u7531\u4e2d\u5fc3\u5316\u540e\u7684\u539f\u6837\u672c\u6295\u5c04\u5230\u4e3b\u6210\u5206\u4e0a\u7684\u6570\u503c\u6240\u51b3\u5b9a\uff0c\u53ef\u4ee5\u89c6\u4e3a\u539f\u7279\u5f81\u9879\u7684\u7ebf\u6027\u52a0\u6743 \\[ \\begin{aligned} u^{(i)} &= \\mathbf{x}^\\mathrm{T}\\mathbf{v}_i\\\\ \\mathbf{u} &= [\\mathbf{v}_1,\\mathbf{v}_2,\u00b7\u00b7\u00b7,\\mathbf{v}_k]^\\mathrm{T}\\mathbf{x} \\end{aligned} \\] \u5176\u4e2d\u6bcf\u4e2a\u4e3b\u6210\u5206\u5411\u91cf\u4e3a \\[ \\mathbf{v} = [v^{(1)},v^{(2)},\u00b7\u00b7\u00b7,v^{(p)}]^\\mathrm{T} \\] \u4fbf\u662f\u6211\u4eec\u5bfb\u6c42\u7684\u53c2\u6570","title":"\u57fa\u672c\u5f62\u5f0f"},{"location":"ai/ch1_8/#_3","text":"\u5047\u8bbe\u73b0\u6709 \\(n\\) \u4e2a \\(p\\) \u7ef4\u539f\u59cb\u6837\u672c \\[ \\mathbf{x}_i = [x_i^{(1)},x_i^{(2)},\u00b7\u00b7\u00b7,x_i^{(p)}]^\\mathrm{T},\\quad i=1,2,\u00b7\u00b7\u00b7,n \\] PCA \u5f97\u5230 \\(n\\) \u4e2a \\(k\\) \u7ef4\u539f\u59cb\u6837\u672c \\[ \\mathbf{u}_i = [u_i^{(1)},u_i^{(2)},\u00b7\u00b7\u00b7,u_i^{(k)}]^\\mathrm{T},\\quad i=1,2,\u00b7\u00b7\u00b7,n \\] \u8003\u8651\u6700\u7ec8\u76ee\u6807\uff1a\u6700\u5927\u5316\u6295\u5f71\u5230\u4e3b\u6210\u5206\u7684 \u6837\u672c \u5206\u5e03\u65b9\u5dee\uff0c\u6211\u4eec\u5206\u6790\u5176\u4e2d\u4e00\u4e2a\u4e3b\u6210\u5206\u6295\u5f71\u7684\u60c5\u5f62\uff08\u5373\u6211\u4eec\u7814\u7a76\u6240\u6709\u7684 \\(u_i^{(1)}\\) \uff09\uff0c\u5176\u4f59\u7c7b\u4f3c \\[ \\begin{aligned} Var\\left(u^{(1)}\\right) &= \\sum_{i=1}^n\\left(u_i^{(1)}-\\overline{u^{(1)}}\\right)^2P(u^{(1)}=u_i^{(1)})\\\\ &= \\frac{1}{n}\\sum_{i=1}^n\\left(u_i^{(1)}-\\overline{u^{(1)}}\\right)^2 \\end{aligned} \\] \u8fdb\u4e00\u6b65\u7b80\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f \\(\\overline{u^{(1)}} = 0\\) \uff0c\u5e76\u7701\u7565\u6389\u7cfb\u6570 \\[ L = \\sum_{i=1}^n\\left(u_i^{(1)}\\right)^2 \\] \u5bf9\u540e\u9762 \\(k\\) \u4e2a\u4e3b\u6210\u5206\u6295\u5f71\u5f97\u5230\u7684\u7279\u5f81\u9879 \\(u^{(i)}\\) \uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u5199\u51fa\u7c7b\u4f3c\u7684\u76ee\u6807\u635f\u5931","title":"\u635f\u5931\u7b56\u7565"},{"location":"ai/ch1_8/#_4","text":"\u6709\u4e86\u76ee\u6807\u635f\u5931\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u4e0e\u53c2\u6570\u8054\u7cfb\u8d77\u6765\uff0c\u5e76\u5236\u5b9a\u5b66\u4e60\u65b9\u6cd5\u3002\u597d\u5728 PCA \u4e0d\u9700\u8981\u4f9d\u8d56\u68af\u5ea6\u4e0b\u964d\uff0c\u7ecf\u8fc7\u63a8\u5bfc\u53ef\u4ee5\u53d1\u73b0\u5b83\u4e0e\u7279\u5f81\u503c\u7684\u5173\u7cfb\uff0c\u4ece\u800c\u4e00\u6b65\u5230\u4f4d","title":"\u4f18\u5316\u5b66\u4e60"},{"location":"ai/ch1_8/#_5","text":"\u5bf9\u4e8e\u4e24\u4e2a\u5411\u91cf\uff0c\u5176\u4e2d\u4e00\u4e2a\u5230\u53e6\u4e00\u4e2a\u7684\u6295\u5f71\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\u53ef\u4ee5\u5199\u4f5c\u7b80\u6d01\u7684\u5185\u79ef\u5f62\u5f0f\u3002\u800c\u5982\u679c\u6211\u4eec\u5b9e\u73b0\u5bf9\u539f\u6570\u636e\u8fdb\u884c\u4e2d\u5fc3\u5316\uff0c\u6295\u5f71\u5728\u6570\u503c\u4e0a\u4fbf\u53ef\u4ee5\u8ba4\u4e3a\u5c31\u662f\u5728\u4e3b\u6210\u5206\u65b9\u5411\u4e0a\u7684\u65b0\u5750\u6807\uff0c\u5373 \\(u^{(i)}\\) \\[ u_i^{(1)} = \\mathbf{x}_i^\\mathrm{T}\\mathbf{v}_1\uff0c \\quad \\Vert \\mathbf{v}_1\\Vert = 1 \\] \u5176\u4e2d\u7b2c\u4e00\u4e2a\u4e3b\u6210\u5206 \\(\\mathbf{v}_1\\) \u5373\u662f\u6211\u4eec\u6240\u9700\u6c42\u7684\u53c2\u6570\uff0c\u6ce8\u610f\u6b64\u65f6\u8fd8\u9700\u6709\u9650\u5236\u6761\u4ef6\uff0c\u5373 \\(\\mathbf{v}_1\\) \u7684\u6a21\u4e3a 1 \u56e0\u6b64\u6211\u4eec\u6709 \\[ \\begin{aligned} L(\\mathbf{v}_1) &= \\sum_{i=1}^n(\\mathbf{x}_i^\\mathrm{T}\\mathbf{v}_1)^2\\\\ &= [\\mathbf{x}_1^\\mathrm{T}\\mathbf{v}_1,\\mathbf{x}_2^\\mathrm{T}\\mathbf{v}_1,\u00b7\u00b7\u00b7,\\mathbf{x}_n^\\mathrm{T}\\mathbf{v}_1][\\mathbf{x}_1^\\mathrm{T}\\mathbf{v}_1,\\mathbf{x}_2^\\mathrm{T}\\mathbf{v}_1,\u00b7\u00b7\u00b7,\\mathbf{x}_n^\\mathrm{T}\\mathbf{v}_1]^\\mathrm{T}\\\\ &= \\mathbf{v}_1^\\mathrm{T}\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{v}_1 \\end{aligned} \\] \u5176\u4e2d\uff0c \\(\\mathbf{X} = [\\mathbf{x}_1,\\mathbf{x}_2,\u00b7\u00b7\u00b7,\\mathbf{x}_n]^\\mathrm{T}\\) \uff0c \\(\\mathbf{v}_1^\\mathrm{T}\\mathbf{v}_1 = 1\\) \u4e8e\u662f\u7ec8\u4e8e\u80fd\u6e05\u695a\u8868\u793a PCA \u95ee\u9898 \\[ \\begin{aligned} &\\max \\mathbf{v}_1^\\mathrm{T}\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{v}_1\\\\ &s.t. \\quad \\mathbf{v}_1^\\mathrm{T}\\mathbf{v}_1 = 1 \\end{aligned} \\]","title":"\u5982\u4f55\u6295\u5f71"},{"location":"ai/ch1_8/#_6","text":"\u5bf9\u4e8e\u4f18\u5316\u76ee\u6807 \\(L(\\mathbf{v}_1)\\) \uff0c\u5982\u679c\u6211\u4eec\u4ee4\u5176\u503c\u4e3a \\(\\lambda\\) \\[ \\begin{aligned} \\mathbf{v}_1^\\mathrm{T}\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{v}_1 &= \\lambda = \\lambda\\mathbf{v}_1^\\mathrm{T}\\mathbf{v}_1\\\\ \\Downarrow\\\\ \\mathbf{v}_1^\\mathrm{T}(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{v}_1&-\\lambda\\mathbf{v}_1) = 0\\\\ \\Downarrow\\\\ \\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{v}_1&-\\lambda\\mathbf{v}_1 = 0 \\end{aligned} \\] \u5373 \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\mathbf{v}_1 = \\lambda\\mathbf{v}_1\\) \uff0c\u8fd9\u6b63\u597d\u662f\u77e9\u9635\u7279\u5f81\u5411\u91cf\u53ca\u5176\u7279\u5f81\u503c\u7684\u5b9a\u4e49\uff0c\u5e76\u4e14 \\(\\lambda\\) \u5c31\u662f\u6211\u4eec\u7684\u4f18\u5316\u76ee\u6807\uff0c\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u89e3\u77e9\u9635 \\(\\mathbf{X}^\\mathrm{T}\\mathbf{X}\\) \u7684\u7279\u5f81\u5411\u91cf\u4e0e\u7279\u5f81\u503c \u968f\u7740\u7279\u5f81\u503c\u7531\u5927\u5230\u5c0f\uff0c\u5176\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u8868\u793a\u7684\u4e3b\u6210\u5206\uff08\u9700\u8981\u5355\u4f4d\u5316\uff0c\u56e0\u4e3a\u5f97\u5230\u7684\u539f\u59cb\u7279\u5f81\u5411\u91cf\u53ea\u662f\u5fc5\u8981\u6761\u4ef6\uff09\u6295\u5f71\u4e0b\u7684\u6837\u672c\u5206\u5e03\u65b9\u5dee\u9010\u6e10\u51cf\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u89c6\u60c5\u51b5\u9009\u62e9\u524d\u51e0\u4e2a\u6700\u5927\u7684\u7279\u5f81\u503c\u53ca\u5176\u5bf9\u5e94\u4e3b\u6210\u5206","title":"\u7279\u5f81\u503c\u7684\u5173\u7cfb"},{"location":"ai/ch1_8/#_7","text":"\u4f18\u5316\u8fc7\u7a0b\u4e2d\u4e3b\u8981\u4f9d\u9760\u7279\u5f81\u503c\u7684\u5927\u5c0f\u9009\u53d6\u4e3b\u6210\u5206\uff0c\u5982\u679c\u7279\u5f81\u503c\u4e00\u6837\uff0c\u5c06\u96be\u4ee5\u9009\u53d6 \u6700\u5927\u5316\u964d\u7ef4\u5206\u5e03\u65b9\u5dee\u7684\u7b56\u7565\u4e0d\u4e00\u5b9a\u4e0e\u6700\u4f18\u5316\u5206\u7c7b\u6548\u679c\u4e00\u81f4\uff0c\u53ef\u80fd\u5bfb\u627e\u7684\u4e3b\u6210\u5206\u964d\u7ef4\u6837\u672c\u4f9d\u65e7\u96be\u4ee5\u5206\u7c7b","title":"\u5c40\u9650"},{"location":"ai/ch2_1/","text":"SLIC\u7b97\u6cd5 & \u50cf\u7d20\u7f8e\u672f\u7d20\u6750\u751f\u6210 \u00b6 \u5b9e\u73b0\u8d85\u50cf\u7d20\u9886\u57df\u7ecf\u5178\u7b97\u6cd5SLIC\uff0c\u9879\u76ee\u5df2\u653e\u81f3 Github \u8d85\u50cf\u7d20\uff08SuperPixel\uff09 \u00b6 \u8d85\u50cf\u7d20\u662f 2003 \u5e74 Xiaofeng Ren 1 \u63d0\u51fa\u548c\u53d1\u5c55\u8d77\u6765\u7684\u56fe\u50cf\u5206\u5272\u6280\u672f\uff0c\u662f\u6307\u5177\u6709\u76f8\u4f3c\u7eb9\u7406\u3001\u989c\u8272\u3001\u4eae\u5ea6\u7b49\u7279\u5f81\u7684\u76f8\u90bb\u50cf\u7d20\u6784\u6210\u7684\u6709\u4e00\u5b9a\u89c6\u89c9\u610f\u4e49\u7684\u4e0d\u89c4\u5219\u50cf\u7d20\u5757 \u5b83\u5229\u7528\u50cf\u7d20\u4e4b\u95f4\u7279\u5f81\u7684\u76f8\u4f3c\u6027\u5c06\u50cf\u7d20\u5206\u7ec4\uff0c\u7528\u5c11\u91cf\u7684\u8d85\u50cf\u7d20\u4ee3\u66ff\u5927\u91cf\u7684\u50cf\u7d20\u6765\u8868\u8fbe\u56fe\u7247\u7279\u5f81\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u964d\u4f4e\u4e86\u56fe\u50cf\u540e\u5904\u7406\u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u901a\u5e38\u4f5c\u4e3a\u5206\u5272\u7b97\u6cd5\u7684\u9884\u5904\u7406\u6b65\u9aa4 \u7b80\u5355\u7ebf\u6027\u8fed\u4ee3\u805a\u7c7b\uff08SLIC\uff09 \u00b6 \u8d85\u50cf\u7d20\u70b9\u5206\u5272\u7684\u65b9\u6cd5\u5305\u62ec\u4e86\u63d0\u53d6\u8f6e\u5ed3\u3001\u805a\u7c7b\u3001\u68af\u5ea6\u4e0a\u5347\u7b49\u591a\u79cd SLIC 2 \u662f\u57fa\u4e8eK-means\u805a\u7c7b\u7684\u8d85\u50cf\u7d20\u5206\u5272\u7b97\u6cd5\uff0c\u5177\u6709\u7b80\u5355\u7075\u6d3b\u3001\u6548\u679c\u597d\u3001\u5904\u7406\u901f\u5ea6\u5feb\u7b49\u4f18\u52bf 1. \u56fe\u50cf\u9884\u5904\u7406 \u00b6 \u5c06\u56fe\u50cf\u4ece RGB \u989c\u8272\u7a7a\u95f4\u8f6c\u6362\u5230 CIE-Lab \u989c\u8272\u7a7a\u95f4\uff0cLab \u989c\u8272\u7a7a\u95f4\u66f4\u7b26\u5408\u4eba\u7c7b\u5bf9\u989c\u8272\u7684\u89c6\u89c9\u611f\u77e5\u3002\u8fd9\u4e2a\u7a7a\u95f4\u91cc\u7684\u8ddd\u79bb\u80fd\u53cd\u6620\u4eba\u611f\u89c9\u5230\u7684\u989c\u8272\u5dee\u522b\uff0c\u76f8\u5173\u8ba1\u7b97\u66f4\u4e3a\u51c6\u786e 2. \u521d\u59cb\u5316\u805a\u7c7b\u4e2d\u5fc3 \u00b6 \u6839\u636e\u53c2\u6570\u786e\u5b9a\u8d85\u50cf\u7d20\u7684\u6570\u76ee\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5212\u5206\u4e3a\u591a\u5c11\u4e2a\u533a\u57df\u3002\u5047\u8bbe\u56fe\u7247\u6709 \\(N\\) \u4e2a\u50cf\u7d20\u70b9\uff0c\u9884\u8ba1\u5206\u5272\u4e3a \\(K\\) \u4e2a\u8d85\u50cf\u7d20\uff0c\u6bcf\u4e2a\u8d85\u50cf\u7d20\u5927\u5c0f\u4e3a \\(N/K\\) \uff0c\u76f8\u90bb\u4e2d\u5fc3\u8ddd\u79bb\u4e3a \\(S=Sqr(N/K)\\) \uff0c\u5f97\u5230 \\(K\\) \u4e2a\u805a\u7c7b\u5750\u6807 3. \u4f18\u5316\u521d\u59cb\u805a\u7c7b\u4e2d\u5fc3 \u00b6 \u805a\u7c7b\u4e2d\u5fc3\u7684 \\(3\\times3\\) \u90bb\u57df\u5185\u9009\u62e9\u68af\u5ea6\u6700\u5c0f\u7684\u50cf\u7d20\u70b9\u4f5c\u4e3a\u65b0\u7684\u805a\u7c7b\u4e2d\u5fc3 \u628a\u56fe\u50cf\u770b\u6210\u4e8c\u7ef4\u79bb\u6563\u51fd\u6570\uff0c\u68af\u5ea6\u4e5f\u5c31\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u6c42\u5bfc\uff0c\u5f53\u76f8\u90bb\u50cf\u7d20\u503c\u6709\u53d8\u5316\u5c31\u4f1a\u5b58\u5728\u68af\u5ea6\uff0c\u800c\u5728\u8fb9\u7f18\u4e0a\u7684\u50cf\u7d20\u70b9\u7684\u68af\u5ea6\u6700\u5927\u3002\u5c06\u805a\u7c7b\u4e2d\u5fc3\u632a\u5230\u68af\u5ea6\u6700\u5c0f\u7684\u5730\u65b9\u53ef\u4ee5\u907f\u514d\u5176\u843d\u5230\u8fb9\u7f18\u8f6e\u5ed3\u4e0a\uff0c\u5f71\u54cd\u805a\u7c7b\u6548\u679c \u79bb\u6563\u68af\u5ea6\u7684\u68af\u5ea6\u8ba1\u7b97\u8003\u8651\u5230\u8ba1\u7b97\u91cf\uff0c\u4e00\u822c\u4f1a\u7b80\u5316\u4e3a\u7528\u7edd\u5bf9\u503c\u6765\u8fd1\u4f3c\u5e73\u65b9\u548c\u5e73\u65b9\u6839\u7684\u64cd\u4f5c 4. \u8ba1\u7b97\u50cf\u7d20\u70b9\u4e0e\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb \u00b6 \u5728\u805a\u7c7b\u4e2d\u5fc3\u8ddd\u79bbS\u7684\u533a\u57df\u5185 \\(2S\\times2S\\) \u7684\u90bb\u57df\u5185\u8ba1\u7b97\u50cf\u7d20\u70b9\u4e0e\u6bcf\u4e2a\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb \u4f7f\u7528\u7684\u662f\u6b27\u5f0f\u8ddd\u79bb\uff0c\u603b\u8ddd\u79bb \\(D\\) \u7531 \\(d_c\\) \u989c\u8272\u8ddd\u79bb\u4e0e \\(d_s\\) \u7a7a\u95f4\u8ddd\u79bb\u4e24\u90e8\u5206\u7ec4\u6210\uff1a \\[ \\begin{aligned} \\mathrm{d}_c &=\\sqrt{\\left(l_j-l_i\\right)^2+\\left(a_j-a_i\\right)^2+\\left(b_j-b_i\\right)^2} \\\\ \\mathrm{~d}_s &=\\sqrt{\\left(x_j-x_k\\right)^2+\\left(y_j-y_k\\right)^2} \\\\ D &=\\sqrt{\\left(\\frac{\\mathrm{d}_c}{N_c}\\right)^2+\\left(\\frac{\\mathrm{d}_s}{N_s}\\right)^2} \\end{aligned} \\] \u5982\u679c\u76f4\u63a5\u5c06 \\(l\\) \uff0c \\(a\\) \uff0c \\(b\\) \uff0c \\(x\\) \uff0c \\(y\\) \u62fc\u63a5\u6210\u4e00\u4e2a\u77e2\u91cf\u8ba1\u7b97\u8ddd\u79bb\uff0c\u5f53\u8d85\u50cf\u7d20\u7684\u5927\u5c0f\u53d8\u5316\u65f6\uff0c \\(x\\) \uff0c \\(y\\) \u7684\u503c\u53ef\u4ee5\u53d6\u5230\u975e\u5e38\u5927 \uff0c\u6bd4\u5982\u4e00\u5f20 \\(1000\\times1000\\) \u7684\u56fe\uff0c\u7a7a\u95f4\u8ddd\u79bb\u53ef\u4ee5\u8fbe\u5230 \\(1000\\times Sqr(2)\\) \uff0c\u800c\u989c\u8272\u8ddd\u79bb\u6700\u5927\u4ec5 \\(10\\times Sqr(2)\\) \uff0c\u5bfc\u81f4\u6700\u7ec8\u8ba1\u7b97\u5f97\u5230\u7684\u8ddd\u79bb\u503c\u4e2d\uff0c\u7a7a\u95f4\u8ddd\u79bb \\(d_s\\) \u6743\u91cd\u5360\u6bd4\u8fc7\u5927 \u6240\u4ee5\u9700\u8981\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u9664\u4ee5\u6700\u5927\u503c\u5373\u8d85\u50cf\u7d20\u70b9\u7684\u521d\u59cb\u5bbd\u5ea6 \\(S\\) \uff0c\u5c06\u503c\u6620\u5c04\u5230 \\([0,1]\\) \u800c\u989c\u8272\u7a7a\u95f4\u8ddd\u79bb\u4e5f\u4f1a\u7531\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c \\(m\\) \u6765\u8c03\u8282\u989c\u8272\u8ddd\u79bb\u4e0e\u7a7a\u95f4\u8ddd\u79bb\u7684\u5f71\u54cd\u6743\u91cd\uff0c \\(m\\) \u53d6\u503c\u8303\u56f4\u4e3a \\([1,40]\\) \\[ \\begin{aligned} D^{\\prime} &=\\sqrt{\\left(\\frac{\\mathrm{d}_c}{m}\\right)^2+\\left(\\frac{\\mathrm{d}_s}{S}\\right)^2} \\end{aligned} \\] \u5f53 \\(m\\) \u8d8a\u5927\uff0c\u989c\u8272\u7a7a\u95f4\u9664\u4ee5 \\(m\\) \u540e\u7684\u503c\u8d8a\u5c0f\uff0c\u5373\u7a7a\u95f4\u8ddd\u79bb\u7684\u6743\u91cd\u8d8a\u5927\uff0c\u751f\u6210\u7684\u50cf\u7d20\u4f1a\u66f4\u4e3a\u5f62\u72b6\u89c4\u5219\uff0c\u5f53 \\(m\\) \u8d8a\u5c0f\uff0c\u989c\u8272\u8ddd\u79bb\u6743\u91cd\u66f4\u5927\uff0c\u8d85\u50cf\u7d20\u4f1a\u5728\u8fb9\u7f18\u66f4\u4e3a\u7d27\u51d1\uff0c\u800c\u5f62\u72b6\u5927\u5c0f\u8f83\u4e3a\u4e0d\u89c4\u5219 \u603b\u7ed3 \u00b6 SLIC\u57fa\u4e8eK-means\uff0c\u4e3b\u8981\u505a\u4e86\u4e24\u70b9\u4f18\u5316\uff1a \u8c03\u6574\u4e86 \u641c\u7d22\u8303\u56f4 \uff0c\u7531\u5168\u5c40\u7f29\u5c0f\u4e3a \\(2S \\times 2S\\) \u7a7a\u95f4 \u8c03\u6574\u4e86 \u8ddd\u79bb\u5b9a\u4e49 \uff0c\u9009\u7528CIE-Lab\u8272\u57df\uff0c\u5e76\u5f15\u5165\u4e86\u8d85\u53c2\u6570\u4ee5\u8c03\u8282\u8272\u5f69\u8ddd\u79bb\u4e0e\u7a7a\u95f4\u8ddd\u79bb\u7684\u6743\u91cd 5. \u50cf\u7d20\u70b9\u5206\u7c7b \u00b6 \u6807\u8bb0\u6bcf\u4e2a\u50cf\u7d20\u70b9\u7684\u7c7b\u522b\u4e3a\u8ddd\u79bb\u5176\u6700\u5c0f\u7684\u805a\u7c7b\u4e2d\u5fc3\u7684\u7c7b\u522b 6. \u91cd\u65b0\u8ba1\u7b97\u805a\u7c7b\u4e2d\u5fc3 \u00b6 \u8ba1\u7b97\u5c5e\u4e8e\u540c\u4e00\u4e2a\u805a\u7c7b\u7684\u6240\u6709\u50cf\u7d20\u70b9\u7684\u5e73\u5747\u5411\u91cf\u503c\uff0c\u91cd\u65b0\u5f97\u5230\u805a\u7c7b\u4e2d\u5fc3 7. \u8fed\u4ee34-6\u7684\u8fc7\u7a0b \u00b6 \u76f4\u5230\u65e7\u805a\u7c7b\u4e2d\u5fc3\u4e0e\u65b0\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb\u5c0f\u4e8e\u4e00\u5b9a\u9608\u503c\u6216\u8005\u8fbe\u5230\u4e00\u5b9a\u8fed\u4ee3\u6b21\u6570\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u5f53\u8fed\u4ee3\u6b21\u6570\u5230\u8fbe \\(10\\) \uff0c\u7b97\u6cd5\u80fd\u591f\u8fbe\u5230\u6536\u655b \u50cf\u7d20\u5316\u751f\u6210\uff1a\u805a\u7c7b\u4f18\u5316 \u00b6 \u8fed\u4ee3\u5230\u6700\u540e\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e0e\u805a\u7c7b\u4e2d\u5fc3\u4e0d\u5c5e\u4e8e\u540c\u4e00\u8fde\u901a\u57df\u7684\u5b64\u7acb\u50cf\u7d20\u70b9 \u5728SLIC\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u5c06\u5176\u89c6\u4e3a\u9700\u8981\u8fdb\u884c\u5f3a\u5236\u8fde\u901a\u7684\u53bb\u7a7a\u6d1e\u4efb\u52a1\uff0c\u53ef\u4ee5\u4f7f\u7528\u5230\u8fde\u901a\u7b97\u6cd5\u5c06\u5176\u5206\u914d\u5230\u6700\u8fd1\u7684\u805a\u7c7b\u6807\u7b7e \u5728\u672c\u6587\u4e2d\uff0c\u7531\u4e8e\u5e94\u7528\u573a\u666f\u662f\u56fe\u7247\u50cf\u7d20\u5316\uff0c\u4f1a\u5bf9\u50cf\u7d20\u8fdb\u884c\u4e0b\u53d6\u6837\uff0c\u5e76\u4e0d\u4f1a\u7ec6\u5316\u5230\u6bcf\u4e2a\u50cf\u7d20\uff0c\u56e0\u6b64\u4e0d\u505a\u805a\u7c7b\u4f18\u5316\u5904\u7406 \u5728\u5bf9\u56fe\u7247\u8fdb\u884cSLIC\u5206\u5272\u540e\uff0c\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u6bcf\u4e2a\u50cf\u7d20\u5bf9\u5e94\u7684\u8d85\u50cf\u7d20\u6807\u8bb0\uff0c\u8bbe\u5b9a\u4e00\u5b9a\u6b65\u957f stride \uff0c\u6bcf\u9694 stride \u4e2a\u50cf\u7d20\uff0c\u5c06\u50cf\u7d20\u8d4b\u503c\u4e3a\u5176\u805a\u7c7b\u4e2d\u5fc3\u7684\u989c\u8272\uff0c\u5373\u5f97\u5230\u6700\u7ec8\u7684\u50cf\u7d20\u5316\u7ed3\u679c \u9879\u76ee\u90e8\u7f72\uff1a\u56fe\u7247\u50cf\u7d20\u5316\u98ce\u683c\u751f\u6210\u5668 \u00b6 \u5e94\u7528\u90e8\u7f72\u5728 Github \uff0c\u76f8\u5173\u53c2\u6570\u5982\u4e0b\uff1a \u8fed\u4ee3\u6b21\u6570 iters \uff1b iters \u8d8a\u5927\uff0c\u5206\u5272\u7ed3\u679c\u66f4\u7cbe\u51c6\uff0c\u8ba1\u7b97\u65f6\u95f4\u8d8a\u957f \u8d85\u50cf\u7d20\u70b9\u5927\u5c0f blocksize \uff1b blocksize \u8d8a\u5c0f\uff0c\u8d85\u50cf\u7d20\u70b9\u5206\u5272\u8d8a\u7ec6\u817b \u53d6\u50cf\u7d20\u70b9\u6b65\u957f stride \uff1b stride \u8d8a\u5c0f\uff0c\u751f\u6210\u7684\u50cf\u7d20\u56fe\u8d8a\u63a5\u8fd1\u8d85\u50cf\u7d20\u70b9\uff0c\u4e5f\u5c31\u8d8a\u7ec6\u817b \u989c\u8272\u7a7a\u95f4\u6743\u91cd weight \uff1b weight \u8d8a\u5927\uff0c\u989c\u8272\u5bf9\u4e8e\u5206\u5272\u7ed3\u679c\u7684\u5f71\u54cd\u8d8a\u5927 Ren, Malik. Learning a classification model for segmentation[C]. international conference on computer vision, 2003: 10-17. \u21a9 Achanta R, Shaji A, Smith K, et al. SLIC superpixels compared to state-of-the-art superpixel methods[J]. IEEE transactions on pattern analysis and machine intelligence, 2012, 34(11): 2274-2282 \u21a9","title":"SLIC Pixelation"},{"location":"ai/ch2_1/#slic","text":"\u5b9e\u73b0\u8d85\u50cf\u7d20\u9886\u57df\u7ecf\u5178\u7b97\u6cd5SLIC\uff0c\u9879\u76ee\u5df2\u653e\u81f3 Github","title":"SLIC\u7b97\u6cd5 &amp; \u50cf\u7d20\u7f8e\u672f\u7d20\u6750\u751f\u6210"},{"location":"ai/ch2_1/#superpixel","text":"\u8d85\u50cf\u7d20\u662f 2003 \u5e74 Xiaofeng Ren 1 \u63d0\u51fa\u548c\u53d1\u5c55\u8d77\u6765\u7684\u56fe\u50cf\u5206\u5272\u6280\u672f\uff0c\u662f\u6307\u5177\u6709\u76f8\u4f3c\u7eb9\u7406\u3001\u989c\u8272\u3001\u4eae\u5ea6\u7b49\u7279\u5f81\u7684\u76f8\u90bb\u50cf\u7d20\u6784\u6210\u7684\u6709\u4e00\u5b9a\u89c6\u89c9\u610f\u4e49\u7684\u4e0d\u89c4\u5219\u50cf\u7d20\u5757 \u5b83\u5229\u7528\u50cf\u7d20\u4e4b\u95f4\u7279\u5f81\u7684\u76f8\u4f3c\u6027\u5c06\u50cf\u7d20\u5206\u7ec4\uff0c\u7528\u5c11\u91cf\u7684\u8d85\u50cf\u7d20\u4ee3\u66ff\u5927\u91cf\u7684\u50cf\u7d20\u6765\u8868\u8fbe\u56fe\u7247\u7279\u5f81\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u964d\u4f4e\u4e86\u56fe\u50cf\u540e\u5904\u7406\u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u901a\u5e38\u4f5c\u4e3a\u5206\u5272\u7b97\u6cd5\u7684\u9884\u5904\u7406\u6b65\u9aa4","title":"\u8d85\u50cf\u7d20\uff08SuperPixel\uff09"},{"location":"ai/ch2_1/#slic_1","text":"\u8d85\u50cf\u7d20\u70b9\u5206\u5272\u7684\u65b9\u6cd5\u5305\u62ec\u4e86\u63d0\u53d6\u8f6e\u5ed3\u3001\u805a\u7c7b\u3001\u68af\u5ea6\u4e0a\u5347\u7b49\u591a\u79cd SLIC 2 \u662f\u57fa\u4e8eK-means\u805a\u7c7b\u7684\u8d85\u50cf\u7d20\u5206\u5272\u7b97\u6cd5\uff0c\u5177\u6709\u7b80\u5355\u7075\u6d3b\u3001\u6548\u679c\u597d\u3001\u5904\u7406\u901f\u5ea6\u5feb\u7b49\u4f18\u52bf","title":"\u7b80\u5355\u7ebf\u6027\u8fed\u4ee3\u805a\u7c7b\uff08SLIC\uff09"},{"location":"ai/ch2_1/#1","text":"\u5c06\u56fe\u50cf\u4ece RGB \u989c\u8272\u7a7a\u95f4\u8f6c\u6362\u5230 CIE-Lab \u989c\u8272\u7a7a\u95f4\uff0cLab \u989c\u8272\u7a7a\u95f4\u66f4\u7b26\u5408\u4eba\u7c7b\u5bf9\u989c\u8272\u7684\u89c6\u89c9\u611f\u77e5\u3002\u8fd9\u4e2a\u7a7a\u95f4\u91cc\u7684\u8ddd\u79bb\u80fd\u53cd\u6620\u4eba\u611f\u89c9\u5230\u7684\u989c\u8272\u5dee\u522b\uff0c\u76f8\u5173\u8ba1\u7b97\u66f4\u4e3a\u51c6\u786e","title":"1. \u56fe\u50cf\u9884\u5904\u7406"},{"location":"ai/ch2_1/#2","text":"\u6839\u636e\u53c2\u6570\u786e\u5b9a\u8d85\u50cf\u7d20\u7684\u6570\u76ee\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5212\u5206\u4e3a\u591a\u5c11\u4e2a\u533a\u57df\u3002\u5047\u8bbe\u56fe\u7247\u6709 \\(N\\) \u4e2a\u50cf\u7d20\u70b9\uff0c\u9884\u8ba1\u5206\u5272\u4e3a \\(K\\) \u4e2a\u8d85\u50cf\u7d20\uff0c\u6bcf\u4e2a\u8d85\u50cf\u7d20\u5927\u5c0f\u4e3a \\(N/K\\) \uff0c\u76f8\u90bb\u4e2d\u5fc3\u8ddd\u79bb\u4e3a \\(S=Sqr(N/K)\\) \uff0c\u5f97\u5230 \\(K\\) \u4e2a\u805a\u7c7b\u5750\u6807","title":"2. \u521d\u59cb\u5316\u805a\u7c7b\u4e2d\u5fc3"},{"location":"ai/ch2_1/#3","text":"\u805a\u7c7b\u4e2d\u5fc3\u7684 \\(3\\times3\\) \u90bb\u57df\u5185\u9009\u62e9\u68af\u5ea6\u6700\u5c0f\u7684\u50cf\u7d20\u70b9\u4f5c\u4e3a\u65b0\u7684\u805a\u7c7b\u4e2d\u5fc3 \u628a\u56fe\u50cf\u770b\u6210\u4e8c\u7ef4\u79bb\u6563\u51fd\u6570\uff0c\u68af\u5ea6\u4e5f\u5c31\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u6c42\u5bfc\uff0c\u5f53\u76f8\u90bb\u50cf\u7d20\u503c\u6709\u53d8\u5316\u5c31\u4f1a\u5b58\u5728\u68af\u5ea6\uff0c\u800c\u5728\u8fb9\u7f18\u4e0a\u7684\u50cf\u7d20\u70b9\u7684\u68af\u5ea6\u6700\u5927\u3002\u5c06\u805a\u7c7b\u4e2d\u5fc3\u632a\u5230\u68af\u5ea6\u6700\u5c0f\u7684\u5730\u65b9\u53ef\u4ee5\u907f\u514d\u5176\u843d\u5230\u8fb9\u7f18\u8f6e\u5ed3\u4e0a\uff0c\u5f71\u54cd\u805a\u7c7b\u6548\u679c \u79bb\u6563\u68af\u5ea6\u7684\u68af\u5ea6\u8ba1\u7b97\u8003\u8651\u5230\u8ba1\u7b97\u91cf\uff0c\u4e00\u822c\u4f1a\u7b80\u5316\u4e3a\u7528\u7edd\u5bf9\u503c\u6765\u8fd1\u4f3c\u5e73\u65b9\u548c\u5e73\u65b9\u6839\u7684\u64cd\u4f5c","title":"3. \u4f18\u5316\u521d\u59cb\u805a\u7c7b\u4e2d\u5fc3"},{"location":"ai/ch2_1/#4","text":"\u5728\u805a\u7c7b\u4e2d\u5fc3\u8ddd\u79bbS\u7684\u533a\u57df\u5185 \\(2S\\times2S\\) \u7684\u90bb\u57df\u5185\u8ba1\u7b97\u50cf\u7d20\u70b9\u4e0e\u6bcf\u4e2a\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb \u4f7f\u7528\u7684\u662f\u6b27\u5f0f\u8ddd\u79bb\uff0c\u603b\u8ddd\u79bb \\(D\\) \u7531 \\(d_c\\) \u989c\u8272\u8ddd\u79bb\u4e0e \\(d_s\\) \u7a7a\u95f4\u8ddd\u79bb\u4e24\u90e8\u5206\u7ec4\u6210\uff1a \\[ \\begin{aligned} \\mathrm{d}_c &=\\sqrt{\\left(l_j-l_i\\right)^2+\\left(a_j-a_i\\right)^2+\\left(b_j-b_i\\right)^2} \\\\ \\mathrm{~d}_s &=\\sqrt{\\left(x_j-x_k\\right)^2+\\left(y_j-y_k\\right)^2} \\\\ D &=\\sqrt{\\left(\\frac{\\mathrm{d}_c}{N_c}\\right)^2+\\left(\\frac{\\mathrm{d}_s}{N_s}\\right)^2} \\end{aligned} \\] \u5982\u679c\u76f4\u63a5\u5c06 \\(l\\) \uff0c \\(a\\) \uff0c \\(b\\) \uff0c \\(x\\) \uff0c \\(y\\) \u62fc\u63a5\u6210\u4e00\u4e2a\u77e2\u91cf\u8ba1\u7b97\u8ddd\u79bb\uff0c\u5f53\u8d85\u50cf\u7d20\u7684\u5927\u5c0f\u53d8\u5316\u65f6\uff0c \\(x\\) \uff0c \\(y\\) \u7684\u503c\u53ef\u4ee5\u53d6\u5230\u975e\u5e38\u5927 \uff0c\u6bd4\u5982\u4e00\u5f20 \\(1000\\times1000\\) \u7684\u56fe\uff0c\u7a7a\u95f4\u8ddd\u79bb\u53ef\u4ee5\u8fbe\u5230 \\(1000\\times Sqr(2)\\) \uff0c\u800c\u989c\u8272\u8ddd\u79bb\u6700\u5927\u4ec5 \\(10\\times Sqr(2)\\) \uff0c\u5bfc\u81f4\u6700\u7ec8\u8ba1\u7b97\u5f97\u5230\u7684\u8ddd\u79bb\u503c\u4e2d\uff0c\u7a7a\u95f4\u8ddd\u79bb \\(d_s\\) \u6743\u91cd\u5360\u6bd4\u8fc7\u5927 \u6240\u4ee5\u9700\u8981\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u9664\u4ee5\u6700\u5927\u503c\u5373\u8d85\u50cf\u7d20\u70b9\u7684\u521d\u59cb\u5bbd\u5ea6 \\(S\\) \uff0c\u5c06\u503c\u6620\u5c04\u5230 \\([0,1]\\) \u800c\u989c\u8272\u7a7a\u95f4\u8ddd\u79bb\u4e5f\u4f1a\u7531\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c \\(m\\) \u6765\u8c03\u8282\u989c\u8272\u8ddd\u79bb\u4e0e\u7a7a\u95f4\u8ddd\u79bb\u7684\u5f71\u54cd\u6743\u91cd\uff0c \\(m\\) \u53d6\u503c\u8303\u56f4\u4e3a \\([1,40]\\) \\[ \\begin{aligned} D^{\\prime} &=\\sqrt{\\left(\\frac{\\mathrm{d}_c}{m}\\right)^2+\\left(\\frac{\\mathrm{d}_s}{S}\\right)^2} \\end{aligned} \\] \u5f53 \\(m\\) \u8d8a\u5927\uff0c\u989c\u8272\u7a7a\u95f4\u9664\u4ee5 \\(m\\) \u540e\u7684\u503c\u8d8a\u5c0f\uff0c\u5373\u7a7a\u95f4\u8ddd\u79bb\u7684\u6743\u91cd\u8d8a\u5927\uff0c\u751f\u6210\u7684\u50cf\u7d20\u4f1a\u66f4\u4e3a\u5f62\u72b6\u89c4\u5219\uff0c\u5f53 \\(m\\) \u8d8a\u5c0f\uff0c\u989c\u8272\u8ddd\u79bb\u6743\u91cd\u66f4\u5927\uff0c\u8d85\u50cf\u7d20\u4f1a\u5728\u8fb9\u7f18\u66f4\u4e3a\u7d27\u51d1\uff0c\u800c\u5f62\u72b6\u5927\u5c0f\u8f83\u4e3a\u4e0d\u89c4\u5219","title":"4. \u8ba1\u7b97\u50cf\u7d20\u70b9\u4e0e\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb"},{"location":"ai/ch2_1/#_1","text":"SLIC\u57fa\u4e8eK-means\uff0c\u4e3b\u8981\u505a\u4e86\u4e24\u70b9\u4f18\u5316\uff1a \u8c03\u6574\u4e86 \u641c\u7d22\u8303\u56f4 \uff0c\u7531\u5168\u5c40\u7f29\u5c0f\u4e3a \\(2S \\times 2S\\) \u7a7a\u95f4 \u8c03\u6574\u4e86 \u8ddd\u79bb\u5b9a\u4e49 \uff0c\u9009\u7528CIE-Lab\u8272\u57df\uff0c\u5e76\u5f15\u5165\u4e86\u8d85\u53c2\u6570\u4ee5\u8c03\u8282\u8272\u5f69\u8ddd\u79bb\u4e0e\u7a7a\u95f4\u8ddd\u79bb\u7684\u6743\u91cd","title":"\u603b\u7ed3"},{"location":"ai/ch2_1/#5","text":"\u6807\u8bb0\u6bcf\u4e2a\u50cf\u7d20\u70b9\u7684\u7c7b\u522b\u4e3a\u8ddd\u79bb\u5176\u6700\u5c0f\u7684\u805a\u7c7b\u4e2d\u5fc3\u7684\u7c7b\u522b","title":"5. \u50cf\u7d20\u70b9\u5206\u7c7b"},{"location":"ai/ch2_1/#6","text":"\u8ba1\u7b97\u5c5e\u4e8e\u540c\u4e00\u4e2a\u805a\u7c7b\u7684\u6240\u6709\u50cf\u7d20\u70b9\u7684\u5e73\u5747\u5411\u91cf\u503c\uff0c\u91cd\u65b0\u5f97\u5230\u805a\u7c7b\u4e2d\u5fc3","title":"6. \u91cd\u65b0\u8ba1\u7b97\u805a\u7c7b\u4e2d\u5fc3"},{"location":"ai/ch2_1/#7-4-6","text":"\u76f4\u5230\u65e7\u805a\u7c7b\u4e2d\u5fc3\u4e0e\u65b0\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb\u5c0f\u4e8e\u4e00\u5b9a\u9608\u503c\u6216\u8005\u8fbe\u5230\u4e00\u5b9a\u8fed\u4ee3\u6b21\u6570\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u5f53\u8fed\u4ee3\u6b21\u6570\u5230\u8fbe \\(10\\) \uff0c\u7b97\u6cd5\u80fd\u591f\u8fbe\u5230\u6536\u655b","title":"7. \u8fed\u4ee34-6\u7684\u8fc7\u7a0b"},{"location":"ai/ch2_1/#_2","text":"\u8fed\u4ee3\u5230\u6700\u540e\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e0e\u805a\u7c7b\u4e2d\u5fc3\u4e0d\u5c5e\u4e8e\u540c\u4e00\u8fde\u901a\u57df\u7684\u5b64\u7acb\u50cf\u7d20\u70b9 \u5728SLIC\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u5c06\u5176\u89c6\u4e3a\u9700\u8981\u8fdb\u884c\u5f3a\u5236\u8fde\u901a\u7684\u53bb\u7a7a\u6d1e\u4efb\u52a1\uff0c\u53ef\u4ee5\u4f7f\u7528\u5230\u8fde\u901a\u7b97\u6cd5\u5c06\u5176\u5206\u914d\u5230\u6700\u8fd1\u7684\u805a\u7c7b\u6807\u7b7e \u5728\u672c\u6587\u4e2d\uff0c\u7531\u4e8e\u5e94\u7528\u573a\u666f\u662f\u56fe\u7247\u50cf\u7d20\u5316\uff0c\u4f1a\u5bf9\u50cf\u7d20\u8fdb\u884c\u4e0b\u53d6\u6837\uff0c\u5e76\u4e0d\u4f1a\u7ec6\u5316\u5230\u6bcf\u4e2a\u50cf\u7d20\uff0c\u56e0\u6b64\u4e0d\u505a\u805a\u7c7b\u4f18\u5316\u5904\u7406 \u5728\u5bf9\u56fe\u7247\u8fdb\u884cSLIC\u5206\u5272\u540e\uff0c\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u6bcf\u4e2a\u50cf\u7d20\u5bf9\u5e94\u7684\u8d85\u50cf\u7d20\u6807\u8bb0\uff0c\u8bbe\u5b9a\u4e00\u5b9a\u6b65\u957f stride \uff0c\u6bcf\u9694 stride \u4e2a\u50cf\u7d20\uff0c\u5c06\u50cf\u7d20\u8d4b\u503c\u4e3a\u5176\u805a\u7c7b\u4e2d\u5fc3\u7684\u989c\u8272\uff0c\u5373\u5f97\u5230\u6700\u7ec8\u7684\u50cf\u7d20\u5316\u7ed3\u679c","title":"\u50cf\u7d20\u5316\u751f\u6210\uff1a\u805a\u7c7b\u4f18\u5316"},{"location":"ai/ch2_1/#_3","text":"\u5e94\u7528\u90e8\u7f72\u5728 Github \uff0c\u76f8\u5173\u53c2\u6570\u5982\u4e0b\uff1a \u8fed\u4ee3\u6b21\u6570 iters \uff1b iters \u8d8a\u5927\uff0c\u5206\u5272\u7ed3\u679c\u66f4\u7cbe\u51c6\uff0c\u8ba1\u7b97\u65f6\u95f4\u8d8a\u957f \u8d85\u50cf\u7d20\u70b9\u5927\u5c0f blocksize \uff1b blocksize \u8d8a\u5c0f\uff0c\u8d85\u50cf\u7d20\u70b9\u5206\u5272\u8d8a\u7ec6\u817b \u53d6\u50cf\u7d20\u70b9\u6b65\u957f stride \uff1b stride \u8d8a\u5c0f\uff0c\u751f\u6210\u7684\u50cf\u7d20\u56fe\u8d8a\u63a5\u8fd1\u8d85\u50cf\u7d20\u70b9\uff0c\u4e5f\u5c31\u8d8a\u7ec6\u817b \u989c\u8272\u7a7a\u95f4\u6743\u91cd weight \uff1b weight \u8d8a\u5927\uff0c\u989c\u8272\u5bf9\u4e8e\u5206\u5272\u7ed3\u679c\u7684\u5f71\u54cd\u8d8a\u5927 Ren, Malik. Learning a classification model for segmentation[C]. international conference on computer vision, 2003: 10-17. \u21a9 Achanta R, Shaji A, Smith K, et al. SLIC superpixels compared to state-of-the-art superpixel methods[J]. IEEE transactions on pattern analysis and machine intelligence, 2012, 34(11): 2274-2282 \u21a9","title":"\u9879\u76ee\u90e8\u7f72\uff1a\u56fe\u7247\u50cf\u7d20\u5316\u98ce\u683c\u751f\u6210\u5668"},{"location":"ai/ch2_2/","text":"Gradio & Hugging Face \u56fe\u7ed3\u6784\u53ef\u89c6\u5316\u53ca\u90e8\u7f72\u4ea4\u4e92 \u00b6 \u57fa\u4e8eHugging Face\u5e73\u53f0\u7684\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u4e0d\u4ec5\u80fd\u5c06\u4ea4\u4e92\u754c\u9762\u5f53\u505aWeb\u5e94\u7528\u5feb\u901f\u90e8\u7f72\uff0c\u751a\u81f3\u5728Hugging Face\u4e0a\u6258\u7ba1\u7684\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u66f4\u52a0\u5feb\u6377\u7684\u5d4c\u5165\u63a5\u53e3\uff0c\u8fd9\u6837\u6211\u4fbf\u80fd\u5c06\u53ef\u89c6\u5316\u4ee3\u7801\u5d4c\u5165\u5f0f\u7684\u5c55\u793a\u5728\u4e2a\u4eba\u9759\u6001\u535a\u5ba2\u4e2d\uff0c\u6548\u679c\u4e5f\u76f8\u5f53\u597d \u5c55\u793a\u5185\u5bb9 \u00b6 \u4e3a\u4e00\u4e9b\u57fa\u672c\u7f51\u7edc\u7ed3\u6784\u7684\u53ef\u89c6\u5316\uff1a \u5168\u5c40\u8026\u5408\u7f51\u7edc\uff08Globally Coupled Network\uff09 \u6700\u8fd1\u90bb\u8026\u5408\u7f51\u7edc\uff08Nearest-neighbor Coupled Network\uff09 NW\u5c0f\u4e16\u754c\u6a21\u578b \uff08Newman&Watts World\uff09 \u4ee5\u53ca\u76f8\u5173\u7684\u6027\u8d28\u8ba1\u7b97\uff1a \u5e73\u5747\u8def\u5f84\u957f\u5ea6\uff08ASL\uff09 \u5e73\u5747\u805a\u7c7b\u7cfb\u6570\uff08ACC\uff09 \u4ee3\u7801\u5b9e\u73b0 \u00b6 \u7f51\u7edc\u7ed3\u6784 \u00b6 \u91c7\u53d6\u90bb\u63a5\u77e9\u9635\u7684\u65b9\u5f0f\u8868\u793a\u4e0e\u5b58\u50a8\uff0c\u56e0\u4e3a\u8bbe\u5b9a\u4e3a\u65e0\u5411\u56fe\uff0c\u56e0\u6b64\u77e9\u9635\u4e3a\u5bf9\u79f0\u7684\u65b9\u9635 \u5e73\u5747\u8def\u5f84\u957f\u5ea6\uff08ASL\uff09 \u00b6 \u5229\u7528 Floyd \u7b97\u6cd5\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u6700\u540e\u53d6\u5e73\u5747\u503c Python def ASL ( adj_matrix ): num_nodes = adj_matrix . shape [ 0 ] dist = np . copy ( adj_matrix ) for i in range ( num_nodes ): for j in range ( num_nodes ): if dist [ i ][ j ] == 0 and i != j : dist [ i ][ j ] = float ( 'inf' ) # Floyd for k in range ( num_nodes ): for i in range ( num_nodes ): for j in range ( num_nodes ): if dist [ i ][ k ] + dist [ k ][ j ] < dist [ i ][ j ]: dist [ i ][ j ] = dist [ i ][ k ] + dist [ k ][ j ] total_shortest_path = 0 for i in range ( num_nodes ): for j in range ( num_nodes ): if dist [ i ][ j ] != 0 : total_shortest_path += dist [ i ][ j ] avg_shortest_path = total_shortest_path / ( num_nodes * ( num_nodes - 1 )) return avg_shortest_path \u5e73\u5747\u805a\u7c7b\u7cfb\u6570\uff08ACC\uff09 \u00b6 \u904d\u5386\u76f4\u63a5\u8ba1\u6570\u5f97\u51fa Python def ACC ( input_matrix ): size = input_matrix . shape [ 0 ] c = np . zeros ( size ) for i in range ( size ): node_neigh = np . where ( input_matrix [ i ] == 1 )[ 0 ] n_links = len ( node_neigh ) if n_links >= 2 : k = 0 for j in range ( n_links - 1 ): for l in range ( j + 1 , n_links ): if input_matrix [ node_neigh [ j ]][ node_neigh [ l ]] == 1 : k += 1 c [ i ] = 2.0 * k / ( n_links * ( n_links - 1 )) else : c [ i ] = 0 return np . mean ( c ) Gradio \u90e8\u7f72\u4f53\u9a8c \u00b6 \u6700\u540e\u53ef\u89c6\u5316\u91c7\u7528Gradio & Matplotlib\u5b9e\u73b0\uff0c\u5206\u522b\u5728\u4e2a\u4eba\u7ad9\u70b9\uff08Nginx\u90e8\u7f72\uff09\u4e0e\u672c\u6587\u4e0b\u65b9\uff08Hugging Face\u90e8\u7f72\u5d4c\u5165\uff09\u5b9e\u73b0\u5c55\u793a \u7531\u4e8e\u4e2a\u4eba\u7ad9\u70b9\u6682\u65e0\u57df\u540d\uff0c\u5b89\u5168\u8003\u8651\u53ea\u63d0\u4f9b\u672c\u6587\u4e0b\u65b9\u7684\u53ef\u89c6\u5316\u4f53\u9a8c","title":"\u7f51\u7edc\u7ed3\u6784\u53ef\u89c6\u5316"},{"location":"ai/ch2_2/#gradio-hugging-face","text":"\u57fa\u4e8eHugging Face\u5e73\u53f0\u7684\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u4e0d\u4ec5\u80fd\u5c06\u4ea4\u4e92\u754c\u9762\u5f53\u505aWeb\u5e94\u7528\u5feb\u901f\u90e8\u7f72\uff0c\u751a\u81f3\u5728Hugging Face\u4e0a\u6258\u7ba1\u7684\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u66f4\u52a0\u5feb\u6377\u7684\u5d4c\u5165\u63a5\u53e3\uff0c\u8fd9\u6837\u6211\u4fbf\u80fd\u5c06\u53ef\u89c6\u5316\u4ee3\u7801\u5d4c\u5165\u5f0f\u7684\u5c55\u793a\u5728\u4e2a\u4eba\u9759\u6001\u535a\u5ba2\u4e2d\uff0c\u6548\u679c\u4e5f\u76f8\u5f53\u597d","title":"Gradio &amp; Hugging Face \u56fe\u7ed3\u6784\u53ef\u89c6\u5316\u53ca\u90e8\u7f72\u4ea4\u4e92"},{"location":"ai/ch2_2/#_1","text":"\u4e3a\u4e00\u4e9b\u57fa\u672c\u7f51\u7edc\u7ed3\u6784\u7684\u53ef\u89c6\u5316\uff1a \u5168\u5c40\u8026\u5408\u7f51\u7edc\uff08Globally Coupled Network\uff09 \u6700\u8fd1\u90bb\u8026\u5408\u7f51\u7edc\uff08Nearest-neighbor Coupled Network\uff09 NW\u5c0f\u4e16\u754c\u6a21\u578b \uff08Newman&Watts World\uff09 \u4ee5\u53ca\u76f8\u5173\u7684\u6027\u8d28\u8ba1\u7b97\uff1a \u5e73\u5747\u8def\u5f84\u957f\u5ea6\uff08ASL\uff09 \u5e73\u5747\u805a\u7c7b\u7cfb\u6570\uff08ACC\uff09","title":"\u5c55\u793a\u5185\u5bb9"},{"location":"ai/ch2_2/#_2","text":"","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"ai/ch2_2/#_3","text":"\u91c7\u53d6\u90bb\u63a5\u77e9\u9635\u7684\u65b9\u5f0f\u8868\u793a\u4e0e\u5b58\u50a8\uff0c\u56e0\u4e3a\u8bbe\u5b9a\u4e3a\u65e0\u5411\u56fe\uff0c\u56e0\u6b64\u77e9\u9635\u4e3a\u5bf9\u79f0\u7684\u65b9\u9635","title":"\u7f51\u7edc\u7ed3\u6784"},{"location":"ai/ch2_2/#asl","text":"\u5229\u7528 Floyd \u7b97\u6cd5\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u6700\u540e\u53d6\u5e73\u5747\u503c Python def ASL ( adj_matrix ): num_nodes = adj_matrix . shape [ 0 ] dist = np . copy ( adj_matrix ) for i in range ( num_nodes ): for j in range ( num_nodes ): if dist [ i ][ j ] == 0 and i != j : dist [ i ][ j ] = float ( 'inf' ) # Floyd for k in range ( num_nodes ): for i in range ( num_nodes ): for j in range ( num_nodes ): if dist [ i ][ k ] + dist [ k ][ j ] < dist [ i ][ j ]: dist [ i ][ j ] = dist [ i ][ k ] + dist [ k ][ j ] total_shortest_path = 0 for i in range ( num_nodes ): for j in range ( num_nodes ): if dist [ i ][ j ] != 0 : total_shortest_path += dist [ i ][ j ] avg_shortest_path = total_shortest_path / ( num_nodes * ( num_nodes - 1 )) return avg_shortest_path","title":"\u5e73\u5747\u8def\u5f84\u957f\u5ea6\uff08ASL\uff09"},{"location":"ai/ch2_2/#acc","text":"\u904d\u5386\u76f4\u63a5\u8ba1\u6570\u5f97\u51fa Python def ACC ( input_matrix ): size = input_matrix . shape [ 0 ] c = np . zeros ( size ) for i in range ( size ): node_neigh = np . where ( input_matrix [ i ] == 1 )[ 0 ] n_links = len ( node_neigh ) if n_links >= 2 : k = 0 for j in range ( n_links - 1 ): for l in range ( j + 1 , n_links ): if input_matrix [ node_neigh [ j ]][ node_neigh [ l ]] == 1 : k += 1 c [ i ] = 2.0 * k / ( n_links * ( n_links - 1 )) else : c [ i ] = 0 return np . mean ( c )","title":"\u5e73\u5747\u805a\u7c7b\u7cfb\u6570\uff08ACC\uff09"},{"location":"ai/ch2_2/#gradio","text":"\u6700\u540e\u53ef\u89c6\u5316\u91c7\u7528Gradio & Matplotlib\u5b9e\u73b0\uff0c\u5206\u522b\u5728\u4e2a\u4eba\u7ad9\u70b9\uff08Nginx\u90e8\u7f72\uff09\u4e0e\u672c\u6587\u4e0b\u65b9\uff08Hugging Face\u90e8\u7f72\u5d4c\u5165\uff09\u5b9e\u73b0\u5c55\u793a \u7531\u4e8e\u4e2a\u4eba\u7ad9\u70b9\u6682\u65e0\u57df\u540d\uff0c\u5b89\u5168\u8003\u8651\u53ea\u63d0\u4f9b\u672c\u6587\u4e0b\u65b9\u7684\u53ef\u89c6\u5316\u4f53\u9a8c","title":"Gradio \u90e8\u7f72\u4f53\u9a8c"},{"location":"ai/ch5_1/","text":"\u53d8\u5206\u81ea\u7f16\u7801\u5668 | VAE \u00b6 \u53d8\u5206\u81ea\u7f16\u7801\u5668\uff08Variational Autoencoder\uff0cVAE\uff09 1 \u662f\u4e00\u79cd\u65e0\u76d1\u7763\u7684\u751f\u6210\u5f0f\u6a21\u578b \u7b2c\u4e00\u6b21\u63a5\u89e6\u65f6\u8fd8\u662f\u5b83\u7684\u201c\u7b80\u5316\u7248\u201d\u2014\u2014\u81ea\u52a8\u7f16\u7801\u5668\uff08Autoencoder\uff0c AE\uff09 2 \uff0c\u5f53\u65f6\u5bf9\u9690\u7a7a\u95f4\uff08latent space\uff09\u76f8\u5173\u6982\u5ff5\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u540e\u6765\u5728ML\u9009\u4fee\u8bfe\u590d\u73b0\u8bba\u6587\u65f6\u4e5f\u9009\u62e9\u4e86\u4e00\u7bc7\u5e94\u7528\u4e86latent space\u7684\u5de5\u4f5c 3 \uff0c\u5bf9\u76f8\u5173\u7684\u77e5\u8bc6\u4e5f\u66f4\u52a0\u611f\u5174\u8da3 \u9898\u5916\u8bdd \u00b6 \u4e00\u5f00\u59cb\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u8111\u5b50\u91cc\u603b\u662f\u60f3\u7740\u539f\u7406\u5982\u4f55\u5982\u4f55\uff0c\u95ee\u9898\u5982\u4f55\u5982\u4f55\uff0c\u6570\u5b66\u5206\u6790\u5982\u4f55\u5982\u4f55\u3002\u540e\u6765\u53d1\u73b0\u6ca1\u6709\u76f8\u5e94\u6570\u7406\u77e5\u8bc6\u6253\u5e95\uff0c\u5b9e\u5728\u662f\u5f88\u96be\u63a8\u8fdb\uff0c\u4f46\u786e\u786e\u5b9e\u5b9e\u53c8\u6709\u6536\u83b7\u7684\u5b9e\u611f\uff0c\u9677\u5165\u7ea0\u7ed3 \u540e\u6765\u9192\u609f\u8fc7\u6765\u4e86\uff0c\u5728\u6ca1\u6709\u57fa\u7840\u7684\u60c5\u51b5\u4e0b\uff0c\u8fc7\u6e21\u7ea0\u7ed3\u6570\u7406\u539f\u7406\uff0c\u4f18\u5316\u65b9\u6cd5\u5c5e\u4e8e\u5355\u7eaf\u81ea\u8017\uff1b\u4f46\u4ece\u673a\u5668\u5b66\u4e60\u4ee5\u53ca\u6a21\u578b\u8bbe\u8ba1\u7684\u89d2\u5ea6\uff0c\u4f9d\u65e7\u80fd\u6709\u5f88\u591a\u6536\u83b7\u53ef\u4ee5\u603b\u7ed3 \u4e8e\u662f\u4fbf\u6709\u4e86\u672c\u6587\u4e3b\u8981\u5c55\u73b0\u7684\u5185\u5bb9\uff0c\u57fa\u672c\u662f\u4e2a\u4eba\u7684\u5fc3\u5f97\u4f53\u4f1a\uff1b\u6bd5\u7adf\u4f60\u8981\u770b\u6570\u5b66\u63a8\u5bfc\uff0c\u7f51\u4e0a\u8d44\u6e90\u4e00\u5927\u5806\uff0c\u6211\u5e94\u8be5\u6709 \u81ea\u5df1\u7684\u4e1c\u897f \u624d\u884c \u4e2a\u4eba\u603b\u7ed3 \u00b6 \u603b\u89c8 \u00b6 VAE\u662f\u65e0\u76d1\u7763\u7684\u751f\u6210\u5f0f\u6a21\u578b\uff0c\u91c7\u53d6\u4e86encoder-decoder\u67b6\u6784\u3002\u5b83\u4e0e\u4e00\u4f17\u81ea\u7f16\u7801\u5668\u5de5\u4f5c\u7684\u4e0d\u540c\u5728\u4e8e\uff0cVAE\u5c06\u6837\u672c\u8f93\u5165\u6620\u5c04\u5230 \u5177\u6709\u666e\u904d\u6027\u7684\u5206\u5e03 \u4e0a\uff08\u5982\u6b63\u6001\u5206\u5e03\uff09\u800c\u975e\u81ea\u7f16\u7801\u5668\u5c06\u6837\u672c\u8f93\u5165\u6620\u5c04\u5230 \u4f4e\u7ef4\u5ea6\u7684\u5411\u91cf\u7a7a\u95f4 \u4e0a\uff0c\u8fd9\u610f\u5473\u7740VAE\u7684\u9690\u7a7a\u95f4\u7ef4\u5ea6\u751a\u81f3\u80fd\u6bd4\u8f93\u5165\u6837\u672c\u7ef4\u5ea6\u66f4\u9ad8 \u6a21\u578b \u00b6 encoder\u4e0edecoder\u5c42\u5927\u90e8\u5206\u60c5\u51b5\u90fd\u662f\u57fa\u4e8eDNN\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u96be\u4ee5\u5efa\u6a21 \u5728\u9690\u7a7a\u95f4\u5c42\uff0c\u56e0\u4e3aVAE\u5f15\u5165\u4e86\u8d77\u5230\u6b63\u5219\u5316\u4f5c\u7528\u7684KL\u6563\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u4eceencoder\u5c42\u7684\u7ed3\u679c\u4e2d\u663e\u5f0f\u201c\u8868\u73b0\u201d\u51fa\u80fd\u591f\u8868\u793a\u9690\u7a7a\u95f4\u5206\u5e03\u7684\u7279\u5f81\u91cf\uff0c\u5728VAE\u5047\u8bbe\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u60c5\u5f62\u4e0b\uff0c\u4fbf\u662f\u5747\u503c \\(\\mu\\) \u4e0e\u65b9\u5dee \\(\\sigma^2\\) \u5982\u679c\u9690\u7a7a\u95f4\u7ef4\u5ea6\u4e3a \\(d\\) \uff0c\u5c06\u5f97\u5230 \\(d\\) \u4e2a\u9690\u5206\u5e03\uff0c\u5373 \\(d\\) \u5bf9\u7279\u5f81\u91cf\uff1a \\[ \\{(\\mu_1,\\sigma^2_1),(\\mu_2,\\sigma^2_2),\u00b7\u00b7\u00b7,(\\mu_d,\\sigma^2_d)\\} \\] \u4e3a\u6b64VAE\u76f4\u63a5\u5c06encoder\u5c42\u8bbe\u8ba1\u4e3a\u540c\u6b65\u7684\u4e24\u5c42\uff1a\u5747\u503c\u5c42\u4e0e\u65b9\u5dee\u5c42\u3002\u7528\u4ee5\u5206\u522b\u8ba1\u7b97\u5747\u503c\u4e0e\u65b9\u5dee\uff0c\u5e76\u901a\u8fc7KL\u6563\u5ea6\u8fdb\u884c\u7ea6\u675f \u4f46\u8fd9\u53c8\u5e26\u6765\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u8ba9\u73b0\u6709\u7684encoder\u5c42\u7ed3\u679c\u53c2\u4e0e\u540e\u7eed\u7684\u91cd\u5efa\u8fc7\u7a0b\uff08decoder\u5c42\uff09\u5462\uff1f VAE\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5f88\u795e\u5947\u7684\u64cd\u4f5c\uff0c\u5728\u8bba\u6587\u4e2d\u88ab\u79f0\u4f5c\u201c\u91cd\u53c2\u6570\u6280\u5de7\uff08reparameterization trick\uff09\u201d\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6a21\u62df\u91c7\u6837\uff1a\u4ece \\(\\mathcal{N}(\\mu, \\sigma^2)\\) \u4e2d\u91c7\u6837\u4e00\u4e2a \\(Z\\) \uff0c\u7b49\u540c\u4e8e\u4ece \\(\\mathcal{N}(0, I)\\) \u4e2d\u91c7\u6837\u4e00\u4e2a \\(\\epsilon\\) \uff0c\u5e76\u4f7f \\(Z=\\mu + \\sigma \\times \\epsilon\\) \u4e8e\u662f\u9690\u53d8\u91cf \\(Z\\) \u5f97\u5230\uff0c\u6211\u4eec\u4fbf\u80fd\u9001\u5165decoder\u5c42\u8fdb\u884c\u91cd\u5efa\u8fc7\u7a0b\u4e86 \u7b56\u7565 \u00b6 VAE\u7684\u7b56\u7565\u5f88\u76f4\u89c2\uff0c\u4e3b\u8981\u4e3a\u4e24\u70b9\uff1a \u4f20\u7edfAE\u76ee\u6807\uff1a\u91cd\u5efa\u6837\u672c\u6570\u636e\uff0c\u5f15\u5165\u91cd\u6784\u635f\u5931 \u8ba9\u9690\u7a7a\u95f4\u5206\u5e03\u66f4\u5177\u666e\u904d\u6027\uff1a\u5047\u8bbe\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u5f15\u5165KL\u6563\u5ea6 \u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u9700\u8981\u5355\u72ec\u8bbe\u8ba1\u5e76\u884c\u7684\u5747\u503c\u5c42\u4e0e\u65b9\u5dee\u5c42\uff0c\u56e0\u4e3a\u5fc5\u987b\u663e\u5f0f\u5b9a\u4e49\u5e76\u8ba1\u7b97KL\u6563\u5ea6 \u5176\u5b9e\u4ee5\u66f4\u5bbd\u6cdb\u7684\u89c6\u89d2\u6765\u770b\uff0c\u5f15\u5165KL\u6563\u5ea6\u7b49\u540c\u4e8e\u5bf9\u9690\u7a7a\u95f4\u53d8\u91cf\u5206\u5e03\u8fdb\u884c\u6b63\u5219\uff0c\u5982\u679c\u9690\u7a7a\u95f4\u5206\u5e03\u771f\u6709\u67d0\u79cd\u201c\u6a21\u5f0f\u201d\u53ef\u4ee5\u5b66\u4e60\uff0c\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8bbe\u8ba1\u5176\u4ed6\u7684\u7b56\u7565\u5bf9\u5176\u8fdb\u884c\u7ea6\u675f\uff0c\u751a\u81f3\uff0c\u52a8\u6001\u66f4\u65b0\u8fd9\u79cd\u7ea6\u675f\u7b56\u7565\uff1f \u4ee3\u7801\u5b9e\u73b0 \u00b6 \u8fd9\u91cc\u7ed9\u51fa \u82cf\u795e\u7684\u4ee3\u7801 \uff0c\u57fa\u4e8ekeras\uff1a \u611f\u89c9keras\u6bd4pytorch\u597d\u7528\uff08\u788e\u788e\u5ff5 Python from __future__ import print_function import numpy as np import matplotlib.pyplot as plt from scipy.stats import norm from keras.layers import Input , Dense , Lambda from keras.models import Model from keras import backend as K from keras.datasets import mnist batch_size = 100 original_dim = 784 latent_dim = 2 # \u9690\u53d8\u91cf\u53d62\u7ef4\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u540e\u9762\u753b\u56fe intermediate_dim = 256 epochs = 50 # \u52a0\u8f7dMNIST\u6570\u636e\u96c6 ( x_train , y_train_ ), ( x_test , y_test_ ) = mnist . load_data () x_train = x_train . astype ( 'float32' ) / 255. x_test = x_test . astype ( 'float32' ) / 255. x_train = x_train . reshape (( len ( x_train ), np . prod ( x_train . shape [ 1 :]))) x_test = x_test . reshape (( len ( x_test ), np . prod ( x_test . shape [ 1 :]))) x = Input ( shape = ( original_dim ,)) h = Dense ( intermediate_dim , activation = 'relu' )( x ) # \u7b97p(Z|X)\u7684\u5747\u503c\u548c\u65b9\u5dee z_mean = Dense ( latent_dim )( h ) z_log_var = Dense ( latent_dim )( h ) # \u91cd\u53c2\u6570\u6280\u5de7 def sampling ( args ): z_mean , z_log_var = args epsilon = K . random_normal ( shape = K . shape ( z_mean )) return z_mean + K . exp ( z_log_var / 2 ) * epsilon # \u91cd\u53c2\u6570\u5c42\uff0c\u76f8\u5f53\u4e8e\u7ed9\u8f93\u5165\u52a0\u5165\u566a\u58f0 z = Lambda ( sampling , output_shape = ( latent_dim ,))([ z_mean , z_log_var ]) # \u89e3\u7801\u5c42\uff0c\u4e5f\u5c31\u662f\u751f\u6210\u5668\u90e8\u5206 decoder_h = Dense ( intermediate_dim , activation = 'relu' ) decoder_mean = Dense ( original_dim , activation = 'sigmoid' ) h_decoded = decoder_h ( z ) x_decoded_mean = decoder_mean ( h_decoded ) # \u5efa\u7acb\u6a21\u578b vae = Model ( x , x_decoded_mean ) # xent_loss\u662f\u91cd\u6784loss\uff0ckl_loss\u662fKL loss xent_loss = K . sum ( K . binary_crossentropy ( x , x_decoded_mean ), axis =- 1 ) kl_loss = - 0.5 * K . sum ( 1 + z_log_var - K . square ( z_mean ) - K . exp ( z_log_var ), axis =- 1 ) vae_loss = K . mean ( xent_loss + kl_loss ) # add_loss\u662f\u65b0\u589e\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u66f4\u7075\u6d3b\u5730\u6dfb\u52a0\u5404\u79cdloss vae . add_loss ( vae_loss ) vae . compile ( optimizer = 'rmsprop' ) vae . summary () vae . fit ( x_train , shuffle = True , epochs = epochs , batch_size = batch_size , validation_data = ( x_test , None )) # \u6784\u5efaencoder\uff0c\u7136\u540e\u89c2\u5bdf\u5404\u4e2a\u6570\u5b57\u5728\u9690\u7a7a\u95f4\u7684\u5206\u5e03 encoder = Model ( x , z_mean ) x_test_encoded = encoder . predict ( x_test , batch_size = batch_size ) plt . figure ( figsize = ( 6 , 6 )) plt . scatter ( x_test_encoded [:, 0 ], x_test_encoded [:, 1 ], c = y_test_ ) plt . colorbar () plt . show () # \u6784\u5efa\u751f\u6210\u5668 decoder_input = Input ( shape = ( latent_dim ,)) _h_decoded = decoder_h ( decoder_input ) _x_decoded_mean = decoder_mean ( _h_decoded ) generator = Model ( decoder_input , _x_decoded_mean ) # \u89c2\u5bdf\u9690\u53d8\u91cf\u7684\u4e24\u4e2a\u7ef4\u5ea6\u53d8\u5316\u662f\u5982\u4f55\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u7684 n = 15 # figure with 15x15 digits digit_size = 28 figure = np . zeros (( digit_size * n , digit_size * n )) #\u7528\u6b63\u6001\u5206\u5e03\u7684\u5206\u4f4d\u6570\u6765\u6784\u5efa\u9690\u53d8\u91cf\u5bf9 grid_x = norm . ppf ( np . linspace ( 0.05 , 0.95 , n )) grid_y = norm . ppf ( np . linspace ( 0.05 , 0.95 , n )) for i , yi in enumerate ( grid_x ): for j , xi in enumerate ( grid_y ): z_sample = np . array ([[ xi , yi ]]) x_decoded = generator . predict ( z_sample ) digit = x_decoded [ 0 ] . reshape ( digit_size , digit_size ) figure [ i * digit_size : ( i + 1 ) * digit_size , j * digit_size : ( j + 1 ) * digit_size ] = digit plt . figure ( figsize = ( 10 , 10 )) plt . imshow ( figure , cmap = 'Greys_r' ) plt . show () Kingma D P, Welling M. Auto-encoding variational bayes[J]. arXiv preprint arXiv:1312.6114, 2013. \u21a9 Hinton G E, Salakhutdinov R R. Reducing the dimensionality of data with neural networks[J]. science, 2006, 313(5786): 504-507. \u21a9 Yeh C K, Wu W C, Ko W J, et al. Learning deep latent space for multi-label classification[C]//Proceedings of the AAAI conference on artificial intelligence. 2017, 31(1). \u21a9","title":"\u53d8\u5206\u81ea\u7f16\u7801\u5668|VAE"},{"location":"ai/ch5_1/#vae","text":"\u53d8\u5206\u81ea\u7f16\u7801\u5668\uff08Variational Autoencoder\uff0cVAE\uff09 1 \u662f\u4e00\u79cd\u65e0\u76d1\u7763\u7684\u751f\u6210\u5f0f\u6a21\u578b \u7b2c\u4e00\u6b21\u63a5\u89e6\u65f6\u8fd8\u662f\u5b83\u7684\u201c\u7b80\u5316\u7248\u201d\u2014\u2014\u81ea\u52a8\u7f16\u7801\u5668\uff08Autoencoder\uff0c AE\uff09 2 \uff0c\u5f53\u65f6\u5bf9\u9690\u7a7a\u95f4\uff08latent space\uff09\u76f8\u5173\u6982\u5ff5\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u540e\u6765\u5728ML\u9009\u4fee\u8bfe\u590d\u73b0\u8bba\u6587\u65f6\u4e5f\u9009\u62e9\u4e86\u4e00\u7bc7\u5e94\u7528\u4e86latent space\u7684\u5de5\u4f5c 3 \uff0c\u5bf9\u76f8\u5173\u7684\u77e5\u8bc6\u4e5f\u66f4\u52a0\u611f\u5174\u8da3","title":"\u53d8\u5206\u81ea\u7f16\u7801\u5668 | VAE"},{"location":"ai/ch5_1/#_1","text":"\u4e00\u5f00\u59cb\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u8111\u5b50\u91cc\u603b\u662f\u60f3\u7740\u539f\u7406\u5982\u4f55\u5982\u4f55\uff0c\u95ee\u9898\u5982\u4f55\u5982\u4f55\uff0c\u6570\u5b66\u5206\u6790\u5982\u4f55\u5982\u4f55\u3002\u540e\u6765\u53d1\u73b0\u6ca1\u6709\u76f8\u5e94\u6570\u7406\u77e5\u8bc6\u6253\u5e95\uff0c\u5b9e\u5728\u662f\u5f88\u96be\u63a8\u8fdb\uff0c\u4f46\u786e\u786e\u5b9e\u5b9e\u53c8\u6709\u6536\u83b7\u7684\u5b9e\u611f\uff0c\u9677\u5165\u7ea0\u7ed3 \u540e\u6765\u9192\u609f\u8fc7\u6765\u4e86\uff0c\u5728\u6ca1\u6709\u57fa\u7840\u7684\u60c5\u51b5\u4e0b\uff0c\u8fc7\u6e21\u7ea0\u7ed3\u6570\u7406\u539f\u7406\uff0c\u4f18\u5316\u65b9\u6cd5\u5c5e\u4e8e\u5355\u7eaf\u81ea\u8017\uff1b\u4f46\u4ece\u673a\u5668\u5b66\u4e60\u4ee5\u53ca\u6a21\u578b\u8bbe\u8ba1\u7684\u89d2\u5ea6\uff0c\u4f9d\u65e7\u80fd\u6709\u5f88\u591a\u6536\u83b7\u53ef\u4ee5\u603b\u7ed3 \u4e8e\u662f\u4fbf\u6709\u4e86\u672c\u6587\u4e3b\u8981\u5c55\u73b0\u7684\u5185\u5bb9\uff0c\u57fa\u672c\u662f\u4e2a\u4eba\u7684\u5fc3\u5f97\u4f53\u4f1a\uff1b\u6bd5\u7adf\u4f60\u8981\u770b\u6570\u5b66\u63a8\u5bfc\uff0c\u7f51\u4e0a\u8d44\u6e90\u4e00\u5927\u5806\uff0c\u6211\u5e94\u8be5\u6709 \u81ea\u5df1\u7684\u4e1c\u897f \u624d\u884c","title":"\u9898\u5916\u8bdd"},{"location":"ai/ch5_1/#_2","text":"","title":"\u4e2a\u4eba\u603b\u7ed3"},{"location":"ai/ch5_1/#_3","text":"VAE\u662f\u65e0\u76d1\u7763\u7684\u751f\u6210\u5f0f\u6a21\u578b\uff0c\u91c7\u53d6\u4e86encoder-decoder\u67b6\u6784\u3002\u5b83\u4e0e\u4e00\u4f17\u81ea\u7f16\u7801\u5668\u5de5\u4f5c\u7684\u4e0d\u540c\u5728\u4e8e\uff0cVAE\u5c06\u6837\u672c\u8f93\u5165\u6620\u5c04\u5230 \u5177\u6709\u666e\u904d\u6027\u7684\u5206\u5e03 \u4e0a\uff08\u5982\u6b63\u6001\u5206\u5e03\uff09\u800c\u975e\u81ea\u7f16\u7801\u5668\u5c06\u6837\u672c\u8f93\u5165\u6620\u5c04\u5230 \u4f4e\u7ef4\u5ea6\u7684\u5411\u91cf\u7a7a\u95f4 \u4e0a\uff0c\u8fd9\u610f\u5473\u7740VAE\u7684\u9690\u7a7a\u95f4\u7ef4\u5ea6\u751a\u81f3\u80fd\u6bd4\u8f93\u5165\u6837\u672c\u7ef4\u5ea6\u66f4\u9ad8","title":"\u603b\u89c8"},{"location":"ai/ch5_1/#_4","text":"encoder\u4e0edecoder\u5c42\u5927\u90e8\u5206\u60c5\u51b5\u90fd\u662f\u57fa\u4e8eDNN\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u96be\u4ee5\u5efa\u6a21 \u5728\u9690\u7a7a\u95f4\u5c42\uff0c\u56e0\u4e3aVAE\u5f15\u5165\u4e86\u8d77\u5230\u6b63\u5219\u5316\u4f5c\u7528\u7684KL\u6563\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u4eceencoder\u5c42\u7684\u7ed3\u679c\u4e2d\u663e\u5f0f\u201c\u8868\u73b0\u201d\u51fa\u80fd\u591f\u8868\u793a\u9690\u7a7a\u95f4\u5206\u5e03\u7684\u7279\u5f81\u91cf\uff0c\u5728VAE\u5047\u8bbe\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u60c5\u5f62\u4e0b\uff0c\u4fbf\u662f\u5747\u503c \\(\\mu\\) \u4e0e\u65b9\u5dee \\(\\sigma^2\\) \u5982\u679c\u9690\u7a7a\u95f4\u7ef4\u5ea6\u4e3a \\(d\\) \uff0c\u5c06\u5f97\u5230 \\(d\\) \u4e2a\u9690\u5206\u5e03\uff0c\u5373 \\(d\\) \u5bf9\u7279\u5f81\u91cf\uff1a \\[ \\{(\\mu_1,\\sigma^2_1),(\\mu_2,\\sigma^2_2),\u00b7\u00b7\u00b7,(\\mu_d,\\sigma^2_d)\\} \\] \u4e3a\u6b64VAE\u76f4\u63a5\u5c06encoder\u5c42\u8bbe\u8ba1\u4e3a\u540c\u6b65\u7684\u4e24\u5c42\uff1a\u5747\u503c\u5c42\u4e0e\u65b9\u5dee\u5c42\u3002\u7528\u4ee5\u5206\u522b\u8ba1\u7b97\u5747\u503c\u4e0e\u65b9\u5dee\uff0c\u5e76\u901a\u8fc7KL\u6563\u5ea6\u8fdb\u884c\u7ea6\u675f \u4f46\u8fd9\u53c8\u5e26\u6765\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u8ba9\u73b0\u6709\u7684encoder\u5c42\u7ed3\u679c\u53c2\u4e0e\u540e\u7eed\u7684\u91cd\u5efa\u8fc7\u7a0b\uff08decoder\u5c42\uff09\u5462\uff1f VAE\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5f88\u795e\u5947\u7684\u64cd\u4f5c\uff0c\u5728\u8bba\u6587\u4e2d\u88ab\u79f0\u4f5c\u201c\u91cd\u53c2\u6570\u6280\u5de7\uff08reparameterization trick\uff09\u201d\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6a21\u62df\u91c7\u6837\uff1a\u4ece \\(\\mathcal{N}(\\mu, \\sigma^2)\\) \u4e2d\u91c7\u6837\u4e00\u4e2a \\(Z\\) \uff0c\u7b49\u540c\u4e8e\u4ece \\(\\mathcal{N}(0, I)\\) \u4e2d\u91c7\u6837\u4e00\u4e2a \\(\\epsilon\\) \uff0c\u5e76\u4f7f \\(Z=\\mu + \\sigma \\times \\epsilon\\) \u4e8e\u662f\u9690\u53d8\u91cf \\(Z\\) \u5f97\u5230\uff0c\u6211\u4eec\u4fbf\u80fd\u9001\u5165decoder\u5c42\u8fdb\u884c\u91cd\u5efa\u8fc7\u7a0b\u4e86","title":"\u6a21\u578b"},{"location":"ai/ch5_1/#_5","text":"VAE\u7684\u7b56\u7565\u5f88\u76f4\u89c2\uff0c\u4e3b\u8981\u4e3a\u4e24\u70b9\uff1a \u4f20\u7edfAE\u76ee\u6807\uff1a\u91cd\u5efa\u6837\u672c\u6570\u636e\uff0c\u5f15\u5165\u91cd\u6784\u635f\u5931 \u8ba9\u9690\u7a7a\u95f4\u5206\u5e03\u66f4\u5177\u666e\u904d\u6027\uff1a\u5047\u8bbe\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u5f15\u5165KL\u6563\u5ea6 \u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u9700\u8981\u5355\u72ec\u8bbe\u8ba1\u5e76\u884c\u7684\u5747\u503c\u5c42\u4e0e\u65b9\u5dee\u5c42\uff0c\u56e0\u4e3a\u5fc5\u987b\u663e\u5f0f\u5b9a\u4e49\u5e76\u8ba1\u7b97KL\u6563\u5ea6 \u5176\u5b9e\u4ee5\u66f4\u5bbd\u6cdb\u7684\u89c6\u89d2\u6765\u770b\uff0c\u5f15\u5165KL\u6563\u5ea6\u7b49\u540c\u4e8e\u5bf9\u9690\u7a7a\u95f4\u53d8\u91cf\u5206\u5e03\u8fdb\u884c\u6b63\u5219\uff0c\u5982\u679c\u9690\u7a7a\u95f4\u5206\u5e03\u771f\u6709\u67d0\u79cd\u201c\u6a21\u5f0f\u201d\u53ef\u4ee5\u5b66\u4e60\uff0c\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8bbe\u8ba1\u5176\u4ed6\u7684\u7b56\u7565\u5bf9\u5176\u8fdb\u884c\u7ea6\u675f\uff0c\u751a\u81f3\uff0c\u52a8\u6001\u66f4\u65b0\u8fd9\u79cd\u7ea6\u675f\u7b56\u7565\uff1f","title":"\u7b56\u7565"},{"location":"ai/ch5_1/#_6","text":"\u8fd9\u91cc\u7ed9\u51fa \u82cf\u795e\u7684\u4ee3\u7801 \uff0c\u57fa\u4e8ekeras\uff1a \u611f\u89c9keras\u6bd4pytorch\u597d\u7528\uff08\u788e\u788e\u5ff5 Python from __future__ import print_function import numpy as np import matplotlib.pyplot as plt from scipy.stats import norm from keras.layers import Input , Dense , Lambda from keras.models import Model from keras import backend as K from keras.datasets import mnist batch_size = 100 original_dim = 784 latent_dim = 2 # \u9690\u53d8\u91cf\u53d62\u7ef4\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u540e\u9762\u753b\u56fe intermediate_dim = 256 epochs = 50 # \u52a0\u8f7dMNIST\u6570\u636e\u96c6 ( x_train , y_train_ ), ( x_test , y_test_ ) = mnist . load_data () x_train = x_train . astype ( 'float32' ) / 255. x_test = x_test . astype ( 'float32' ) / 255. x_train = x_train . reshape (( len ( x_train ), np . prod ( x_train . shape [ 1 :]))) x_test = x_test . reshape (( len ( x_test ), np . prod ( x_test . shape [ 1 :]))) x = Input ( shape = ( original_dim ,)) h = Dense ( intermediate_dim , activation = 'relu' )( x ) # \u7b97p(Z|X)\u7684\u5747\u503c\u548c\u65b9\u5dee z_mean = Dense ( latent_dim )( h ) z_log_var = Dense ( latent_dim )( h ) # \u91cd\u53c2\u6570\u6280\u5de7 def sampling ( args ): z_mean , z_log_var = args epsilon = K . random_normal ( shape = K . shape ( z_mean )) return z_mean + K . exp ( z_log_var / 2 ) * epsilon # \u91cd\u53c2\u6570\u5c42\uff0c\u76f8\u5f53\u4e8e\u7ed9\u8f93\u5165\u52a0\u5165\u566a\u58f0 z = Lambda ( sampling , output_shape = ( latent_dim ,))([ z_mean , z_log_var ]) # \u89e3\u7801\u5c42\uff0c\u4e5f\u5c31\u662f\u751f\u6210\u5668\u90e8\u5206 decoder_h = Dense ( intermediate_dim , activation = 'relu' ) decoder_mean = Dense ( original_dim , activation = 'sigmoid' ) h_decoded = decoder_h ( z ) x_decoded_mean = decoder_mean ( h_decoded ) # \u5efa\u7acb\u6a21\u578b vae = Model ( x , x_decoded_mean ) # xent_loss\u662f\u91cd\u6784loss\uff0ckl_loss\u662fKL loss xent_loss = K . sum ( K . binary_crossentropy ( x , x_decoded_mean ), axis =- 1 ) kl_loss = - 0.5 * K . sum ( 1 + z_log_var - K . square ( z_mean ) - K . exp ( z_log_var ), axis =- 1 ) vae_loss = K . mean ( xent_loss + kl_loss ) # add_loss\u662f\u65b0\u589e\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u66f4\u7075\u6d3b\u5730\u6dfb\u52a0\u5404\u79cdloss vae . add_loss ( vae_loss ) vae . compile ( optimizer = 'rmsprop' ) vae . summary () vae . fit ( x_train , shuffle = True , epochs = epochs , batch_size = batch_size , validation_data = ( x_test , None )) # \u6784\u5efaencoder\uff0c\u7136\u540e\u89c2\u5bdf\u5404\u4e2a\u6570\u5b57\u5728\u9690\u7a7a\u95f4\u7684\u5206\u5e03 encoder = Model ( x , z_mean ) x_test_encoded = encoder . predict ( x_test , batch_size = batch_size ) plt . figure ( figsize = ( 6 , 6 )) plt . scatter ( x_test_encoded [:, 0 ], x_test_encoded [:, 1 ], c = y_test_ ) plt . colorbar () plt . show () # \u6784\u5efa\u751f\u6210\u5668 decoder_input = Input ( shape = ( latent_dim ,)) _h_decoded = decoder_h ( decoder_input ) _x_decoded_mean = decoder_mean ( _h_decoded ) generator = Model ( decoder_input , _x_decoded_mean ) # \u89c2\u5bdf\u9690\u53d8\u91cf\u7684\u4e24\u4e2a\u7ef4\u5ea6\u53d8\u5316\u662f\u5982\u4f55\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u7684 n = 15 # figure with 15x15 digits digit_size = 28 figure = np . zeros (( digit_size * n , digit_size * n )) #\u7528\u6b63\u6001\u5206\u5e03\u7684\u5206\u4f4d\u6570\u6765\u6784\u5efa\u9690\u53d8\u91cf\u5bf9 grid_x = norm . ppf ( np . linspace ( 0.05 , 0.95 , n )) grid_y = norm . ppf ( np . linspace ( 0.05 , 0.95 , n )) for i , yi in enumerate ( grid_x ): for j , xi in enumerate ( grid_y ): z_sample = np . array ([[ xi , yi ]]) x_decoded = generator . predict ( z_sample ) digit = x_decoded [ 0 ] . reshape ( digit_size , digit_size ) figure [ i * digit_size : ( i + 1 ) * digit_size , j * digit_size : ( j + 1 ) * digit_size ] = digit plt . figure ( figsize = ( 10 , 10 )) plt . imshow ( figure , cmap = 'Greys_r' ) plt . show () Kingma D P, Welling M. Auto-encoding variational bayes[J]. arXiv preprint arXiv:1312.6114, 2013. \u21a9 Hinton G E, Salakhutdinov R R. Reducing the dimensionality of data with neural networks[J]. science, 2006, 313(5786): 504-507. \u21a9 Yeh C K, Wu W C, Ko W J, et al. Learning deep latent space for multi-label classification[C]//Proceedings of the AAAI conference on artificial intelligence. 2017, 31(1). \u21a9","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"ctf/ch1/","text":"\u4e71\u6570\u5047\u6587 & LSB\u9690\u5199 \u00b6 \u4e71\u6570\u5047\u6587\uff08Lorem ipsum\uff09 \u00b6 \u5bf9 lvl8 \u6587\u4ef6\u8fdb\u884cfile\u5206\u6790\uff0c\u53d1\u73b0\u662f\u4e00\u4e2a\u6587\u672c\u5185\u5bb9\u6587\u4ef6\uff1a \u53d1\u73b0\u5f62\u5f0f\u4e0a\u5f88\u50cf\u4e71\u6570\u5047\u6587 \u200b Lorem ipsum\uff0c\u4e2d\u6587\u53c8\u79f0\u201c\u4e71\u6570\u5047\u6587\u201d\uff0c \u662f\u6307\u4e00\u7bc7\u5e38\u7528\u4e8e\u6392\u7248\u8bbe\u8ba1\u9886\u57df\u7684\u62c9\u4e01\u6587\u6587\u7ae0\u3002\u76ee\u7684\u662f\u8ba9\u9605\u8bfb\u8005\u4e0d\u8981\u88ab\u6587\u7ae0\u5185\u5bb9\u6240\u5f71\u54cd\uff0c\u800c\u53ea\u4e13\u6ce8\u4e8e\u89c2\u5bdf\u5b57\u578b\u6216\u7248\u578b\uff0c\u5e76\u501f\u6b64\u586b\u6ee1\u7a7a\u95f4\u3002 \u4f46\u662f\u660e\u663e\u4e0d\u7b26\u5408\u6b63\u5e38\u7684\u5927\u5c0f\u5199\u547d\u540d \u6211\u4eec\u5408\u7406\u731c\u6d4b\u5e94\u8be5\u662f\u5c06\u76ee\u6807\u5185\u5bb9\u52a0\u5bc6\u5728\u4e86\u6587\u672c\u5f53\u4e2d \u6211\u4eec\u5047\u8bbe\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f\u4f7f\u7528\u5b57\u7b26\u5927\u5c0f\u5199\u7f16\u7801\u7684\uff0c\u4e3a\u6b64\u6211\u4eec\u5ffd\u7565\u6240\u6709\u5176\u4ed6\u5b57\u7b26\uff0c\u5982\u6807\u70b9\u7b26\u53f7\u3001\u7a7a\u683c\u3001\u6362\u884c\u7b26\u7b49\uff0c\u5c06\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a1\uff0c\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a0 \u5728\u7f16\u5199python\u811a\u672c\u8fdb\u884c\u8f6c\u6362\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u6587\u4ef6\u5f00\u5934ASCII\u7801\u4e3a\uff1a \u5b83\u867d\u7136\u4e0d\u662fELF\u6267\u884c\u6587\u4ef6\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u80fd\u5f97\u77e5\u8fd9\u662f\u4e00\u5f20\u4f4d\u56fe\u5f00\u5934\u6807\u8bc6\u7b26\uff0c\u6211\u4eec\u5c06\u5176\u4ee5\u56fe\u5f62\u5f0f\u6253\u5f00 \u4f4d\u56fe\u6587\u4ef6 \u00b6 \u8f6c\u6362\u540e\uff0c\u6211\u4eec\u5f97\u5230\u8be5\u56fe\uff1a \u5728\u591a\u65b9\u9762\u5c1d\u8bd5\u540e\uff08\u4f8b\u5982\u56fe\u7247\u5bbd\u9ad8\u3001\u6587\u4ef6\u683c\u5f0f\u3001\u5185\u5bb9\u7f16\u7801\u7b49\uff09\uff0c\u4ecd\u6ca1\u6709\u660e\u663e\u53ef\u7591\u5730\u65b9\u540e\uff0c\u6211\u4eec\u5c1d\u8bd5\u5229\u7528\u8f83\u4e3a\u5168\u9762\u7684\u56fe\u7247\u5206\u6790\u5de5\u5177ImageMagick\u8fdb\u884c\u68c0\u6d4b\uff1a \u5229\u7528 identify -verbose level8.bmp \u547d\u4ee4\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u53ef\u7591\u7684\u5730\u65b9 \u8868\u793a\u989c\u8272\u79cd\u7c7b\u6570\u591a\u8fbe42\u79cd\uff0c\u4f46\u4ece\u56fe\u4e2d\u5f88\u660e\u663e\u5e76\u6ca1\u6709\u8fd9\u4e48\u591a\uff0c\u901a\u8fc7\u8c03\u8282\u5bf9\u6bd4\u5ea6\u4e0e\u4eae\u5ea6\u540e \u53ef\u4ee5\u770b\u5230\u56fe\u7247\u4e0b\u65b9\u91c7\u53d6\u4e86\u7591\u4f3cLSB\u9690\u5199\u7684\u6280\u672f \u9690\u5199\u672f \u00b6 \u5728\u56fe\u50cf\u6587\u4ef6\u4e2d\u9690\u85cf\u6570\u636e\u7684\u4e00\u79cd\u5e38\u89c1\u800c\u7b80\u5355\u7684\u9690\u5199\u6280\u672f \u901a\u8fc7\u7a0d\u5fae\u4fee\u6539\u56fe\u50cf\u50cf\u7d20\u7684RGB\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5d4c\u5165\u8981\u9690\u85cf\u7684\u6570\u636e\uff1a\u5c06\u60f3\u8981\u9690\u85cf\u7684\u6570\u636e\u4f4d\u8986\u76d6\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u901a\u9053\u7684\u6700\u4f4e\u6709\u6548\u4f4d\uff0c\u79f0\u4e3aLSB\u9690\u5199 \u4f8b\u5982\u5728\u8be5\u56fe\u4e2d\u6211\u4eec\u4ec5\u6539\u53d8\u4e86G\u901a\u9053\u4e0a\u7684LSB\uff0c\u5bf9\u989c\u8272\u7684\u6539\u53d8\u4e5f\u4ec5\u4ec5\u7531 #6490F1 \u53d8\u4e3a\u4e86 #6491F1\uff0c\u4ece\u8089\u773c\u4e0a\u662f\u96be\u4ee5\u533a\u5206\u7684\uff0c\u4f46\u7406\u8bba\u4e0a\u4e00\u5f20 W \\(\\times\\) H \u7684\u4f4d\u56fe\u80fd\u63d0\u4f9b\u6700\u5927 W \\(\\times\\) H \\(\\times\\) 3\\8 \u5b57\u8282\u7684\u9690\u5199\u7a7a\u95f4 \u5229\u7528\u5e38\u89c1\u7684LSB\u9690\u5199\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u6d4bbmp\u662f\u5426\u7ecf\u8fc7\u5e38\u89c1\u7684LSB\u52a0\u5bc6\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528zsteg\uff1a \u53ef\u4ee5\u770b\u5230\u5728b1\u4f4d\u4e0a\u7ecf\u8fc7LSB\u89e3\u5bc6\u68c0\u6d4b\u5230ELF\u7684\u6587\u4ef6\u6807\u8bc6\u7b26\uff0c\u8bf4\u660e\u8fd9\u6781\u6709\u53ef\u80fd\u662f\u88ab\u52a0\u5bc6\u9690\u85cf\u7684\u6587\u4ef6 \u6211\u4eec\u5229\u7528zsteg\u8fdb\u884c\u63d0\u53d6\uff1a \u901a\u8fc7file\u5de5\u5177\u53ef\u4ee5\u786e\u8ba4\u8fd9\u662f\u9700\u8981\u5f97\u5230\u7684\u9690\u5199ELF\u6587\u4ef6","title":"\u4e71\u6570\u5047\u6587&LSB\u9690\u5199"},{"location":"ctf/ch1/#lsb","text":"","title":"\u4e71\u6570\u5047\u6587 &amp; LSB\u9690\u5199"},{"location":"ctf/ch1/#lorem-ipsum","text":"\u5bf9 lvl8 \u6587\u4ef6\u8fdb\u884cfile\u5206\u6790\uff0c\u53d1\u73b0\u662f\u4e00\u4e2a\u6587\u672c\u5185\u5bb9\u6587\u4ef6\uff1a \u53d1\u73b0\u5f62\u5f0f\u4e0a\u5f88\u50cf\u4e71\u6570\u5047\u6587 \u200b Lorem ipsum\uff0c\u4e2d\u6587\u53c8\u79f0\u201c\u4e71\u6570\u5047\u6587\u201d\uff0c \u662f\u6307\u4e00\u7bc7\u5e38\u7528\u4e8e\u6392\u7248\u8bbe\u8ba1\u9886\u57df\u7684\u62c9\u4e01\u6587\u6587\u7ae0\u3002\u76ee\u7684\u662f\u8ba9\u9605\u8bfb\u8005\u4e0d\u8981\u88ab\u6587\u7ae0\u5185\u5bb9\u6240\u5f71\u54cd\uff0c\u800c\u53ea\u4e13\u6ce8\u4e8e\u89c2\u5bdf\u5b57\u578b\u6216\u7248\u578b\uff0c\u5e76\u501f\u6b64\u586b\u6ee1\u7a7a\u95f4\u3002 \u4f46\u662f\u660e\u663e\u4e0d\u7b26\u5408\u6b63\u5e38\u7684\u5927\u5c0f\u5199\u547d\u540d \u6211\u4eec\u5408\u7406\u731c\u6d4b\u5e94\u8be5\u662f\u5c06\u76ee\u6807\u5185\u5bb9\u52a0\u5bc6\u5728\u4e86\u6587\u672c\u5f53\u4e2d \u6211\u4eec\u5047\u8bbe\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f\u4f7f\u7528\u5b57\u7b26\u5927\u5c0f\u5199\u7f16\u7801\u7684\uff0c\u4e3a\u6b64\u6211\u4eec\u5ffd\u7565\u6240\u6709\u5176\u4ed6\u5b57\u7b26\uff0c\u5982\u6807\u70b9\u7b26\u53f7\u3001\u7a7a\u683c\u3001\u6362\u884c\u7b26\u7b49\uff0c\u5c06\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a1\uff0c\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a0 \u5728\u7f16\u5199python\u811a\u672c\u8fdb\u884c\u8f6c\u6362\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u6587\u4ef6\u5f00\u5934ASCII\u7801\u4e3a\uff1a \u5b83\u867d\u7136\u4e0d\u662fELF\u6267\u884c\u6587\u4ef6\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u80fd\u5f97\u77e5\u8fd9\u662f\u4e00\u5f20\u4f4d\u56fe\u5f00\u5934\u6807\u8bc6\u7b26\uff0c\u6211\u4eec\u5c06\u5176\u4ee5\u56fe\u5f62\u5f0f\u6253\u5f00","title":"\u4e71\u6570\u5047\u6587\uff08Lorem ipsum\uff09"},{"location":"ctf/ch1/#_1","text":"\u8f6c\u6362\u540e\uff0c\u6211\u4eec\u5f97\u5230\u8be5\u56fe\uff1a \u5728\u591a\u65b9\u9762\u5c1d\u8bd5\u540e\uff08\u4f8b\u5982\u56fe\u7247\u5bbd\u9ad8\u3001\u6587\u4ef6\u683c\u5f0f\u3001\u5185\u5bb9\u7f16\u7801\u7b49\uff09\uff0c\u4ecd\u6ca1\u6709\u660e\u663e\u53ef\u7591\u5730\u65b9\u540e\uff0c\u6211\u4eec\u5c1d\u8bd5\u5229\u7528\u8f83\u4e3a\u5168\u9762\u7684\u56fe\u7247\u5206\u6790\u5de5\u5177ImageMagick\u8fdb\u884c\u68c0\u6d4b\uff1a \u5229\u7528 identify -verbose level8.bmp \u547d\u4ee4\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u53ef\u7591\u7684\u5730\u65b9 \u8868\u793a\u989c\u8272\u79cd\u7c7b\u6570\u591a\u8fbe42\u79cd\uff0c\u4f46\u4ece\u56fe\u4e2d\u5f88\u660e\u663e\u5e76\u6ca1\u6709\u8fd9\u4e48\u591a\uff0c\u901a\u8fc7\u8c03\u8282\u5bf9\u6bd4\u5ea6\u4e0e\u4eae\u5ea6\u540e \u53ef\u4ee5\u770b\u5230\u56fe\u7247\u4e0b\u65b9\u91c7\u53d6\u4e86\u7591\u4f3cLSB\u9690\u5199\u7684\u6280\u672f","title":"\u4f4d\u56fe\u6587\u4ef6"},{"location":"ctf/ch1/#_2","text":"\u5728\u56fe\u50cf\u6587\u4ef6\u4e2d\u9690\u85cf\u6570\u636e\u7684\u4e00\u79cd\u5e38\u89c1\u800c\u7b80\u5355\u7684\u9690\u5199\u6280\u672f \u901a\u8fc7\u7a0d\u5fae\u4fee\u6539\u56fe\u50cf\u50cf\u7d20\u7684RGB\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5d4c\u5165\u8981\u9690\u85cf\u7684\u6570\u636e\uff1a\u5c06\u60f3\u8981\u9690\u85cf\u7684\u6570\u636e\u4f4d\u8986\u76d6\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u901a\u9053\u7684\u6700\u4f4e\u6709\u6548\u4f4d\uff0c\u79f0\u4e3aLSB\u9690\u5199 \u4f8b\u5982\u5728\u8be5\u56fe\u4e2d\u6211\u4eec\u4ec5\u6539\u53d8\u4e86G\u901a\u9053\u4e0a\u7684LSB\uff0c\u5bf9\u989c\u8272\u7684\u6539\u53d8\u4e5f\u4ec5\u4ec5\u7531 #6490F1 \u53d8\u4e3a\u4e86 #6491F1\uff0c\u4ece\u8089\u773c\u4e0a\u662f\u96be\u4ee5\u533a\u5206\u7684\uff0c\u4f46\u7406\u8bba\u4e0a\u4e00\u5f20 W \\(\\times\\) H \u7684\u4f4d\u56fe\u80fd\u63d0\u4f9b\u6700\u5927 W \\(\\times\\) H \\(\\times\\) 3\\8 \u5b57\u8282\u7684\u9690\u5199\u7a7a\u95f4 \u5229\u7528\u5e38\u89c1\u7684LSB\u9690\u5199\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u6d4bbmp\u662f\u5426\u7ecf\u8fc7\u5e38\u89c1\u7684LSB\u52a0\u5bc6\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528zsteg\uff1a \u53ef\u4ee5\u770b\u5230\u5728b1\u4f4d\u4e0a\u7ecf\u8fc7LSB\u89e3\u5bc6\u68c0\u6d4b\u5230ELF\u7684\u6587\u4ef6\u6807\u8bc6\u7b26\uff0c\u8bf4\u660e\u8fd9\u6781\u6709\u53ef\u80fd\u662f\u88ab\u52a0\u5bc6\u9690\u85cf\u7684\u6587\u4ef6 \u6211\u4eec\u5229\u7528zsteg\u8fdb\u884c\u63d0\u53d6\uff1a \u901a\u8fc7file\u5de5\u5177\u53ef\u4ee5\u786e\u8ba4\u8fd9\u662f\u9700\u8981\u5f97\u5230\u7684\u9690\u5199ELF\u6587\u4ef6","title":"\u9690\u5199\u672f"},{"location":"ctf/ch2/","text":"FGSM\u653b\u51fb \u00b6 \u8bb0\u5f55\u4e00\u6b21\u56fe\u5bf9\u6297\u653b\u51fb\uff0c\u5c1d\u8bd5\u5feb\u901f\u68af\u5ea6\u7b26\u53f7\u653b\u51fb\uff08FGSM\uff09\u8ff7\u60d1MNIST\u5206\u7c7b\u5668 \u5bf9\u6297\u6027\u653b\u51fb\uff08Adversarial Attack\uff09 \u00b6 \u7531\u4e8e\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u8f93\u5165\u5f62\u5f0f\u662f\u4e00\u79cd\u6570\u503c\u578b\u5411\u91cf\uff08numeric vectors\uff09\uff0c\u6240\u4ee5\u4fbf\u80fd\u8bbe\u8ba1\u4e00\u79cd\u6709\u9488\u5bf9\u6027\u7684\u6570\u503c\u578b\u5411\u91cf\u8ba9\u673a\u5668\u5b66\u4e60\u6a21\u578b\u505a\u51fa\u8bef\u5224\uff0c\u8fd9\u4fbf\u88ab\u79f0\u4e3a\u5bf9\u6297\u6027\u653b\u51fb \u4ece\u6837\u672c\u7684\u89d2\u5ea6\u770b\uff0c\u88ab\u4fee\u6539\u8fc7\u540e\u7684\u5177\u6709\u9488\u5bf9\u6027\u7684\u6570\u503c\u578b\u5411\u91cf\u4fbf\u662f\u5bf9\u6297\u6837\u672c \u57fa\u4e8e\u653b\u51fb\u8005\u5148\u9a8c\u77e5\u8bc6\u4e0e\u653b\u51fb\u76ee\u6807\uff0c\u53ef\u4ee5\u5c06\u5bf9\u6297\u6027\u653b\u51fb\u5206\u4e3a\u4e0d\u540c\u7c7b\u578b\uff1a \u9ed1\u76d2\u653b\u51fb\uff08black-box\uff09\uff1a\u653b\u51fb\u8005\u53ea\u80fd\u8bbf\u95ee\u6a21\u578b\u7684\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u5e76\u4e14\u5bf9\u5e95\u5c42\u67b6\u6784\u6216\u6743\u91cd\u4e00\u65e0\u6240\u77e5 \u767d\u76d2\u653b\u51fb\uff08white-box\uff09\uff1a\u653b\u51fb\u8005\u5177\u6709\u5bf9\u6a21\u578b\u7684\u5b8c\u6574\u77e5\u8bc6\u548c\u8bbf\u95ee\u6743\u9650\uff0c\u5305\u62ec\u4f53\u7cfb\u7ed3\u6784\u3001\u8f93\u5165\u3001\u8f93\u51fa\u548c\u6743\u91cd \u9519\u8bef\u5206\u7c7b\uff08misclassification\uff09\uff1a\u53ea\u5e0c\u671b\u8f93\u51fa\u5206\u7c7b\u9519\u8bef\uff0c\u800c\u4e0d\u5728\u4e4e\u65b0\u7684\u5206\u7c7b\u662f\u4ec0\u4e48 \u6e90/\u76ee\u6807\u9519\u8bef\u5206\u7c7b\uff08source/target misclassification\uff09\uff1a\u5e0c\u671b\u66f4\u6539\u6700\u521d\u5c5e\u4e8e\u7279\u5b9a\u6e90\u7c7b\u522b\u7684\u56fe\u50cf\uff0c\u4ece\u800c\u5c06\u5176\u5206\u7c7b\u4e3a\u7279\u5b9a\u76ee\u6807\u7c7b\u522b \u57fa\u4e8e\u5bf9\u6297\u653b\u51fb\u9886\u57df\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u4e5f\u80fd\u5206\u6210\u591a\u7c7b\uff0c\u8f83\u4e3a\u666e\u904d\u7684\u662f \u56fe\u5bf9\u6297\u653b\u51fb FGSM\uff08Fast Gradient Sign Attack\uff09 \u00b6 \u5feb\u901f\u68af\u5ea6\u7b26\u53f7\u653b\u51fb\uff08Fast Gradient Sign Attack\uff09 1 \u662f\u6700\u65e9\u4e14\u6700\u6d41\u884c\u7684\u5bf9\u6297\u653b\u51fb\u65b9\u5f0f\u4e4b\u4e00 FGSM\u7684\u601d\u60f3\u5341\u5206\u76f4\u89c2\u4e14\u6709\u6548\uff1a\u5229\u7528\u795e\u7ecf\u7f51\u7edc\u7684\u5b66\u4e60\u65b9\u5f0f\uff0c\u5373\u68af\u5ea6\u6765\u8fdb\u884c\u653b\u51fb\uff0c\u5229\u7528\u6a21\u578b\u7684\u53cd\u5411\u4f20\u64ad\u68af\u5ea6\uff0c\u8c03\u6574\u6837\u672c\u6570\u636e\u4ee5\u6700\u5927\u5316\u635f\u5931 \u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c \\(x\\) \u662f\u88ab\u6b63\u786e\u5206\u7c7b\u4e3a\u201cpanda\u201d\u7684\u539f\u59cb\u8f93\u5165\u56fe\u50cf\uff0c \\(y\\) \u662f \\(x\\) \u7684\u771f\u5b9e\u6807\u7b7e\uff0c \\(\\mathbf \u03b8\\) \u4ee3\u8868\u6a21\u578b\u53c2\u6570\uff0c \\(J\uff08\\mathbf\u03b8 \uff0cx\uff0cy\uff09\\) \u662f\u7528\u4e8e\u8bad\u7ec3\u7f51\u7edc\u7684\u635f\u5931\u3002\u653b\u51fb\u5c06\u68af\u5ea6\u53cd\u6295\u5f71\u5230\u8f93\u5165\u6570\u636e\uff0c\u4ee5\u8ba1\u7b97 \\(\\nabla_{x}J\uff08\\mathbf \u03b8\uff0cx\uff0cy\uff09\\) \u3002\u7136\u540e\uff0c\u5b83\u5728\u65b9\u5411\uff08\u5373 \\(\\nabla_{x}J\uff08\\mathbf \u03b8\uff0cx \uff0cy\uff09\\) \u7b26\u53f7\uff09\u4e0a\u8c03\u6574\u8f93\u5165\u6570\u636e \\(x\\) \u4e00\u5b9a\u6b65\u5e45\uff08\u03b5\u6216\u56fe\u4e2d\u76840.007\uff09\u3002\u7ed3\u679c\u5f97\u5230\u7684\u6270\u52a8\u56fe\u50cf \\(x^{\\prime}\\) \u7136\u540e\u88ab\u76ee\u6807\u7f51\u7edc\u8bef\u5206\u7c7b\u4e3a\u201cgibbon\u201d Pytorch & Keras \u4ee3\u7801\u5b9e\u73b0 \u00b6 \u6570\u636e\u96c6 \u00b6 \u5747\u91c7\u7528\u6846\u67b6\u5185\u7f6e\u63d0\u4f9b\u7684 MNIST \u624b\u5199\u6570\u5b57\u6570\u636e\u96c6 \u6a21\u578b \u00b6 Torch \u5bfc\u5165\u4fee\u6539\u540e\u7684\u9884\u8bad\u7ec3 LeNet \u6a21\u578b\uff1bTensorFlow \u76f4\u63a5\u8bad\u7ec3\u5f97\u5230 LeNet \u6a21\u578b \u5b9e\u73b0 \u00b6 Torch TensorFlow Python import torch import torch.nn as nn import torch.nn.functional as F import torch.optim as optim from torchvision import datasets , transforms import numpy as np import matplotlib.pyplot as plt # configuration epsilons = [ 0 , .05 , .1 , .15 , .2 , .25 , .3 ] pretrained_model = \"./lenet_mnist_model.pth.pt\" use_cuda = False device = torch . device ( \"cuda\" if use_cuda and torch . cuda . is_available () else \"cpu\" ) # Model under Attack class Net ( nn . Module ): def __init__ ( self ): super ( Net , self ) . __init__ () self . conv1 = nn . Conv2d ( 1 , 32 , 3 , 1 ) self . conv2 = nn . Conv2d ( 32 , 64 , 3 , 1 ) self . dropout1 = nn . Dropout ( 0.25 ) self . dropout2 = nn . Dropout ( 0.5 ) self . fc1 = nn . Linear ( 9216 , 128 ) self . fc2 = nn . Linear ( 128 , 10 ) def forward ( self , x ): x = self . conv1 ( x ) x = F . relu ( x ) x = self . conv2 ( x ) x = F . relu ( x ) x = F . max_pool2d ( x , 2 ) x = self . dropout1 ( x ) x = torch . flatten ( x , 1 ) x = self . fc1 ( x ) x = F . relu ( x ) x = self . dropout2 ( x ) x = self . fc2 ( x ) output = F . log_softmax ( x , dim = 1 ) return output # Sample Datas for FGSM MNIST_datasets = datasets . MNIST ( './data' , train = False , transform = transforms . Compose ([ transforms . ToTensor ()])) MNIST_loader = torch . utils . data . DataLoader ( MNIST_datasets , batch_size = 256 , shuffle = True ) for item in MNIST_loader : datas = item [ 0 ] targets = item [ 1 ] break # FGSM Attack datas . requires_grad = True model = Net () . to ( device ) model . load_state_dict ( torch . load ( './lenet_mnist_model.pth.pt' , map_location = device )) model . eval () outs = model ( datas . to ( device )) loss = F . nll_loss ( outs , targets ) datas_grad = datas_grad [ 0 ] perturbed_datas = datas + epsilons [ 1 ] * datas_grad . sign () # Test after Drawing One Epsilon model ( datas ) . argmax ( axis = 1 ) == model ( perturbed_datas ) . argmax ( axis = 1 ) ex = datas [ 17 ] . squeeze () . detach () . numpy () target = targets [ 17 ] . numpy () adv = perturbed_datas [ 17 ] . squeeze () . detach () . numpy () adv_target = model ( perturbed_datas ) . argmax ( axis = 1 )[ 17 ] . numpy () plt . figure ( figsize = ( 8 , 10 )) plt . subplot ( 1 , 2 , 1 ) plt . title ( f 'Label: { target } ' ) plt . xticks ([],[]) plt . yticks ([],[]) plt . imshow ( ex , cmap = 'gray' ) plt . subplot ( 1 , 2 , 2 ) plt . title ( f 'Attack: { adv_target } ' ) plt . xticks ([],[]) plt . yticks ([],[]) plt . imshow ( adv , cmap = 'gray' ) # plt.tight_layout() Python import tensorflow as tf from tensorflow import keras import numpy as np from keras import layers import matplotlib.pyplot as plt # Mix-Precision Boost tf . config . list_physical_devices ( 'GPU' ) tf . keras . mixed_precision . set_global_policy ( \"mixed_float16\" ) # Configuration epsilon = [ 0 , .1 , .15 , .2 , .25 , .30 , .35 ] ( train_images , train_labels ), ( test_images , test_labels ) = keras . datasets . mnist . load_data () train_images = train_images . astype ( \"float32\" ) / 255 test_images = test_images . astype ( \"float32\" ) / 255 train_images = train_images . reshape (( * train_images . shape , 1 )) test_images = test_images . reshape (( * test_images . shape , 1 )) # Model under Attack input = keras . Input (( 28 , 28 , 1 )) x = layers . Conv2D ( 32 , 3 , strides = 1 , activation = 'relu' )( input ) x = layers . Conv2D ( 64 , 3 , strides = 1 , activation = 'relu' )( x ) x = layers . MaxPooling2D ( 2 )( x ) x = layers . Dropout ( 0.25 )( x ) x = layers . Flatten ()( x ) x = layers . Dense ( 128 , activation = 'relu' )( x ) x = layers . Dropout ( 0.5 )( x ) output = layers . Dense ( 10 , activation = 'softmax' )( x ) model = keras . Model ( inputs = input , outputs = output ) # Here We Have No Pre-trained Models So Train One model . compile ( optimizer = \"rmsprop\" , loss = \"sparse_categorical_crossentropy\" , metrics = [ \"accuracy\" ]) model . fit ( train_images , train_labels , epochs = 20 , batch_size = 128 , validation_split = 0.2 ) # Sample Datas for FGSM datas = tf . constant ( test_images [: 256 ]) targets = tf . constant ( test_labels [: 256 ] . astype ( 'float16' )) # FGSM Attack with tf . GradientTape () as tape : tape . watch ( datas ) tape . watch ( targets ) outs = model ( datas ) sparse_crossentropy_loss = tf . losses . SparseCategoricalCrossentropy () loss = sparse_crossentropy_loss ( targets , outs ) datas_grad = tape . gradient ( loss , datas ) perturbed_datas = datas + epsilon [ 1 ] * tf . sign ( datas_grad ) # Test after Drawing One Epsilon model ( perturbed_datas ) . numpy () . argmax ( axis = 1 ) == model ( datas ) . numpy () . argmax ( axis = 1 ) ex = tf . squeeze ( datas [ 6 ]) . numpy () target = targets [ 6 ] . numpy () . astype ( 'int' ) adv = tf . squeeze ( perturbed_datas [ 6 ]) . numpy () adv_target = model ( perturbed_datas ) . numpy () . argmax ( axis = 1 )[ 6 ] plt . figure ( figsize = ( 8 , 10 )) plt . subplot ( 1 , 2 , 1 ) plt . title ( f 'Label: { target } ' ) plt . xticks ([],[]) plt . yticks ([],[]) plt . imshow ( ex , cmap = 'binary' ) plt . subplot ( 1 , 2 , 2 ) plt . title ( f 'Attack: { adv_target } ' ) plt . xticks ([],[]) plt . yticks ([],[]) plt . imshow ( adv , cmap = 'binary' ) \u653b\u51fb\u5c55\u793a\uff08TensorFlow\uff09 \u00b6 Goodfellow I J, Shlens J, Szegedy C. Explaining and harnessing adversarial examples[J]. arXiv preprint arXiv:1412.6572, 2014 \u21a9","title":"FGSM\u653b\u51fb"},{"location":"ctf/ch2/#fgsm","text":"\u8bb0\u5f55\u4e00\u6b21\u56fe\u5bf9\u6297\u653b\u51fb\uff0c\u5c1d\u8bd5\u5feb\u901f\u68af\u5ea6\u7b26\u53f7\u653b\u51fb\uff08FGSM\uff09\u8ff7\u60d1MNIST\u5206\u7c7b\u5668","title":"FGSM\u653b\u51fb"},{"location":"ctf/ch2/#adversarial-attack","text":"\u7531\u4e8e\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u8f93\u5165\u5f62\u5f0f\u662f\u4e00\u79cd\u6570\u503c\u578b\u5411\u91cf\uff08numeric vectors\uff09\uff0c\u6240\u4ee5\u4fbf\u80fd\u8bbe\u8ba1\u4e00\u79cd\u6709\u9488\u5bf9\u6027\u7684\u6570\u503c\u578b\u5411\u91cf\u8ba9\u673a\u5668\u5b66\u4e60\u6a21\u578b\u505a\u51fa\u8bef\u5224\uff0c\u8fd9\u4fbf\u88ab\u79f0\u4e3a\u5bf9\u6297\u6027\u653b\u51fb \u4ece\u6837\u672c\u7684\u89d2\u5ea6\u770b\uff0c\u88ab\u4fee\u6539\u8fc7\u540e\u7684\u5177\u6709\u9488\u5bf9\u6027\u7684\u6570\u503c\u578b\u5411\u91cf\u4fbf\u662f\u5bf9\u6297\u6837\u672c \u57fa\u4e8e\u653b\u51fb\u8005\u5148\u9a8c\u77e5\u8bc6\u4e0e\u653b\u51fb\u76ee\u6807\uff0c\u53ef\u4ee5\u5c06\u5bf9\u6297\u6027\u653b\u51fb\u5206\u4e3a\u4e0d\u540c\u7c7b\u578b\uff1a \u9ed1\u76d2\u653b\u51fb\uff08black-box\uff09\uff1a\u653b\u51fb\u8005\u53ea\u80fd\u8bbf\u95ee\u6a21\u578b\u7684\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u5e76\u4e14\u5bf9\u5e95\u5c42\u67b6\u6784\u6216\u6743\u91cd\u4e00\u65e0\u6240\u77e5 \u767d\u76d2\u653b\u51fb\uff08white-box\uff09\uff1a\u653b\u51fb\u8005\u5177\u6709\u5bf9\u6a21\u578b\u7684\u5b8c\u6574\u77e5\u8bc6\u548c\u8bbf\u95ee\u6743\u9650\uff0c\u5305\u62ec\u4f53\u7cfb\u7ed3\u6784\u3001\u8f93\u5165\u3001\u8f93\u51fa\u548c\u6743\u91cd \u9519\u8bef\u5206\u7c7b\uff08misclassification\uff09\uff1a\u53ea\u5e0c\u671b\u8f93\u51fa\u5206\u7c7b\u9519\u8bef\uff0c\u800c\u4e0d\u5728\u4e4e\u65b0\u7684\u5206\u7c7b\u662f\u4ec0\u4e48 \u6e90/\u76ee\u6807\u9519\u8bef\u5206\u7c7b\uff08source/target misclassification\uff09\uff1a\u5e0c\u671b\u66f4\u6539\u6700\u521d\u5c5e\u4e8e\u7279\u5b9a\u6e90\u7c7b\u522b\u7684\u56fe\u50cf\uff0c\u4ece\u800c\u5c06\u5176\u5206\u7c7b\u4e3a\u7279\u5b9a\u76ee\u6807\u7c7b\u522b \u57fa\u4e8e\u5bf9\u6297\u653b\u51fb\u9886\u57df\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u4e5f\u80fd\u5206\u6210\u591a\u7c7b\uff0c\u8f83\u4e3a\u666e\u904d\u7684\u662f \u56fe\u5bf9\u6297\u653b\u51fb","title":"\u5bf9\u6297\u6027\u653b\u51fb\uff08Adversarial Attack\uff09"},{"location":"ctf/ch2/#fgsmfast-gradient-sign-attack","text":"\u5feb\u901f\u68af\u5ea6\u7b26\u53f7\u653b\u51fb\uff08Fast Gradient Sign Attack\uff09 1 \u662f\u6700\u65e9\u4e14\u6700\u6d41\u884c\u7684\u5bf9\u6297\u653b\u51fb\u65b9\u5f0f\u4e4b\u4e00 FGSM\u7684\u601d\u60f3\u5341\u5206\u76f4\u89c2\u4e14\u6709\u6548\uff1a\u5229\u7528\u795e\u7ecf\u7f51\u7edc\u7684\u5b66\u4e60\u65b9\u5f0f\uff0c\u5373\u68af\u5ea6\u6765\u8fdb\u884c\u653b\u51fb\uff0c\u5229\u7528\u6a21\u578b\u7684\u53cd\u5411\u4f20\u64ad\u68af\u5ea6\uff0c\u8c03\u6574\u6837\u672c\u6570\u636e\u4ee5\u6700\u5927\u5316\u635f\u5931 \u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c \\(x\\) \u662f\u88ab\u6b63\u786e\u5206\u7c7b\u4e3a\u201cpanda\u201d\u7684\u539f\u59cb\u8f93\u5165\u56fe\u50cf\uff0c \\(y\\) \u662f \\(x\\) \u7684\u771f\u5b9e\u6807\u7b7e\uff0c \\(\\mathbf \u03b8\\) \u4ee3\u8868\u6a21\u578b\u53c2\u6570\uff0c \\(J\uff08\\mathbf\u03b8 \uff0cx\uff0cy\uff09\\) \u662f\u7528\u4e8e\u8bad\u7ec3\u7f51\u7edc\u7684\u635f\u5931\u3002\u653b\u51fb\u5c06\u68af\u5ea6\u53cd\u6295\u5f71\u5230\u8f93\u5165\u6570\u636e\uff0c\u4ee5\u8ba1\u7b97 \\(\\nabla_{x}J\uff08\\mathbf \u03b8\uff0cx\uff0cy\uff09\\) \u3002\u7136\u540e\uff0c\u5b83\u5728\u65b9\u5411\uff08\u5373 \\(\\nabla_{x}J\uff08\\mathbf \u03b8\uff0cx \uff0cy\uff09\\) \u7b26\u53f7\uff09\u4e0a\u8c03\u6574\u8f93\u5165\u6570\u636e \\(x\\) \u4e00\u5b9a\u6b65\u5e45\uff08\u03b5\u6216\u56fe\u4e2d\u76840.007\uff09\u3002\u7ed3\u679c\u5f97\u5230\u7684\u6270\u52a8\u56fe\u50cf \\(x^{\\prime}\\) \u7136\u540e\u88ab\u76ee\u6807\u7f51\u7edc\u8bef\u5206\u7c7b\u4e3a\u201cgibbon\u201d","title":"FGSM\uff08Fast Gradient Sign Attack\uff09"},{"location":"ctf/ch2/#pytorch-keras","text":"","title":"Pytorch &amp; Keras \u4ee3\u7801\u5b9e\u73b0"},{"location":"ctf/ch2/#_1","text":"\u5747\u91c7\u7528\u6846\u67b6\u5185\u7f6e\u63d0\u4f9b\u7684 MNIST \u624b\u5199\u6570\u5b57\u6570\u636e\u96c6","title":"\u6570\u636e\u96c6"},{"location":"ctf/ch2/#_2","text":"Torch \u5bfc\u5165\u4fee\u6539\u540e\u7684\u9884\u8bad\u7ec3 LeNet \u6a21\u578b\uff1bTensorFlow \u76f4\u63a5\u8bad\u7ec3\u5f97\u5230 LeNet \u6a21\u578b","title":"\u6a21\u578b"},{"location":"ctf/ch2/#_3","text":"Torch TensorFlow Python import torch import torch.nn as nn import torch.nn.functional as F import torch.optim as optim from torchvision import datasets , transforms import numpy as np import matplotlib.pyplot as plt # configuration epsilons = [ 0 , .05 , .1 , .15 , .2 , .25 , .3 ] pretrained_model = \"./lenet_mnist_model.pth.pt\" use_cuda = False device = torch . device ( \"cuda\" if use_cuda and torch . cuda . is_available () else \"cpu\" ) # Model under Attack class Net ( nn . Module ): def __init__ ( self ): super ( Net , self ) . __init__ () self . conv1 = nn . Conv2d ( 1 , 32 , 3 , 1 ) self . conv2 = nn . Conv2d ( 32 , 64 , 3 , 1 ) self . dropout1 = nn . Dropout ( 0.25 ) self . dropout2 = nn . Dropout ( 0.5 ) self . fc1 = nn . Linear ( 9216 , 128 ) self . fc2 = nn . Linear ( 128 , 10 ) def forward ( self , x ): x = self . conv1 ( x ) x = F . relu ( x ) x = self . conv2 ( x ) x = F . relu ( x ) x = F . max_pool2d ( x , 2 ) x = self . dropout1 ( x ) x = torch . flatten ( x , 1 ) x = self . fc1 ( x ) x = F . relu ( x ) x = self . dropout2 ( x ) x = self . fc2 ( x ) output = F . log_softmax ( x , dim = 1 ) return output # Sample Datas for FGSM MNIST_datasets = datasets . MNIST ( './data' , train = False , transform = transforms . Compose ([ transforms . ToTensor ()])) MNIST_loader = torch . utils . data . DataLoader ( MNIST_datasets , batch_size = 256 , shuffle = True ) for item in MNIST_loader : datas = item [ 0 ] targets = item [ 1 ] break # FGSM Attack datas . requires_grad = True model = Net () . to ( device ) model . load_state_dict ( torch . load ( './lenet_mnist_model.pth.pt' , map_location = device )) model . eval () outs = model ( datas . to ( device )) loss = F . nll_loss ( outs , targets ) datas_grad = datas_grad [ 0 ] perturbed_datas = datas + epsilons [ 1 ] * datas_grad . sign () # Test after Drawing One Epsilon model ( datas ) . argmax ( axis = 1 ) == model ( perturbed_datas ) . argmax ( axis = 1 ) ex = datas [ 17 ] . squeeze () . detach () . numpy () target = targets [ 17 ] . numpy () adv = perturbed_datas [ 17 ] . squeeze () . detach () . numpy () adv_target = model ( perturbed_datas ) . argmax ( axis = 1 )[ 17 ] . numpy () plt . figure ( figsize = ( 8 , 10 )) plt . subplot ( 1 , 2 , 1 ) plt . title ( f 'Label: { target } ' ) plt . xticks ([],[]) plt . yticks ([],[]) plt . imshow ( ex , cmap = 'gray' ) plt . subplot ( 1 , 2 , 2 ) plt . title ( f 'Attack: { adv_target } ' ) plt . xticks ([],[]) plt . yticks ([],[]) plt . imshow ( adv , cmap = 'gray' ) # plt.tight_layout() Python import tensorflow as tf from tensorflow import keras import numpy as np from keras import layers import matplotlib.pyplot as plt # Mix-Precision Boost tf . config . list_physical_devices ( 'GPU' ) tf . keras . mixed_precision . set_global_policy ( \"mixed_float16\" ) # Configuration epsilon = [ 0 , .1 , .15 , .2 , .25 , .30 , .35 ] ( train_images , train_labels ), ( test_images , test_labels ) = keras . datasets . mnist . load_data () train_images = train_images . astype ( \"float32\" ) / 255 test_images = test_images . astype ( \"float32\" ) / 255 train_images = train_images . reshape (( * train_images . shape , 1 )) test_images = test_images . reshape (( * test_images . shape , 1 )) # Model under Attack input = keras . Input (( 28 , 28 , 1 )) x = layers . Conv2D ( 32 , 3 , strides = 1 , activation = 'relu' )( input ) x = layers . Conv2D ( 64 , 3 , strides = 1 , activation = 'relu' )( x ) x = layers . MaxPooling2D ( 2 )( x ) x = layers . Dropout ( 0.25 )( x ) x = layers . Flatten ()( x ) x = layers . Dense ( 128 , activation = 'relu' )( x ) x = layers . Dropout ( 0.5 )( x ) output = layers . Dense ( 10 , activation = 'softmax' )( x ) model = keras . Model ( inputs = input , outputs = output ) # Here We Have No Pre-trained Models So Train One model . compile ( optimizer = \"rmsprop\" , loss = \"sparse_categorical_crossentropy\" , metrics = [ \"accuracy\" ]) model . fit ( train_images , train_labels , epochs = 20 , batch_size = 128 , validation_split = 0.2 ) # Sample Datas for FGSM datas = tf . constant ( test_images [: 256 ]) targets = tf . constant ( test_labels [: 256 ] . astype ( 'float16' )) # FGSM Attack with tf . GradientTape () as tape : tape . watch ( datas ) tape . watch ( targets ) outs = model ( datas ) sparse_crossentropy_loss = tf . losses . SparseCategoricalCrossentropy () loss = sparse_crossentropy_loss ( targets , outs ) datas_grad = tape . gradient ( loss , datas ) perturbed_datas = datas + epsilon [ 1 ] * tf . sign ( datas_grad ) # Test after Drawing One Epsilon model ( perturbed_datas ) . numpy () . argmax ( axis = 1 ) == model ( datas ) . numpy () . argmax ( axis = 1 ) ex = tf . squeeze ( datas [ 6 ]) . numpy () target = targets [ 6 ] . numpy () . astype ( 'int' ) adv = tf . squeeze ( perturbed_datas [ 6 ]) . numpy () adv_target = model ( perturbed_datas ) . numpy () . argmax ( axis = 1 )[ 6 ] plt . figure ( figsize = ( 8 , 10 )) plt . subplot ( 1 , 2 , 1 ) plt . title ( f 'Label: { target } ' ) plt . xticks ([],[]) plt . yticks ([],[]) plt . imshow ( ex , cmap = 'binary' ) plt . subplot ( 1 , 2 , 2 ) plt . title ( f 'Attack: { adv_target } ' ) plt . xticks ([],[]) plt . yticks ([],[]) plt . imshow ( adv , cmap = 'binary' )","title":"\u5b9e\u73b0"},{"location":"ctf/ch2/#tensorflow","text":"Goodfellow I J, Shlens J, Szegedy C. Explaining and harnessing adversarial examples[J]. arXiv preprint arXiv:1412.6572, 2014 \u21a9","title":"\u653b\u51fb\u5c55\u793a\uff08TensorFlow\uff09"},{"location":"ctf/ch3/","text":"\u521d\u7b49\u6570\u8bba \u00b6 \u672c\u4eba\u975e\u6570\u5b66\u7cfb\u4e13\u4e1a\uff0c\u6b64\u7b14\u8bb0\u4ec5\u4f5c\u4e3a\u4e2a\u4eba\u8bb0\u5f55\u7528 \u6574\u9664 \u00b6 \\(a \\mid b\\) \u8868\u793a \\(a\\) \u6574\u9664 \\(b\\) \uff0c \\(a\\) \u662f \\(b\\) \u7684\u56e0\u6570\uff0c \\(b\\) \u662f \\(a\\) \u7684\u500d\u6570 \u6027\u8d28 \u00b6 0 \u662f\u6240\u6709\u975e\u96f6\u6570\u7684\u500d\u6570\uff0c\u5373 \\(b\\mid 0\\ (b\\neq 0)\\) \u4f20\u9012\u6027\uff0c \\(a\\mid b, b\\mid c\\Rightarrow a\\mid c\\) \u8d28\u6570 | \u7b97\u6570\u57fa\u672c\u5b9a\u7406 \u00b6 \u8d28\u6570 \u00b6 \u6574\u6570 \\(p > 1\\) \u662f\u8d28\u6570\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u56e0\u5b50\uff08\u56e0\u6570\uff09\u53ea\u6709 \\(\\pm 1\\) \u4e0e \\(\\pm p\\) \uff08\u901a\u5e38\u5ffd\u7565\u8d1f\u6570\uff09 \u7b97\u672f\u57fa\u672c\u5b9a\u7406 \u00b6 \u4efb\u610f\u6574\u6570 \\(a > 1\\) \u90fd\u80fd \u552f\u4e00 \u5206\u89e3\u4e3a\u4e0b\u9762\u5f62\u5f0f \\[ a = p_1^{\\alpha_1} \\times p_2^{\\alpha_2} \\times \u00b7\u00b7\u00b7 \\times p_n^{\\alpha_n} \\quad (p_1<p_2<\u00b7\u00b7\u00b7<p_n, \\ \\alpha_i \\in N) \\] \\(p_1, p_2, \u00b7\u00b7\u00b7, p_n\\) \u5747\u4e3a\u8d28\u6570 \u6700\u5927\u516c\u56e0\u6570 | \u4e92\u8d28 | \u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 \u00b6 \u6700\u5927\u516c\u56e0\u6570 \u00b6 \u6700\u5927\u516c\u56e0\u6570\u5373\u6574\u6570 \\(a\\) \u548c \\(b\\) \u6240\u5171\u6709\u7684\u6700\u5927\u56e0\u6570\uff08\u56e0\u5b50\uff09\uff0c\u8bb0\u4f5c \\(gcd(a,b)\\) \u4e92\u8d28 \u00b6 \\[ gcd(a,b)=1 \\Longleftrightarrow a,b\u4e92\u8d28 \\] \u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 \u00b6 \u6c42\u6700\u5927\u516c\u56e0\u6570\u5e38\u7528\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff08\u8f97\u8f6c\u76f8\u9664\u6cd5\uff09 \u5bf9\u4e8e\u6574\u6570 \\(a\\) \u548c \\(b\\) \u601d\u8def\u4e0a \u00b6 \u6211\u4eec\u5047\u8bbe \\(a > b\\) \uff0c\u6b64\u65f6\u88ab\u9664\u6570\u4e3a \\(a\\) \uff0c\u9664\u6570\u4e3a \\(b\\) \u3002\u5faa\u73af\u6267\u884c\u9664\u6cd5\u64cd\u4f5c\uff0c\u6bcf\u6b21\u5c06\u9664\u6570\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u64cd\u4f5c\u7684\u88ab\u9664\u6570\u3001\u4f59\u6570\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u64cd\u4f5c\u7684\u9664\u6570\uff0c\u5f53\u67d0\u6b21\u64cd\u4f5c\u4f59\u6570\u4e3a 0\uff0c\u5373\u6574\u9664\u65f6\uff0c\u505c\u6b62\u5faa\u73af\uff0c\u53d6\u8be5\u6b21\u64cd\u4f5c\u9664\u6570\u4f5c\u4e3a\u6700\u5927\u516c\u56e0\u6570 \\(gcd(a,b)\\) \u5b9e\u9645\u4f7f\u7528\u4e2d \u00b6 \u6211\u4eec\u5e38\u501f\u52a9\u4ee3\u7801\u6216\u8005\u5de5\u5177\u5e93\uff0c\u4f8b\u5982 Python def gcd ( a , b ): if b == 0 : return a return gcd ( b , a % b ) \u6a21\u8fd0\u7b97 \u00b6 \\(a\\) \u9664\u4ee5 \\(m\\) \u6240\u5f97\u7684\u4f59\u6570\u8bb0\u4f5c \\(a\\bmod m\\) \uff0c\u79f0\u4e3a\u6a21\u8fd0\u7b97 \u6a21\u8fd0\u7b97\u4e2d\u7684\u6a21\u4e3a \\bmod \u57fa\u672c\u6027\u8d28 \u00b6 \u6052\u7b49\u5f0f \u00b6 \\[ (a\\bmod n)\\bmod n = a\\bmod n \\] \u5206\u914d\u5f8b \u00b6 \\[ \\begin{aligned} (a+b)\\bmod n &= [(a\\bmod n)+(b\\bmod n)]\\bmod n \\\\ ab\\bmod n &= [(a\\bmod n)\\cdot (b\\bmod n)]\\bmod n \\end{aligned} \\] \u540c\u4f59 \u00b6 \u82e5 \\(a\\bmod m = b\\bmod m\\) \uff0c\u5373 \\(a\\) \uff0c \\(b\\) \u9664\u4ee5 \\(m\\) \u6240\u5f97\u7684\u4f59\u6570\u76f8\u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u4f5c \\[ a\\bmod m = b\\bmod m \\Longleftrightarrow a \\equiv b \\pmod{m} \\] \u540c\u4f59\u5f0f\u4e2d\u7684\u5168\u7b49\u4e3a \\equiv \uff0c\u6a21\u4e3a \\pmod{m} \u57fa\u672c\u6027\u8d28 \u00b6 \u4f20\u9012\u6027 \u00b6 \\[ a\\equiv b \\pmod{m}, b\\equiv c \\pmod{m} \\Longrightarrow a\\equiv c \\pmod{m} \\] \u57fa\u672c\u8fd0\u7b97 \u00b6 \\[ \\begin{aligned} a\\equiv b &\\pmod{m} \\\\ c\\equiv d &\\pmod{m} \\\\ &\\Downarrow \\\\ a\\pm c\\equiv b\\pm d &\\pmod{m} \\\\ ac\\equiv bd &\\pmod{m} \\end{aligned} \\] \u7b49\u91cf\u52a0\u51cf\u6cd5 \u00b6 \\[ a\\equiv b \\pmod{m} \\Longrightarrow a \\pm c\\equiv b\\pm c \\pmod{m} \\] \u7b49\u91cf\u4e58\u6cd5 \u00b6 \\[ \\begin{aligned} a\\equiv b \\pmod{m} &\\Longrightarrow ka\\equiv kb \\pmod{m},\\quad \\forall k \\in Z \\\\ a\\equiv b \\pmod{m} &\\Longrightarrow a^n\\equiv b^n \\pmod{m}, \\quad \\forall n \\in N \\\\ a\\equiv b \\pmod{m} &\\Longrightarrow P(a)\\equiv P(b) \\pmod{m},\\quad P(x)\u4e3a\u4efb\u610f\u6574\u7cfb\u6570\u591a\u9879\u5f0f \\end{aligned} \\] \u653e\u5927\u7f29\u5c0f\u5e95\u6570 \u00b6 \\[ (km\\pm a)^n\\equiv (\\pm a)^n \\pmod{m} \\quad (k \\in Z, n \\in N) \\] \u5269\u4f59\u7cfb \u00b6 \u5b8c\u5168\u5269\u4f59\u7cfb \u00b6 \u6bd4 \\(n\\) \u5c0f\u7684\u975e\u8d1f\u6570\u96c6\u5408\u4e3a \\(Z_n=\\{0,1,\u2026,(n\u22121)\\}\\) \uff0c\u79f0\u4e3a\u6a21 \\(n\\) \u7684\u5b8c\u5168\u5269\u4f59\u7cfb\uff0c\u8bb0\u4f5c \\(Z_n\\) \u7b80\u5316\u5269\u4f59\u7cfb \u00b6 \u5b8c\u5168\u5269\u4f59\u7cfb\u4e2d\u4e0e \\(n\\) \u4e92\u8d28\u7684\u5143\u7d20\u7684\u96c6\u5408\uff0c\u8bb0\u4f5c \\(Z_n^*\\) \u6b27\u62c9\u51fd\u6570 \u00b6 \u6b27\u62c9\u51fd\u6570 \\(\\varphi(x)\\) \u6307\u5c0f\u4e8e\u7b49\u4e8e \\(x\\) \u7684\u6b63\u6574\u6570\u4e2d\uff0c\u4e0e \\(x\\) \u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570 \u5373 \\(x\\) \u7684\u7b80\u5316\u5269\u4f59\u7cfb\u4e2d\u7684\u5143\u7d20\u4e2a\u6570 \u57fa\u672c\u6027\u8d28 \u00b6 \\(\\varphi(1) = 1\\) \u82e5 \\(p\\) \u4e3a\u8d28\u6570\uff0c \\(\\varphi(p) = p-1\\) \u82e5 \\(p\\) \u4e3a\u8d28\u6570\uff0c \\(\\varphi(p^{\\alpha})=p^{\\alpha} - p^{\\alpha - 1} = p^{\\alpha-1}(p-1)\\) \u82e5 \\(a\\) \u4e0e \\(b\\) \u4e92\u8d28\uff0c \\(\\varphi(ab) = \\varphi(a) \\times \\varphi(b)\\) \u7ed3\u5408\u7b97\u672f\u57fa\u672c\u5b9a\u7406\uff0c\u6211\u4eec\u6709 \\[ \\begin{aligned} n &= p_1^{k_1}p_2^{k_2}\u00b7\u00b7\u00b7p_r^{k_r} \\\\ &\\Downarrow \\\\ \\varphi(n) &= \\prod_{i=1}^rp_i^{k_{i-1}}(p_i-1) \\end{aligned} \\] \u6b27\u62c9\u5b9a\u7406 | \u8d39\u9a6c\u5c0f\u5b9a\u7406 \u00b6 \u6b27\u62c9\u5b9a\u7406 \u00b6 \u6570\u8bba\u4e2d\uff0c\u82e5\u6b63\u6574\u6570 \\(n\\) \uff0c \\(a\\) \u4e92\u8d28\uff0c\u6709 \\[ a^{\\varphi(n)} \\equiv 1 \\pmod{n} \\] \u8d39\u9a6c\u5c0f\u5b9a\u7406 \u00b6 \u82e5 \\(a\\) \u4e3a\u6574\u6570\uff0c \\(p\\) \u4e3a\u8d28\u6570\uff0c\u6709 \\[ a^p \\equiv a \\pmod{p} \\] \u5728\u6b64\u57fa\u7840\u4e0a\u82e5 \\(a\\) \uff0c \\(p\\) \u4e92\u8d28\uff0c\u6709 \\[ a^{p-1} \\equiv 1 \\pmod{p} \\] \u53ef\u4ee5\u770b\u5230\u7b26\u5408\u6b27\u62c9\u5b9a\u7406\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a \\(\\varphi(p)=p-1\\) \u5982\u679c\u6211\u4eec\u505a\u4e00\u4e2a\u53d8\u5f62 \\[ a \\cdot a^{p-2} \\equiv 1 \\pmod{p} \\] \u6211\u4eec\u53ef\u4ee5\u77e5\u9053 \\(a^{p-2}\\) \u5373\u662f \\(a\\) \u5bf9\u4e8e\u6a21 \\(p\\) \u7684\u6a21\u9006\u5143\uff0c\u4f46\u6ce8\u610f\u6210\u7acb\u6761\u4ef6","title":"\u521d\u7b49\u6570\u8bba"},{"location":"ctf/ch3/#_1","text":"\u672c\u4eba\u975e\u6570\u5b66\u7cfb\u4e13\u4e1a\uff0c\u6b64\u7b14\u8bb0\u4ec5\u4f5c\u4e3a\u4e2a\u4eba\u8bb0\u5f55\u7528","title":"\u521d\u7b49\u6570\u8bba"},{"location":"ctf/ch3/#_2","text":"\\(a \\mid b\\) \u8868\u793a \\(a\\) \u6574\u9664 \\(b\\) \uff0c \\(a\\) \u662f \\(b\\) \u7684\u56e0\u6570\uff0c \\(b\\) \u662f \\(a\\) \u7684\u500d\u6570","title":"\u6574\u9664"},{"location":"ctf/ch3/#_3","text":"0 \u662f\u6240\u6709\u975e\u96f6\u6570\u7684\u500d\u6570\uff0c\u5373 \\(b\\mid 0\\ (b\\neq 0)\\) \u4f20\u9012\u6027\uff0c \\(a\\mid b, b\\mid c\\Rightarrow a\\mid c\\)","title":"\u6027\u8d28"},{"location":"ctf/ch3/#_4","text":"","title":"\u8d28\u6570 | \u7b97\u6570\u57fa\u672c\u5b9a\u7406"},{"location":"ctf/ch3/#_5","text":"\u6574\u6570 \\(p > 1\\) \u662f\u8d28\u6570\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u56e0\u5b50\uff08\u56e0\u6570\uff09\u53ea\u6709 \\(\\pm 1\\) \u4e0e \\(\\pm p\\) \uff08\u901a\u5e38\u5ffd\u7565\u8d1f\u6570\uff09","title":"\u8d28\u6570"},{"location":"ctf/ch3/#_6","text":"\u4efb\u610f\u6574\u6570 \\(a > 1\\) \u90fd\u80fd \u552f\u4e00 \u5206\u89e3\u4e3a\u4e0b\u9762\u5f62\u5f0f \\[ a = p_1^{\\alpha_1} \\times p_2^{\\alpha_2} \\times \u00b7\u00b7\u00b7 \\times p_n^{\\alpha_n} \\quad (p_1<p_2<\u00b7\u00b7\u00b7<p_n, \\ \\alpha_i \\in N) \\] \\(p_1, p_2, \u00b7\u00b7\u00b7, p_n\\) \u5747\u4e3a\u8d28\u6570","title":"\u7b97\u672f\u57fa\u672c\u5b9a\u7406"},{"location":"ctf/ch3/#_7","text":"","title":"\u6700\u5927\u516c\u56e0\u6570 | \u4e92\u8d28 | \u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5"},{"location":"ctf/ch3/#_8","text":"\u6700\u5927\u516c\u56e0\u6570\u5373\u6574\u6570 \\(a\\) \u548c \\(b\\) \u6240\u5171\u6709\u7684\u6700\u5927\u56e0\u6570\uff08\u56e0\u5b50\uff09\uff0c\u8bb0\u4f5c \\(gcd(a,b)\\)","title":"\u6700\u5927\u516c\u56e0\u6570"},{"location":"ctf/ch3/#_9","text":"\\[ gcd(a,b)=1 \\Longleftrightarrow a,b\u4e92\u8d28 \\]","title":"\u4e92\u8d28"},{"location":"ctf/ch3/#_10","text":"\u6c42\u6700\u5927\u516c\u56e0\u6570\u5e38\u7528\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff08\u8f97\u8f6c\u76f8\u9664\u6cd5\uff09 \u5bf9\u4e8e\u6574\u6570 \\(a\\) \u548c \\(b\\)","title":"\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5"},{"location":"ctf/ch3/#_11","text":"\u6211\u4eec\u5047\u8bbe \\(a > b\\) \uff0c\u6b64\u65f6\u88ab\u9664\u6570\u4e3a \\(a\\) \uff0c\u9664\u6570\u4e3a \\(b\\) \u3002\u5faa\u73af\u6267\u884c\u9664\u6cd5\u64cd\u4f5c\uff0c\u6bcf\u6b21\u5c06\u9664\u6570\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u64cd\u4f5c\u7684\u88ab\u9664\u6570\u3001\u4f59\u6570\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u64cd\u4f5c\u7684\u9664\u6570\uff0c\u5f53\u67d0\u6b21\u64cd\u4f5c\u4f59\u6570\u4e3a 0\uff0c\u5373\u6574\u9664\u65f6\uff0c\u505c\u6b62\u5faa\u73af\uff0c\u53d6\u8be5\u6b21\u64cd\u4f5c\u9664\u6570\u4f5c\u4e3a\u6700\u5927\u516c\u56e0\u6570 \\(gcd(a,b)\\)","title":"\u601d\u8def\u4e0a"},{"location":"ctf/ch3/#_12","text":"\u6211\u4eec\u5e38\u501f\u52a9\u4ee3\u7801\u6216\u8005\u5de5\u5177\u5e93\uff0c\u4f8b\u5982 Python def gcd ( a , b ): if b == 0 : return a return gcd ( b , a % b )","title":"\u5b9e\u9645\u4f7f\u7528\u4e2d"},{"location":"ctf/ch3/#_13","text":"\\(a\\) \u9664\u4ee5 \\(m\\) \u6240\u5f97\u7684\u4f59\u6570\u8bb0\u4f5c \\(a\\bmod m\\) \uff0c\u79f0\u4e3a\u6a21\u8fd0\u7b97 \u6a21\u8fd0\u7b97\u4e2d\u7684\u6a21\u4e3a \\bmod","title":"\u6a21\u8fd0\u7b97"},{"location":"ctf/ch3/#_14","text":"","title":"\u57fa\u672c\u6027\u8d28"},{"location":"ctf/ch3/#_15","text":"\\[ (a\\bmod n)\\bmod n = a\\bmod n \\]","title":"\u6052\u7b49\u5f0f"},{"location":"ctf/ch3/#_16","text":"\\[ \\begin{aligned} (a+b)\\bmod n &= [(a\\bmod n)+(b\\bmod n)]\\bmod n \\\\ ab\\bmod n &= [(a\\bmod n)\\cdot (b\\bmod n)]\\bmod n \\end{aligned} \\]","title":"\u5206\u914d\u5f8b"},{"location":"ctf/ch3/#_17","text":"\u82e5 \\(a\\bmod m = b\\bmod m\\) \uff0c\u5373 \\(a\\) \uff0c \\(b\\) \u9664\u4ee5 \\(m\\) \u6240\u5f97\u7684\u4f59\u6570\u76f8\u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u4f5c \\[ a\\bmod m = b\\bmod m \\Longleftrightarrow a \\equiv b \\pmod{m} \\] \u540c\u4f59\u5f0f\u4e2d\u7684\u5168\u7b49\u4e3a \\equiv \uff0c\u6a21\u4e3a \\pmod{m}","title":"\u540c\u4f59"},{"location":"ctf/ch3/#_18","text":"","title":"\u57fa\u672c\u6027\u8d28"},{"location":"ctf/ch3/#_19","text":"\\[ a\\equiv b \\pmod{m}, b\\equiv c \\pmod{m} \\Longrightarrow a\\equiv c \\pmod{m} \\]","title":"\u4f20\u9012\u6027"},{"location":"ctf/ch3/#_20","text":"\\[ \\begin{aligned} a\\equiv b &\\pmod{m} \\\\ c\\equiv d &\\pmod{m} \\\\ &\\Downarrow \\\\ a\\pm c\\equiv b\\pm d &\\pmod{m} \\\\ ac\\equiv bd &\\pmod{m} \\end{aligned} \\]","title":"\u57fa\u672c\u8fd0\u7b97"},{"location":"ctf/ch3/#_21","text":"\\[ a\\equiv b \\pmod{m} \\Longrightarrow a \\pm c\\equiv b\\pm c \\pmod{m} \\]","title":"\u7b49\u91cf\u52a0\u51cf\u6cd5"},{"location":"ctf/ch3/#_22","text":"\\[ \\begin{aligned} a\\equiv b \\pmod{m} &\\Longrightarrow ka\\equiv kb \\pmod{m},\\quad \\forall k \\in Z \\\\ a\\equiv b \\pmod{m} &\\Longrightarrow a^n\\equiv b^n \\pmod{m}, \\quad \\forall n \\in N \\\\ a\\equiv b \\pmod{m} &\\Longrightarrow P(a)\\equiv P(b) \\pmod{m},\\quad P(x)\u4e3a\u4efb\u610f\u6574\u7cfb\u6570\u591a\u9879\u5f0f \\end{aligned} \\]","title":"\u7b49\u91cf\u4e58\u6cd5"},{"location":"ctf/ch3/#_23","text":"\\[ (km\\pm a)^n\\equiv (\\pm a)^n \\pmod{m} \\quad (k \\in Z, n \\in N) \\]","title":"\u653e\u5927\u7f29\u5c0f\u5e95\u6570"},{"location":"ctf/ch3/#_24","text":"","title":"\u5269\u4f59\u7cfb"},{"location":"ctf/ch3/#_25","text":"\u6bd4 \\(n\\) \u5c0f\u7684\u975e\u8d1f\u6570\u96c6\u5408\u4e3a \\(Z_n=\\{0,1,\u2026,(n\u22121)\\}\\) \uff0c\u79f0\u4e3a\u6a21 \\(n\\) \u7684\u5b8c\u5168\u5269\u4f59\u7cfb\uff0c\u8bb0\u4f5c \\(Z_n\\)","title":"\u5b8c\u5168\u5269\u4f59\u7cfb"},{"location":"ctf/ch3/#_26","text":"\u5b8c\u5168\u5269\u4f59\u7cfb\u4e2d\u4e0e \\(n\\) \u4e92\u8d28\u7684\u5143\u7d20\u7684\u96c6\u5408\uff0c\u8bb0\u4f5c \\(Z_n^*\\)","title":"\u7b80\u5316\u5269\u4f59\u7cfb"},{"location":"ctf/ch3/#_27","text":"\u6b27\u62c9\u51fd\u6570 \\(\\varphi(x)\\) \u6307\u5c0f\u4e8e\u7b49\u4e8e \\(x\\) \u7684\u6b63\u6574\u6570\u4e2d\uff0c\u4e0e \\(x\\) \u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570 \u5373 \\(x\\) \u7684\u7b80\u5316\u5269\u4f59\u7cfb\u4e2d\u7684\u5143\u7d20\u4e2a\u6570","title":"\u6b27\u62c9\u51fd\u6570"},{"location":"ctf/ch3/#_28","text":"\\(\\varphi(1) = 1\\) \u82e5 \\(p\\) \u4e3a\u8d28\u6570\uff0c \\(\\varphi(p) = p-1\\) \u82e5 \\(p\\) \u4e3a\u8d28\u6570\uff0c \\(\\varphi(p^{\\alpha})=p^{\\alpha} - p^{\\alpha - 1} = p^{\\alpha-1}(p-1)\\) \u82e5 \\(a\\) \u4e0e \\(b\\) \u4e92\u8d28\uff0c \\(\\varphi(ab) = \\varphi(a) \\times \\varphi(b)\\) \u7ed3\u5408\u7b97\u672f\u57fa\u672c\u5b9a\u7406\uff0c\u6211\u4eec\u6709 \\[ \\begin{aligned} n &= p_1^{k_1}p_2^{k_2}\u00b7\u00b7\u00b7p_r^{k_r} \\\\ &\\Downarrow \\\\ \\varphi(n) &= \\prod_{i=1}^rp_i^{k_{i-1}}(p_i-1) \\end{aligned} \\]","title":"\u57fa\u672c\u6027\u8d28"},{"location":"ctf/ch3/#_29","text":"","title":"\u6b27\u62c9\u5b9a\u7406 | \u8d39\u9a6c\u5c0f\u5b9a\u7406"},{"location":"ctf/ch3/#_30","text":"\u6570\u8bba\u4e2d\uff0c\u82e5\u6b63\u6574\u6570 \\(n\\) \uff0c \\(a\\) \u4e92\u8d28\uff0c\u6709 \\[ a^{\\varphi(n)} \\equiv 1 \\pmod{n} \\]","title":"\u6b27\u62c9\u5b9a\u7406"},{"location":"ctf/ch3/#_31","text":"\u82e5 \\(a\\) \u4e3a\u6574\u6570\uff0c \\(p\\) \u4e3a\u8d28\u6570\uff0c\u6709 \\[ a^p \\equiv a \\pmod{p} \\] \u5728\u6b64\u57fa\u7840\u4e0a\u82e5 \\(a\\) \uff0c \\(p\\) \u4e92\u8d28\uff0c\u6709 \\[ a^{p-1} \\equiv 1 \\pmod{p} \\] \u53ef\u4ee5\u770b\u5230\u7b26\u5408\u6b27\u62c9\u5b9a\u7406\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a \\(\\varphi(p)=p-1\\) \u5982\u679c\u6211\u4eec\u505a\u4e00\u4e2a\u53d8\u5f62 \\[ a \\cdot a^{p-2} \\equiv 1 \\pmod{p} \\] \u6211\u4eec\u53ef\u4ee5\u77e5\u9053 \\(a^{p-2}\\) \u5373\u662f \\(a\\) \u5bf9\u4e8e\u6a21 \\(p\\) \u7684\u6a21\u9006\u5143\uff0c\u4f46\u6ce8\u610f\u6210\u7acb\u6761\u4ef6","title":"\u8d39\u9a6c\u5c0f\u5b9a\u7406"},{"location":"ctf/ch4/","text":"RSA \u00b6 RSA \u662f\u4e00\u79cd\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff0c\u5728\u516c\u5f00\u5bc6\u94a5\u52a0\u5bc6\u548c\u7535\u5b50\u5546\u4e1a\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4e3b\u8981\u7528\u4e8e\u4fe1\u606f\u52a0\u5bc6\u4ee5\u53ca\u7b7e\u540d\u6d88\u606f \u6765\u6e90 \u00b6 RSA\u662f\u7531\u7f57\u7eb3\u5fb7\u00b7\u674e\u7ef4\u65af\u7279\uff08Ron Rivest\uff09\u3001\u963f\u8fea\u00b7\u8428\u83ab\u5c14\uff08Adi Shamir\uff09\u548c\u4f26\u7eb3\u5fb7\u00b7\u963f\u5fb7\u66fc\uff08Leonard Adleman\uff09\u57281977\u5e74\u4e00\u8d77\u63d0\u51fa\u3002\u5f53\u65f6\u4ed6\u4eec\u4e09\u4eba\u90fd\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u5de5\u4f5c\uff0cRSA \u5c31\u662f\u4ed6\u4eec\u4e09\u4eba\u59d3\u6c0f\u5f00\u5934\u5b57\u6bcd\u62fc\u5728\u4e00\u8d77\u7ec4\u6210\u7684 1973\u5e74\uff0c\u5728\u82f1\u56fd\u653f\u5e9c\u901a\u8baf\u603b\u90e8\u5de5\u4f5c\u7684\u6570\u5b66\u5bb6\u514b\u5229\u798f\u5fb7\u00b7\u67ef\u514b\u65af\uff08Clifford Cocks\uff09\u5728\u4e00\u4e2a\u5185\u90e8\u6587\u4ef6\u4e2d\u63d0\u51fa\u4e86\u4e00\u4e2a\u4e0e\u4e4b\u7b49\u6548\u7684\u7b97\u6cd5\uff0c\u4f46\u8be5\u7b97\u6cd5\u88ab\u5217\u5165\u673a\u5bc6\uff0c\u76f4\u52301997\u5e74\u624d\u5f97\u5230\u516c\u5f00 \u8bbe\u8ba1 | \u5df2\u77e5\u7684\u653b\u51fb\u60c5\u51b5 \u00b6 \u5bf9\u6781\u5927\u6574\u6570\u505a\u56e0\u6570\u5206\u89e3\u7684\u96be\u5ea6\u51b3\u5b9a\u4e86 RSA \u7b97\u6cd5\u7684\u53ef\u9760\u6027\u3002\u6362\u8a00\u4e4b\uff0c\u5bf9\u4e00\u6781\u5927\u6574\u6570\u505a\u56e0\u6570\u5206\u89e3\u6108\u56f0\u96be\uff0cRSA \u7b97\u6cd5\u6108\u53ef\u9760\u3002\u5047\u5982\u6709\u4eba\u627e\u5230\u4e00\u79cd\u5feb\u901f\u56e0\u6570\u5206\u89e3\u7684\u7b97\u6cd5\u7684\u8bdd\uff0c\u90a3\u4e48\u7528 RSA \u52a0\u5bc6\u7684\u4fe1\u606f\u7684\u53ef\u9760\u6027\u5c31\u4f1a\u6781\u5ea6\u4e0b\u964d\u3002\u4f46\u627e\u5230\u8fd9\u6837\u7684\u7b97\u6cd5\u7684\u53ef\u80fd\u6027\u662f\u975e\u5e38\u5c0f\u7684\u3002\u76ee\u524d\u53ea\u6709\u77ed\u7684 RSA \u5bc6\u94a5\u624d\u53ef\u80fd\u88ab\u5f3a\u529b\u65b9\u5f0f\u7834\u89e3 \u52302020\u5e74\u4e3a\u6b62\uff0c\u4e16\u754c\u4e0a\u8fd8\u6ca1\u6709\u4efb\u4f55\u53ef\u9760\u7684\u653b\u51fbRSA\u7b97\u6cd5\u7684\u65b9\u5f0f\u3002wiki \u4e0a\u5df2\u77e5\u7684\u653b\u51fb\u60c5\u51b5\u4e3a RSA-768\uff08768bits\uff0c232digits\uff09\u6570\u88ab\u6210\u529f\u5206\u89e3 1 \u76ee\u524d\u5178\u578b\u7684 RSA \u5bc6\u94a5\u957f\u5ea6\u4e3a2048\u4f4d \u57fa\u672c\u539f\u7406 \u00b6 \u516c\u94a5\u4e0e\u79c1\u94a5\u7684\u4ea7\u751f \u00b6 \u9009\u53d6\u4e24\u4e2a\u5927\u8d28\u6570 \\(p\\) \u548c \\(q\\) \uff0c\u8ba1\u7b97 \\(N = p \\times q\\) \u6839\u636e\u6b27\u62c9\u51fd\u6570\uff0c\u8ba1\u7b97 \\(\\varphi(N)=\\varphi(p)\\varphi(q)=(p-1)(q-1)\\) \u9009\u53d6\u4e00\u4e2a\u5c0f\u4e8e \\(\\varphi(N)\\) \u7684\u6574\u6570 \\(e\\) \uff0c\u4f7f \\(e\\) \u548c \\(\\varphi(N)\\) \u4e92\u8d28\u3002\u6c42\u5f97 \\(e\\) \u5173\u4e8e\u6a21\u6570 \\(\\varphi(N)\\) \u7684\u6a21\u9006\u5143\u3002\u4ee4\u5176\u4e3a \\(d\\) \uff0c\u6709 \\(ed\\equiv 1 \\pmod{\\varphi(N)}\\) \u5c06 \\(p\\) \uff0c \\(q\\) \u7684\u8bb0\u5f55\u9500\u6bc1 \u6b64\u65f6\uff0c \\((N,e)\\) \u662f\u516c\u94a5\uff0c \\((N,d)\\) \u662f\u79c1\u94a5 \u4fe1\u606f\u52a0\u5bc6 \u00b6 \u9996\u5148\u9700\u8981\u5c06\u6d88\u606f\u4ee5\u4e00\u4e2a\u53cc\u65b9\u7ea6\u5b9a\u597d\u7684\u683c\u5f0f\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5c0f\u4e8e \\(N\\) \u7684\u6574\u6570 \\(m\\) \u3002\u5982\u679c\u6d88\u606f\u592a\u957f\uff0c\u53ef\u4ee5\u5c06\u6d88\u606f\u5206\u4e3a\u51e0\u6bb5\uff0c\u5373\u5757\u52a0\u5bc6\uff0c\u540e\u5bf9\u4e8e\u6bcf\u4e00\u90e8\u5206\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c \\[ m^{e}\\equiv c\\pmod N \\] \u5f97\u5230\u5bc6\u6587 \\(c\\) \u4fe1\u606f\u89e3\u5bc6 \u00b6 \u5f97\u5230\u5bc6\u6587 \\(c\\) \uff0c\u53ef\u5229\u7528\u5bc6\u94a5 \\(d\u200b\\) \u8fdb\u884c\u89e3\u5bc6 \\[ c^{d}\\equiv m\\pmod N \\] \u79c1\u94a5\u89e3\u5bc6\u8bc1\u660e \u00b6 \u8bc1\u660e\u7528\u79c1\u94a5 \\(d\\) \u89e3\u5bc6\uff0c\u4e00\u5b9a\u80fd\u6b63\u786e\u5f97\u5230 \\(m\\) \uff0c\u5373 \\[ c^d\\equiv m \\pmod{N} \\] \u9996\u5148\u7531 RSA \u539f\u7406\u4e0e\u540c\u4f59\u6027\u8d28 \\[ m^e \\equiv c \\pmod{N} \\Rightarrow m^{ed} \\equiv c^d \\pmod{N} \\] \u518d\u7531\u4f20\u9012\u6027\uff0c\u7b49\u540c\u4e8e\u9700\u8981\u8bc1 \\[ c^d\\equiv m \\pmod{N} \\Rightarrow m^{ed} \\equiv m \\pmod{N} \\] \u53c8\u56e0\u4e3a \\[ ed \\equiv 1 \\pmod{\\varphi(N)} \\Rightarrow ed=h\\varphi(N)+1 \\] \u56e0\u6b64\u6709\u5982\u4e0b\u7b49\u5f0f \\[ \\begin{aligned} m^{ed} &\\equiv m \\pmod{N} \\\\ &\\Updownarrow \\\\ m^{h\\varphi(N)+1} &\\equiv m \\pmod{N} \\\\ &\\Updownarrow \\\\ m^{h(p-1)(q-1)+1} &\\equiv m \\pmod{N} \\end{aligned} \\] \u6b64\u65f6\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5 \\(m\\) \u4e0e \\(N\\) \u4e92\u8d28 \u7531\u6b27\u62c9\u5b9a\u7406\u6709 \\[ m^{\\varphi(N)} \\equiv 1 \\pmod{N} \\] \u518d\u7531\u540c\u4f59\u6027\u8d28\u53ef\u5f97 \\[ m^{h\\varphi(N)+1} \\equiv m \\pmod{N} \\] \\(m\\) \u4e0e \\(N\\) \u4e0d\u4e92\u8d28 \u7531\u4e8e \\(N=p\\times q\\) \uff0c\u6545 \\(m\\) \u5fc5\u7136\u4e3a \\(kp\\) \u6216\u8005 \\(kq\\) \u4ee5 \\(m = kp\\) \u4e3a\u4f8b\uff08 \\(p\\) \\(q\\) \u5bf9\u79f0\uff0c\u53ea\u8003\u8651\u4e00\u79cd\uff09\uff0c\u6b64\u65f6 \\(m = kp\\) \u4e0e \\(q\\) \u5fc5\u7136\u4e92\u8d28\uff0c\u7531\u6b27\u62c9\u5b9a\u7406 \\[ (kp)^{q-1}\\equiv 1\\pmod{q} \\] \u7531\u540c\u4f59\u6027\u8d28\u6709 \\[ (kp)^{h(p-1)(q-1)+1}\\equiv kp\\pmod{q} \\] \u5373 \\[ (kp)^{ed} \\equiv kp\\pmod{q} \\Rightarrow (kp)^{ed} = tq + kp \\] \u6b64\u65f6\u7b49\u5f0f\u5de6\u8fb9\u4e00\u5b9a\u4e3a \\(p\\) \u7684\u500d\u6570\uff0c\u6545\u53f3\u8fb9\u7684 \\(tq\\) \u4e5f\u4e00\u5b9a\u4e3a \\(p\\) \u7684\u500d\u6570\uff0c\u53c8\u56e0\u4e3a \\(p\\) \u4e0e \\(q\\) \u4e92\u8d28\uff0c\u6545 \\(t\\) \u4e00\u5b9a\u4e3a \\(p\\) \u7684\u500d\u6570\uff0c\u5373 \\(t = t'p\\) \u53c8\u56e0\u4e3a \\(N = p\\times q\\) \uff0c \\(m = kp\\) \uff0c\u6240\u4ee5\u6709 \\[ \\begin{aligned} (kp)^{ed} &= t'pq+kp \\\\ &\\Updownarrow \\\\ (kp)^{ed} &\\equiv kp \\pmod{N} \\\\ &\\Updownarrow \\\\ m^{ed} &\\equiv m\\pmod{N} \\end{aligned} \\] \u5e38\u7528\u5de5\u5177 \u00b6 \u5728\u7ebf\u5de5\u5177 \u00b6 \u6574\u6570\u5206\u89e3\uff08100 digits \u5de6\u53f3\uff09\uff1a factor.db \u6c42\u6a21\u9006\u5143\uff1a\u4efb\u610f\u641c\u7d22\u7f51\u7ad9 \u8d28\u6570\u67e5\u8be2\uff1a haomeili.net Python\u5e93 \u00b6 gmpy2 https://eprint.iacr.org/2010/006.pdf \u21a9","title":"RSA"},{"location":"ctf/ch4/#rsa","text":"RSA \u662f\u4e00\u79cd\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff0c\u5728\u516c\u5f00\u5bc6\u94a5\u52a0\u5bc6\u548c\u7535\u5b50\u5546\u4e1a\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4e3b\u8981\u7528\u4e8e\u4fe1\u606f\u52a0\u5bc6\u4ee5\u53ca\u7b7e\u540d\u6d88\u606f","title":"RSA"},{"location":"ctf/ch4/#_1","text":"RSA\u662f\u7531\u7f57\u7eb3\u5fb7\u00b7\u674e\u7ef4\u65af\u7279\uff08Ron Rivest\uff09\u3001\u963f\u8fea\u00b7\u8428\u83ab\u5c14\uff08Adi Shamir\uff09\u548c\u4f26\u7eb3\u5fb7\u00b7\u963f\u5fb7\u66fc\uff08Leonard Adleman\uff09\u57281977\u5e74\u4e00\u8d77\u63d0\u51fa\u3002\u5f53\u65f6\u4ed6\u4eec\u4e09\u4eba\u90fd\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u5de5\u4f5c\uff0cRSA \u5c31\u662f\u4ed6\u4eec\u4e09\u4eba\u59d3\u6c0f\u5f00\u5934\u5b57\u6bcd\u62fc\u5728\u4e00\u8d77\u7ec4\u6210\u7684 1973\u5e74\uff0c\u5728\u82f1\u56fd\u653f\u5e9c\u901a\u8baf\u603b\u90e8\u5de5\u4f5c\u7684\u6570\u5b66\u5bb6\u514b\u5229\u798f\u5fb7\u00b7\u67ef\u514b\u65af\uff08Clifford Cocks\uff09\u5728\u4e00\u4e2a\u5185\u90e8\u6587\u4ef6\u4e2d\u63d0\u51fa\u4e86\u4e00\u4e2a\u4e0e\u4e4b\u7b49\u6548\u7684\u7b97\u6cd5\uff0c\u4f46\u8be5\u7b97\u6cd5\u88ab\u5217\u5165\u673a\u5bc6\uff0c\u76f4\u52301997\u5e74\u624d\u5f97\u5230\u516c\u5f00","title":"\u6765\u6e90"},{"location":"ctf/ch4/#_2","text":"\u5bf9\u6781\u5927\u6574\u6570\u505a\u56e0\u6570\u5206\u89e3\u7684\u96be\u5ea6\u51b3\u5b9a\u4e86 RSA \u7b97\u6cd5\u7684\u53ef\u9760\u6027\u3002\u6362\u8a00\u4e4b\uff0c\u5bf9\u4e00\u6781\u5927\u6574\u6570\u505a\u56e0\u6570\u5206\u89e3\u6108\u56f0\u96be\uff0cRSA \u7b97\u6cd5\u6108\u53ef\u9760\u3002\u5047\u5982\u6709\u4eba\u627e\u5230\u4e00\u79cd\u5feb\u901f\u56e0\u6570\u5206\u89e3\u7684\u7b97\u6cd5\u7684\u8bdd\uff0c\u90a3\u4e48\u7528 RSA \u52a0\u5bc6\u7684\u4fe1\u606f\u7684\u53ef\u9760\u6027\u5c31\u4f1a\u6781\u5ea6\u4e0b\u964d\u3002\u4f46\u627e\u5230\u8fd9\u6837\u7684\u7b97\u6cd5\u7684\u53ef\u80fd\u6027\u662f\u975e\u5e38\u5c0f\u7684\u3002\u76ee\u524d\u53ea\u6709\u77ed\u7684 RSA \u5bc6\u94a5\u624d\u53ef\u80fd\u88ab\u5f3a\u529b\u65b9\u5f0f\u7834\u89e3 \u52302020\u5e74\u4e3a\u6b62\uff0c\u4e16\u754c\u4e0a\u8fd8\u6ca1\u6709\u4efb\u4f55\u53ef\u9760\u7684\u653b\u51fbRSA\u7b97\u6cd5\u7684\u65b9\u5f0f\u3002wiki \u4e0a\u5df2\u77e5\u7684\u653b\u51fb\u60c5\u51b5\u4e3a RSA-768\uff08768bits\uff0c232digits\uff09\u6570\u88ab\u6210\u529f\u5206\u89e3 1 \u76ee\u524d\u5178\u578b\u7684 RSA \u5bc6\u94a5\u957f\u5ea6\u4e3a2048\u4f4d","title":"\u8bbe\u8ba1 | \u5df2\u77e5\u7684\u653b\u51fb\u60c5\u51b5"},{"location":"ctf/ch4/#_3","text":"","title":"\u57fa\u672c\u539f\u7406"},{"location":"ctf/ch4/#_4","text":"\u9009\u53d6\u4e24\u4e2a\u5927\u8d28\u6570 \\(p\\) \u548c \\(q\\) \uff0c\u8ba1\u7b97 \\(N = p \\times q\\) \u6839\u636e\u6b27\u62c9\u51fd\u6570\uff0c\u8ba1\u7b97 \\(\\varphi(N)=\\varphi(p)\\varphi(q)=(p-1)(q-1)\\) \u9009\u53d6\u4e00\u4e2a\u5c0f\u4e8e \\(\\varphi(N)\\) \u7684\u6574\u6570 \\(e\\) \uff0c\u4f7f \\(e\\) \u548c \\(\\varphi(N)\\) \u4e92\u8d28\u3002\u6c42\u5f97 \\(e\\) \u5173\u4e8e\u6a21\u6570 \\(\\varphi(N)\\) \u7684\u6a21\u9006\u5143\u3002\u4ee4\u5176\u4e3a \\(d\\) \uff0c\u6709 \\(ed\\equiv 1 \\pmod{\\varphi(N)}\\) \u5c06 \\(p\\) \uff0c \\(q\\) \u7684\u8bb0\u5f55\u9500\u6bc1 \u6b64\u65f6\uff0c \\((N,e)\\) \u662f\u516c\u94a5\uff0c \\((N,d)\\) \u662f\u79c1\u94a5","title":"\u516c\u94a5\u4e0e\u79c1\u94a5\u7684\u4ea7\u751f"},{"location":"ctf/ch4/#_5","text":"\u9996\u5148\u9700\u8981\u5c06\u6d88\u606f\u4ee5\u4e00\u4e2a\u53cc\u65b9\u7ea6\u5b9a\u597d\u7684\u683c\u5f0f\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5c0f\u4e8e \\(N\\) \u7684\u6574\u6570 \\(m\\) \u3002\u5982\u679c\u6d88\u606f\u592a\u957f\uff0c\u53ef\u4ee5\u5c06\u6d88\u606f\u5206\u4e3a\u51e0\u6bb5\uff0c\u5373\u5757\u52a0\u5bc6\uff0c\u540e\u5bf9\u4e8e\u6bcf\u4e00\u90e8\u5206\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c \\[ m^{e}\\equiv c\\pmod N \\] \u5f97\u5230\u5bc6\u6587 \\(c\\)","title":"\u4fe1\u606f\u52a0\u5bc6"},{"location":"ctf/ch4/#_6","text":"\u5f97\u5230\u5bc6\u6587 \\(c\\) \uff0c\u53ef\u5229\u7528\u5bc6\u94a5 \\(d\u200b\\) \u8fdb\u884c\u89e3\u5bc6 \\[ c^{d}\\equiv m\\pmod N \\]","title":"\u4fe1\u606f\u89e3\u5bc6"},{"location":"ctf/ch4/#_7","text":"\u8bc1\u660e\u7528\u79c1\u94a5 \\(d\\) \u89e3\u5bc6\uff0c\u4e00\u5b9a\u80fd\u6b63\u786e\u5f97\u5230 \\(m\\) \uff0c\u5373 \\[ c^d\\equiv m \\pmod{N} \\] \u9996\u5148\u7531 RSA \u539f\u7406\u4e0e\u540c\u4f59\u6027\u8d28 \\[ m^e \\equiv c \\pmod{N} \\Rightarrow m^{ed} \\equiv c^d \\pmod{N} \\] \u518d\u7531\u4f20\u9012\u6027\uff0c\u7b49\u540c\u4e8e\u9700\u8981\u8bc1 \\[ c^d\\equiv m \\pmod{N} \\Rightarrow m^{ed} \\equiv m \\pmod{N} \\] \u53c8\u56e0\u4e3a \\[ ed \\equiv 1 \\pmod{\\varphi(N)} \\Rightarrow ed=h\\varphi(N)+1 \\] \u56e0\u6b64\u6709\u5982\u4e0b\u7b49\u5f0f \\[ \\begin{aligned} m^{ed} &\\equiv m \\pmod{N} \\\\ &\\Updownarrow \\\\ m^{h\\varphi(N)+1} &\\equiv m \\pmod{N} \\\\ &\\Updownarrow \\\\ m^{h(p-1)(q-1)+1} &\\equiv m \\pmod{N} \\end{aligned} \\] \u6b64\u65f6\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5 \\(m\\) \u4e0e \\(N\\) \u4e92\u8d28 \u7531\u6b27\u62c9\u5b9a\u7406\u6709 \\[ m^{\\varphi(N)} \\equiv 1 \\pmod{N} \\] \u518d\u7531\u540c\u4f59\u6027\u8d28\u53ef\u5f97 \\[ m^{h\\varphi(N)+1} \\equiv m \\pmod{N} \\] \\(m\\) \u4e0e \\(N\\) \u4e0d\u4e92\u8d28 \u7531\u4e8e \\(N=p\\times q\\) \uff0c\u6545 \\(m\\) \u5fc5\u7136\u4e3a \\(kp\\) \u6216\u8005 \\(kq\\) \u4ee5 \\(m = kp\\) \u4e3a\u4f8b\uff08 \\(p\\) \\(q\\) \u5bf9\u79f0\uff0c\u53ea\u8003\u8651\u4e00\u79cd\uff09\uff0c\u6b64\u65f6 \\(m = kp\\) \u4e0e \\(q\\) \u5fc5\u7136\u4e92\u8d28\uff0c\u7531\u6b27\u62c9\u5b9a\u7406 \\[ (kp)^{q-1}\\equiv 1\\pmod{q} \\] \u7531\u540c\u4f59\u6027\u8d28\u6709 \\[ (kp)^{h(p-1)(q-1)+1}\\equiv kp\\pmod{q} \\] \u5373 \\[ (kp)^{ed} \\equiv kp\\pmod{q} \\Rightarrow (kp)^{ed} = tq + kp \\] \u6b64\u65f6\u7b49\u5f0f\u5de6\u8fb9\u4e00\u5b9a\u4e3a \\(p\\) \u7684\u500d\u6570\uff0c\u6545\u53f3\u8fb9\u7684 \\(tq\\) \u4e5f\u4e00\u5b9a\u4e3a \\(p\\) \u7684\u500d\u6570\uff0c\u53c8\u56e0\u4e3a \\(p\\) \u4e0e \\(q\\) \u4e92\u8d28\uff0c\u6545 \\(t\\) \u4e00\u5b9a\u4e3a \\(p\\) \u7684\u500d\u6570\uff0c\u5373 \\(t = t'p\\) \u53c8\u56e0\u4e3a \\(N = p\\times q\\) \uff0c \\(m = kp\\) \uff0c\u6240\u4ee5\u6709 \\[ \\begin{aligned} (kp)^{ed} &= t'pq+kp \\\\ &\\Updownarrow \\\\ (kp)^{ed} &\\equiv kp \\pmod{N} \\\\ &\\Updownarrow \\\\ m^{ed} &\\equiv m\\pmod{N} \\end{aligned} \\]","title":"\u79c1\u94a5\u89e3\u5bc6\u8bc1\u660e"},{"location":"ctf/ch4/#_8","text":"","title":"\u5e38\u7528\u5de5\u5177"},{"location":"ctf/ch4/#_9","text":"\u6574\u6570\u5206\u89e3\uff08100 digits \u5de6\u53f3\uff09\uff1a factor.db \u6c42\u6a21\u9006\u5143\uff1a\u4efb\u610f\u641c\u7d22\u7f51\u7ad9 \u8d28\u6570\u67e5\u8be2\uff1a haomeili.net","title":"\u5728\u7ebf\u5de5\u5177"},{"location":"ctf/ch4/#python","text":"gmpy2 https://eprint.iacr.org/2010/006.pdf \u21a9","title":"Python\u5e93"},{"location":"ctf/ch5/","text":"\u7f16\u7801 | Encode \u00b6 \u7f16\u7801\uff08encode\uff09\u7684\u76ee\u7684\u4e0d\u662f\u4e3a\u4e86\u52a0\u5bc6\uff0c\u800c\u662f\u4ee3\u8868\u4fe1\u606f\u7684\u53e6\u5916\u4e00\u79cd\u8868\u8fbe\u65b9\u5f0f\u3002\u5c06\u539f\u59cb\u4fe1\u606f\u8f6c\u5316\u4e3a\u7f16\u7801\u4fe1\u606f\u8fdb\u884c\u4f20\u8f93\uff0c\u53ef\u4ee5\u89e3\u51b3\u4e00\u4e9b\u7279\u6b8a\u5b57\u7b26\u3001\u4e0d\u53ef\u89c1\u5b57\u7b26\u7684\u4f20\u8f93\u95ee\u9898 \u63a5\u6536\u8005\u5c06\u7f16\u7801\u4fe1\u606f\u518d\u8f6c\u5316\u4e3a\u539f\u59cb\u4fe1\u606f\uff0c\u8f6c\u5316\u7684\u8fc7\u7a0b\u79f0\u4e4b\u4e3a\u89e3\u7801\uff08decode\uff09 \u8fdb\u5236\u8f6c\u6362 \u00b6 \u8fdb\u5236\u8f6c\u6362\u5728\u5bc6\u7801\u5b66\u4e2d\u5341\u5206\u5e38\u89c1\uff0c\u56e0\u4e3a\u4e0d\u540c\u8fdb\u5236\u4e0b\u7684\u5b57\u7b26\u96c6\u5927\u5c0f\u4e0d\u540c\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u79cd\u5929\u7136\u7684\u7f16\u7801\u65b9\u5f0f 10\u8fdb\u5236\u8f6c2/8/16\u8fdb\u5236 \u00b6 Python \u7684\u5185\u7f6e\u51fd\u6570 bin() \uff0c oct() \uff0c hex() \u63a5\u6536 int \uff0c\u5e76\u8f93\u51fa\u5bf9\u5e94\u8fdb\u5236\u4e0b\u7684 str Python bin ( 59 ) # '0b111011' oct ( 59 ) # '0o73' hex ( 59 ) # '0x3b' \u7531\u4e0a\u8ff0\u53ef\u77e5\uff0c\u5982\u679c\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u7279\u5b9a\u8fdb\u5236\u4e0b\u7684 int \u5b57\u9762\u503c\uff0c\u53ea\u9700\u8981\u52a0\u4e0a\u5bf9\u5e94\u7684\u524d\u7f00\u5373\u53ef Python bin ( 0b111011 ) # '0b111011' oct ( 0o73 ) #'0o73' hex ( 0x3b ) # '0x3b' 2/8/16\u8fdb\u5236\u8f6c10\u8fdb\u5236 \u00b6 Python \u7684\u5185\u7f6e\u51fd\u6570 int() \u63a5\u6536 str \uff0c\u5e76\u8f93\u51fa\u53c2\u6570\u8fdb\u5236\u4e0b\u7684 int \uff08\u5e38\u5e38\u752810\u8fdb\u5236\u8868\u793a\uff0c\u6ca1\u6709\u4efb\u4f55\u524d\u7f00\uff09 Python int ( '111011' , 2 ) # 59 int ( '73' , 8 ) # 59 int ( '3b' , 16 ) # 59 Leet\u8bed \u00b6 Leet\uff08\u82f1\u6587\u4e2d\u4ea6\u79f0 leetspeak \u6216 eleet\uff09\uff0c\u53c8\u79f0\u9ed1\u5ba2\u8bed\uff0c\u6307\u4e00\u79cd\u53d1\u6e90\u4e8e\u897f\u65b9\u56fd\u5bb6\u7684BBS\u3001\u5728\u7ebf\u6e38\u620f\u548c\u9ed1\u5ba2\u793e\u7fa4\u6240\u4f7f\u7528\u7684\u6587\u5b57\u4e66\u5199\u65b9\u5f0f \u901a\u5e38\u662f\u628a\u62c9\u4e01\u5b57\u6bcd\u8f6c\u53d8\u6210\u6570\u5b57\u6216\u662f\u7279\u6b8a\u7b26\u53f7\uff0c\u4f8b\u5982 E \u5199\u6210 3\u3001A \u5199\u6210 4 \u7b49\u3002\u6216\u662f\u5c06\u5355\u5b57\u5199\u6210\u540c\u97f3\u7684\u5b57\u6bcd\u6216\u6570\u5b57\uff0c\u5982 to \u5199\u6210 2\u3001for \u5199\u6210 4 \u7b49 \u5728 CTF \u4e2d\uff0c\u5f88\u591a\u7ebf\u4e0a\u8d5b\u7684 flag \u4e5f\u91c7\u7528\u7684\u8fd9\u6837\u7684\u5199\u6cd5\uff0c\u4e0d\u4ec5\u7f8e\u89c2\u800c\u4e14\u4e5f\u52a0\u5f3a\u4e86\u590d\u6742\u6027 \u5e38\u89c1\u7684\u5355\u5b57\u8f6c\u6570\u5b57\u5199\u6cd5\u6709 A\uff1a4 B\uff1a8 E\uff1a3 G\uff1a6 I/L\uff1a1 O\uff1a0 S\uff1a5 T\uff1a7 Z\uff1a2 \u4f8b\u5982\u73b0\u6709\u4e00\u4e2a\u5bc6\u6587 Ada is the key. \u6211\u4eec\u53ef\u4ee5\u5199\u6210\u4e00\u4e2aflag Text Only crypto{4da_1s_7he_K3y} str \u4e0e bytes \u7c7b\u578b\uff08Python\uff09 \u00b6 \u5e38\u7528 Trick \u00b6 str \u7c7b\u578b Python list ( r 'crypto {4da_1s_7he_K3y} ' ) # ['c','r','y','p','t',\u00b7\u00b7\u00b7,'y','}'] '' . join ( list ( r 'crypto {4da_1s_7he_K3y} ' )) # 'crypto{4da_1s_7he_K3y}' 'crypto {4da_1s_7he_K3y} ' . upper () # 'CRYPTO{4DA_1S_7HE_K3Y}' 'crypto {4da_1s_7he_K3y} ' . lower () # 'crypto{4da_1s_7he_k3y}' '1100' . zfill ( 8 ) # '00001100' bytes \u7c7b\u578b Python list ( b 'crypto {4da_1s_7he_K3y} ' ) # [99,114,121,112,116,\u00b7\u00b7\u00b7,121,125] bytes ( list ( b 'crypto {4da_1s_7he_K3y} ' )) # b'crypto{4da_1s_7he_K3y}' str \u4e0e bytes \u7c7b\u578b\u7684\u8f6c\u6362 \u00b6 \u5b57\u9762\u503c\u8f6c\u6362 str \u7684\u5b57\u9762\u503c\u4e0e bytes \u7684\u5b57\u9762\u503c\u5c55\u793a\u5185\u5bb9\u662f\u4e00\u6837\u7684\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u524d\u7f00 b Python type ( 'crypto {4da_1s_7he_K3y} ' ) # str type ( b 'crypto {4da_1s_7he_K3y} ' ) # bytes \u53d8\u91cf\u8f6c\u6362 str \u7c7b\u578b\u4e0b\u6709 .encode() \u51fd\u6570\uff0c bytes \u7c7b\u578b\u4e0b\u6709\u5bf9\u5e94\u7684 .decode() \u51fd\u6570 Python 'crypto {4da_1s_7he_K3y} ' . encode () # b'crypto{4da_1s_7he_K3y}' b 'crypto {4da_1s_7he_K3y} ' . decode () # 'crypto{4da_1s_7he_K3y}' ASCII \u00b6 \u4e00\u79cd 7 \u4f4d\u7f16\u7801\u6807\u51c6\uff0c\u4f7f\u7528\u6574\u6570 0-127 \u6765\u8868\u793a\u5bf9\u5e94\u5b57\u7b26\uff0c\u5176\u5b57\u7b26\u96c6\u4fbf\u662f ASCII \u7801\u8868 Python \u7684\u5185\u7f6e\u51fd\u6570 ord() \u63a5\u6536\u5355\u4e2a str / chr \uff0c\u8fd4\u56de int \u4e3a\u5176\u5bf9\u5e94\u7684 ASCII \u7801\u503c Python ord ( 'A' ) # 65 Python \u7684\u5185\u7f6e\u51fd\u6570 chr() \u63a5\u6536 int \uff0c\u8fd4\u56de str \u4f5c\u4e3a\u5bf9\u5e94\u7684 ASCII \u7801 Python chr ( 65 ) # 'A' Hex | Base16 \u00b6 Hex \u5373 Base16 \u7f16\u7801\uff0cBase16 \u6307\u7684\u662f\u5176\u5b57\u7b26\u96c6\u4e3a 0-9\u3001A-F \u517116\u4e2a\u5b57\u7b26\uff0c\u7c7b\u4f3c\u7684\u8fd8\u6709 Base32\uff0cBase64\u7f16\u7801\uff08\u9664\u5f00\u8865\u4f4d\u7684 '='\uff09 \u539f\u7406 \u00b6 ASCII \u7f16\u7801\u4e0b\uff0c\u4e00\u822c\u7684\u82f1\u6587\u5b57\u7b26\u5927\u5c0f\u5747\u4e3a 1byte\uff0c\u5373 8bit\uff0c\u4e8e\u662f\u53ef\u4ee5\u5c06\u5176\u5207\u5206\u4e3a\u4e24\u4e2a 4bit \u770b\u5f85\uff0c\u800c\u5bf9\u4e8e\u4e00\u4e2a \u5360\u4f4d 4bit \u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ea\u9700\u8981 \\(2^4=16\\) \u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u96c6\u5408\u4fbf\u80fd\u4e00\u4e00\u5bf9\u5e94\uff0c\u8fd9\u5c31\u662f Base16 \u7684\u539f\u7406 \u5b9e\u9645\u7f16\u7801\u4e2d\uff0c\u9996\u5148\u5c06 ASCII \u7f16\u7801\u4e0b\u7684\u4fe1\u606f\uff0c\u5373\u539f\u59cb\u4fe1\u606f\u53d6 ASCII \u7801\u503c\u5e76\u4e8c\u8fdb\u5236\u5c55\u5f00\uff0c\u5bf9\u4e0d\u8db3 8 \u4f4d\u7684\u8fdb\u884c\u9ad8\u4f4d\u8865 0 \uff0c\u5f97\u5230\u4ee3\u8868\u539f\u4fe1\u606f\u7684\u4e8c\u8fdb\u5236\u4e32\uff0c\u5176\u4f4d\u6570\u5fc5\u4e3a 8 \u7684\u500d\u6570 \u63a5\u7740\u6211\u4eec\u5c06\u8be5\u4e8c\u8fdb\u5236\u4e32\u6309 4bit \u5212\u5206\u4e3a\u5c0f\u8282\uff0c\u6bcf\u4e00\u5c0f\u8282\u4ee3\u8868\u7684\u503c\u4fbf\u5bf9\u5e94 Base16 \u7801\u8868\u4e0b\u76f8\u5e94\u7684\u5b57\u7b26 \u7279\u70b9 \u00b6 \u7531\u4e8e ASCII \u7801 8bit \u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff0cBase16 \u7801 4bit \u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff0c\u5373\u6bcf 1 \u4e2a ASCII \u5b57\u7b26\u4e00\u5b9a\u53ef\u4ee5\u7528 2 \u4e2aBase16 \u5b57\u7b26\u8868\u793a\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u77e5 Base16 \u7f16\u7801\u7684\u4fe1\u606f\u5b57\u7b26\u6570\u4e00\u822c\u4e3a\u5076\u6570\uff0c\u5e76\u4e14\u5f88\u5c11\u9700\u8981 '=' \u8865\u4f4d \u5de5\u5177 \u00b6 \u4e2a\u4eba\u5b9e\u73b0 \u867d\u7136\u4e00\u822c\u7684 Base \u7f16\u7801\u90fd\u9700\u8981\u7801\u8868\uff0c\u4f46 Base16 \u7801\u503c\u5bf9\u5e94\u7684\u5b57\u7b26\u4fbf\u662f\u5176 16 \u8fdb\u5236\u4e0b\u7684\u8868\u8fbe\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u501f\u52a9\u524d\u6587\u7684\u8fdb\u5236\u8f6c\u6362\u51fd\u6570\u5b9e\u73b0 Base16 \u7f16\u7801 Python def my_hex ( input_str ): bstream = [ bin ( ord ( o ))[ 2 :] . zfill ( 8 ) for o in input_str ] tmp = [] for item in bstream : tmp . append ( hex ( int ( item [: 4 ], 2 ))[ 2 :]) tmp . append ( hex ( int ( item [ 4 :], 2 ))[ 2 :]) return '' . join ( tmp ) my_hex ( r 'crypto {4da_1s_7he_K3y} ' ) # '63727970746f7b3464615f31735f3768655f4b33797d' \u5176\u63a5\u6536 str \uff0c\u5e76\u8fd4\u56de\u5bf9\u5e94 Base16 \u7f16\u7801\u7684 str \u3002\u6b64\u5904 'crypto{4da_1s_7he_K3y}' \u7684 str \u5b57\u9762\u503c\u4e2d\u82b1\u62ec\u53f7\u4f1a\u88ab\u8f6c\u4e49\uff0c\u6545\u52a0\u4e0a r \u524d\u7f00\u8868\u793a\u539f\u59cb\u5b57\u7b26\u4e32 \u5185\u7f6e\u51fd\u6570 \u6bd4\u8f83\u5e38\u7528\u7684\u662f bytes \u7c7b\u578b\u4e0b\u7684 .hex() \u51fd\u6570\uff0c\u5b83\u5c06\u5176\u7f16\u7801\u4e3a str \u7c7b\u578b\u7684 Base16 \u7f16\u7801 Python b 'crypto {4da_1s_7he_K3y} ' . hex () # '63727970746f7b3464615f31735f3768655f4b33797d' \u4ee5\u53ca bytes.fromhex() \u51fd\u6570\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a str \u7c7b\u578b\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a bytes \u5bf9\u5e94\u539f\u59cb\u5b57\u7b26\u4e32 Python bytes . fromhex ( '63727970746f7b3464615f31735f3768655f4b33797d' ) # b'crypto{4da_1s_7he_K3y}' Base32 & Base64 \u00b6 \u4e0e Base16 \u7f16\u7801\u7c7b\u4f3c\uff0cBase32 \u4e0e Base64 \u5206\u522b\u7528 32 \u4e2a\u5b57\u7b26\uff08\u5360\u4f4d 5bit\uff09\u4e0e 64 \u4e2a\u5b57\u7b26\uff08\u5360\u4f4d 6bit\uff09\u8868\u793a\u539f\u59cb\u5b57\u7b26 \u5b57\u7b26\u96c6 \u00b6 Base16\uff1a0-9\uff0cA-F \u5171 16 \u4e2a\u4ee5\u53ca\u8865\u4f4d\u7684 '=' Base32\uff1a2-7\uff0cA-Z \u5171 32 \u4e2a\u4ee5\u53ca\u8865\u4f4d\u7684 '=' Base64\uff1a0-9\uff0cA-Z\uff0ca-z\uff0c+\uff0c/ \u5171 64 \u4e2a\u4ee5\u53ca\u8865\u4f4d\u7684 '=' \u7279\u70b9 \u00b6 \u6bcf 5/3 \u4e2a\u539f\u59cb\u5b57\u7b26\u4e00\u5b9a\u80fd\u7528 8/4\u4e2a Base32/64 \u5b57\u7b26\u8868\u793a Base32 \u7f16\u7801\u957f\u5ea6\u5e38\u5e38\u662f 8 \u7684\u500d\u6570\uff0cBase64 \u7f16\u7801\u957f\u5ea6\u5e38\u5e38\u662f 4 \u7684\u500d\u6570\uff0c\u4e14\u65f6\u5e38\u6709 '=' \u8865\u4f4d \u5de5\u5177 \u00b6 \u4e2a\u4eba\u5b9e\u73b0 \uff08Base64\uff09 \u9996\u5148\u9700\u8981\u51c6\u5907\u4e00\u4e2a Base64 \u7801\u8868 Python index = [ i for i in range ( 64 )] val = [ chr ( i ) for i in range ( ord ( 'A' ), ord ( 'A' ) + 26 )] + [ chr ( i ) for i in range ( ord ( 'a' ), ord ( 'a' ) + 26 )] + [ chr ( i ) for i in range ( ord ( '0' ), ord ( '0' ) + 10 )] + [ '+' , '/' ] b64map = dict ( zip ( index , val )) \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u9009\u7528\u79c1\u6709\u7801\u8868\uff0c\u5373\u79c1\u6709 Base64 \u7f16\u7801 Python def my_b64encode ( input_str , dct ): bstream = '' . join ([ bin ( ord ( o ))[ 2 :] . zfill ( 8 ) for o in input_str ]) pad = 0 if len ( bstream ) % 24 == 8 : pad = 2 if len ( bstream ) % 24 == 16 : pad = 1 tmp = [] if len ( bstream ) % 6 : bstream = bstream . ljust ( len ( bstream ) + 6 - len ( bstream ) % 6 , '0' ) for i in range ( len ( bstream ) // 6 ): tmp . append ( dct [ int ( bstream [ i * 6 :( i + 1 ) * 6 ], 2 )]) return '' . join ( tmp ) + pad * '=' my_b64encode() \u63a5\u6536 str \u4e0e\u4e00\u4e2a dict \uff0c\u8fd4\u56de\u7f16\u7801\u540e\u7684 str Python def my_b64decode ( input_str , dct ): offset = 0 if input_str . count ( '=' ) == 1 : offset = 2 input_str = input_str [: - 1 ] if input_str . count ( '=' ) == 2 : offset = 4 input_str = input_str [: - 2 ] if offset : bstream = '' . join ([ bin ( dct [ o ])[ 2 :] . zfill ( 6 ) for o in input_str ])[: - offset ] else : bstream = '' . join ([ bin ( dct [ o ])[ 2 :] . zfill ( 6 ) for o in input_str ]) tmp = [] for i in range ( len ( bstream ) // 8 ): tmp . append ( chr ( int ( bstream [ i * 8 :( i + 1 ) * 8 ], 2 ))) return '' . join ( tmp ) my_b64decode() \u63a5\u6536\u4e00\u4e2a str \u4e0e\u4e00\u4e2a\u9006\u5411\u7684\u7801\u8868 dict \uff0c\u8fd4\u56de\u89e3\u7801\u540e\u7684 str \u9006\u5411\u7801\u8868\u53ef\u7b80\u5355\u4ea4\u6362\u524d\u9762\u7801\u8868\u51c6\u5907\u8fc7\u7a0b\u4e2d\u7684 zip() \u53c2\u6570\u987a\u5e8f\u5f97\u5230 Python re_map = dict ( zip ( val , index )) \u5185\u7f6e\u51fd\u6570 Python \u7684\u6807\u51c6\u5e93 base64 \u63d0\u4f9b\u4e00\u7cfb\u5217 Base \u7f16\u7801\u51fd\u6570 base64.b16encode() \u63a5\u6536 bytes \uff0c\u5e76\u8fd4\u56de Base16 \u7f16\u7801\u540e\u7684 bytes Python base64 . b16encode ( b 'crypto {4da_1s_7he_K3y} ' ) # b'63727970746F7B3464615F31735F3768655F4B33797D' \u4e0e bytes \u5185\u7f6e\u7684\u51fd\u6570 .hex() \u4e0d\u540c\uff0c\u5b83\u8fd4\u56de\u7684\u662f bytes \uff0c\u5e76\u4e14\u6570\u503c\u4e2d\u7684\u5b57\u6bcd\u90fd\u662f\u5927\u5199 Python base64 . b16encode ( b 'crypto {4da_1s_7he_K3y} ' ) . decode () . lower () == b 'crypto {4da_1s_7he_K3y} ' . hex () # True \u4ee5\u53ca base64.b16decode() \uff0c\u5b83\u63a5\u6536 str \u6216 bytes \uff0c \u5e76\u8fd4\u56de\u5bf9\u5e94\u539f\u4fe1\u606f\u7684 bytes Python base64 . b16decode ( b '63727970746F7B3464615F31735F3768655F4B33797D' ) # b'crypto{4da_1s_7he_K3y}' \u540c\u6837\u5b83\u4e0e bytes.fromhex() \u4e0d\u540c\uff0c\u5bf9\u91cc\u9762\u5b57\u6bcd\u8981\u6c42\u5927\u5199 Base32\uff0cBase64 \u7684\u51fd\u6570\u5199\u6cd5\u7c7b\u4f3c\uff0c\u4e0d\u518d\u8d58\u8ff0 Pycryptodome \u8be5\u5e93\u63d0\u4f9b\u4e00\u4e2a\u65b9\u4fbf\u5feb\u6377\u7684\u51fd\u6570 bytes_to_long() \uff0c\u63a5\u6536\u4e00\u4e2a bytes \uff0c\u5e76\u8fd4\u56de\u5341\u8fdb\u5236\u4e0b\u7684 Base16 \u7f16\u7801\u503c int Python from Crypto.Util.number import * bytes_to_long ( b 'crypto {4da_1s_7he_K3y} ' ) # 37207601978879818689532919055604181433045365814425981 bytes_to_long ( b 'crypto {4da_1s_7he_K3y} ' ) == int ( base64 . b16encode ( b 'crypto {4da_1s_7he_K3y} ' ) . decode (), 16 ) # True","title":"\u7f16\u7801|Encode"},{"location":"ctf/ch5/#encode","text":"\u7f16\u7801\uff08encode\uff09\u7684\u76ee\u7684\u4e0d\u662f\u4e3a\u4e86\u52a0\u5bc6\uff0c\u800c\u662f\u4ee3\u8868\u4fe1\u606f\u7684\u53e6\u5916\u4e00\u79cd\u8868\u8fbe\u65b9\u5f0f\u3002\u5c06\u539f\u59cb\u4fe1\u606f\u8f6c\u5316\u4e3a\u7f16\u7801\u4fe1\u606f\u8fdb\u884c\u4f20\u8f93\uff0c\u53ef\u4ee5\u89e3\u51b3\u4e00\u4e9b\u7279\u6b8a\u5b57\u7b26\u3001\u4e0d\u53ef\u89c1\u5b57\u7b26\u7684\u4f20\u8f93\u95ee\u9898 \u63a5\u6536\u8005\u5c06\u7f16\u7801\u4fe1\u606f\u518d\u8f6c\u5316\u4e3a\u539f\u59cb\u4fe1\u606f\uff0c\u8f6c\u5316\u7684\u8fc7\u7a0b\u79f0\u4e4b\u4e3a\u89e3\u7801\uff08decode\uff09","title":"\u7f16\u7801 | Encode"},{"location":"ctf/ch5/#_1","text":"\u8fdb\u5236\u8f6c\u6362\u5728\u5bc6\u7801\u5b66\u4e2d\u5341\u5206\u5e38\u89c1\uff0c\u56e0\u4e3a\u4e0d\u540c\u8fdb\u5236\u4e0b\u7684\u5b57\u7b26\u96c6\u5927\u5c0f\u4e0d\u540c\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u79cd\u5929\u7136\u7684\u7f16\u7801\u65b9\u5f0f","title":"\u8fdb\u5236\u8f6c\u6362"},{"location":"ctf/ch5/#102816","text":"Python \u7684\u5185\u7f6e\u51fd\u6570 bin() \uff0c oct() \uff0c hex() \u63a5\u6536 int \uff0c\u5e76\u8f93\u51fa\u5bf9\u5e94\u8fdb\u5236\u4e0b\u7684 str Python bin ( 59 ) # '0b111011' oct ( 59 ) # '0o73' hex ( 59 ) # '0x3b' \u7531\u4e0a\u8ff0\u53ef\u77e5\uff0c\u5982\u679c\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u7279\u5b9a\u8fdb\u5236\u4e0b\u7684 int \u5b57\u9762\u503c\uff0c\u53ea\u9700\u8981\u52a0\u4e0a\u5bf9\u5e94\u7684\u524d\u7f00\u5373\u53ef Python bin ( 0b111011 ) # '0b111011' oct ( 0o73 ) #'0o73' hex ( 0x3b ) # '0x3b'","title":"10\u8fdb\u5236\u8f6c2/8/16\u8fdb\u5236"},{"location":"ctf/ch5/#281610","text":"Python \u7684\u5185\u7f6e\u51fd\u6570 int() \u63a5\u6536 str \uff0c\u5e76\u8f93\u51fa\u53c2\u6570\u8fdb\u5236\u4e0b\u7684 int \uff08\u5e38\u5e38\u752810\u8fdb\u5236\u8868\u793a\uff0c\u6ca1\u6709\u4efb\u4f55\u524d\u7f00\uff09 Python int ( '111011' , 2 ) # 59 int ( '73' , 8 ) # 59 int ( '3b' , 16 ) # 59","title":"2/8/16\u8fdb\u5236\u8f6c10\u8fdb\u5236"},{"location":"ctf/ch5/#leet","text":"Leet\uff08\u82f1\u6587\u4e2d\u4ea6\u79f0 leetspeak \u6216 eleet\uff09\uff0c\u53c8\u79f0\u9ed1\u5ba2\u8bed\uff0c\u6307\u4e00\u79cd\u53d1\u6e90\u4e8e\u897f\u65b9\u56fd\u5bb6\u7684BBS\u3001\u5728\u7ebf\u6e38\u620f\u548c\u9ed1\u5ba2\u793e\u7fa4\u6240\u4f7f\u7528\u7684\u6587\u5b57\u4e66\u5199\u65b9\u5f0f \u901a\u5e38\u662f\u628a\u62c9\u4e01\u5b57\u6bcd\u8f6c\u53d8\u6210\u6570\u5b57\u6216\u662f\u7279\u6b8a\u7b26\u53f7\uff0c\u4f8b\u5982 E \u5199\u6210 3\u3001A \u5199\u6210 4 \u7b49\u3002\u6216\u662f\u5c06\u5355\u5b57\u5199\u6210\u540c\u97f3\u7684\u5b57\u6bcd\u6216\u6570\u5b57\uff0c\u5982 to \u5199\u6210 2\u3001for \u5199\u6210 4 \u7b49 \u5728 CTF \u4e2d\uff0c\u5f88\u591a\u7ebf\u4e0a\u8d5b\u7684 flag \u4e5f\u91c7\u7528\u7684\u8fd9\u6837\u7684\u5199\u6cd5\uff0c\u4e0d\u4ec5\u7f8e\u89c2\u800c\u4e14\u4e5f\u52a0\u5f3a\u4e86\u590d\u6742\u6027 \u5e38\u89c1\u7684\u5355\u5b57\u8f6c\u6570\u5b57\u5199\u6cd5\u6709 A\uff1a4 B\uff1a8 E\uff1a3 G\uff1a6 I/L\uff1a1 O\uff1a0 S\uff1a5 T\uff1a7 Z\uff1a2 \u4f8b\u5982\u73b0\u6709\u4e00\u4e2a\u5bc6\u6587 Ada is the key. \u6211\u4eec\u53ef\u4ee5\u5199\u6210\u4e00\u4e2aflag Text Only crypto{4da_1s_7he_K3y}","title":"Leet\u8bed"},{"location":"ctf/ch5/#str-bytes-python","text":"","title":"str \u4e0e bytes \u7c7b\u578b\uff08Python\uff09"},{"location":"ctf/ch5/#trick","text":"str \u7c7b\u578b Python list ( r 'crypto {4da_1s_7he_K3y} ' ) # ['c','r','y','p','t',\u00b7\u00b7\u00b7,'y','}'] '' . join ( list ( r 'crypto {4da_1s_7he_K3y} ' )) # 'crypto{4da_1s_7he_K3y}' 'crypto {4da_1s_7he_K3y} ' . upper () # 'CRYPTO{4DA_1S_7HE_K3Y}' 'crypto {4da_1s_7he_K3y} ' . lower () # 'crypto{4da_1s_7he_k3y}' '1100' . zfill ( 8 ) # '00001100' bytes \u7c7b\u578b Python list ( b 'crypto {4da_1s_7he_K3y} ' ) # [99,114,121,112,116,\u00b7\u00b7\u00b7,121,125] bytes ( list ( b 'crypto {4da_1s_7he_K3y} ' )) # b'crypto{4da_1s_7he_K3y}'","title":"\u5e38\u7528 Trick"},{"location":"ctf/ch5/#str-bytes","text":"\u5b57\u9762\u503c\u8f6c\u6362 str \u7684\u5b57\u9762\u503c\u4e0e bytes \u7684\u5b57\u9762\u503c\u5c55\u793a\u5185\u5bb9\u662f\u4e00\u6837\u7684\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u524d\u7f00 b Python type ( 'crypto {4da_1s_7he_K3y} ' ) # str type ( b 'crypto {4da_1s_7he_K3y} ' ) # bytes \u53d8\u91cf\u8f6c\u6362 str \u7c7b\u578b\u4e0b\u6709 .encode() \u51fd\u6570\uff0c bytes \u7c7b\u578b\u4e0b\u6709\u5bf9\u5e94\u7684 .decode() \u51fd\u6570 Python 'crypto {4da_1s_7he_K3y} ' . encode () # b'crypto{4da_1s_7he_K3y}' b 'crypto {4da_1s_7he_K3y} ' . decode () # 'crypto{4da_1s_7he_K3y}'","title":"str \u4e0e bytes \u7c7b\u578b\u7684\u8f6c\u6362"},{"location":"ctf/ch5/#ascii","text":"\u4e00\u79cd 7 \u4f4d\u7f16\u7801\u6807\u51c6\uff0c\u4f7f\u7528\u6574\u6570 0-127 \u6765\u8868\u793a\u5bf9\u5e94\u5b57\u7b26\uff0c\u5176\u5b57\u7b26\u96c6\u4fbf\u662f ASCII \u7801\u8868 Python \u7684\u5185\u7f6e\u51fd\u6570 ord() \u63a5\u6536\u5355\u4e2a str / chr \uff0c\u8fd4\u56de int \u4e3a\u5176\u5bf9\u5e94\u7684 ASCII \u7801\u503c Python ord ( 'A' ) # 65 Python \u7684\u5185\u7f6e\u51fd\u6570 chr() \u63a5\u6536 int \uff0c\u8fd4\u56de str \u4f5c\u4e3a\u5bf9\u5e94\u7684 ASCII \u7801 Python chr ( 65 ) # 'A'","title":"ASCII"},{"location":"ctf/ch5/#hex-base16","text":"Hex \u5373 Base16 \u7f16\u7801\uff0cBase16 \u6307\u7684\u662f\u5176\u5b57\u7b26\u96c6\u4e3a 0-9\u3001A-F \u517116\u4e2a\u5b57\u7b26\uff0c\u7c7b\u4f3c\u7684\u8fd8\u6709 Base32\uff0cBase64\u7f16\u7801\uff08\u9664\u5f00\u8865\u4f4d\u7684 '='\uff09","title":"Hex | Base16"},{"location":"ctf/ch5/#_2","text":"ASCII \u7f16\u7801\u4e0b\uff0c\u4e00\u822c\u7684\u82f1\u6587\u5b57\u7b26\u5927\u5c0f\u5747\u4e3a 1byte\uff0c\u5373 8bit\uff0c\u4e8e\u662f\u53ef\u4ee5\u5c06\u5176\u5207\u5206\u4e3a\u4e24\u4e2a 4bit \u770b\u5f85\uff0c\u800c\u5bf9\u4e8e\u4e00\u4e2a \u5360\u4f4d 4bit \u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ea\u9700\u8981 \\(2^4=16\\) \u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u96c6\u5408\u4fbf\u80fd\u4e00\u4e00\u5bf9\u5e94\uff0c\u8fd9\u5c31\u662f Base16 \u7684\u539f\u7406 \u5b9e\u9645\u7f16\u7801\u4e2d\uff0c\u9996\u5148\u5c06 ASCII \u7f16\u7801\u4e0b\u7684\u4fe1\u606f\uff0c\u5373\u539f\u59cb\u4fe1\u606f\u53d6 ASCII \u7801\u503c\u5e76\u4e8c\u8fdb\u5236\u5c55\u5f00\uff0c\u5bf9\u4e0d\u8db3 8 \u4f4d\u7684\u8fdb\u884c\u9ad8\u4f4d\u8865 0 \uff0c\u5f97\u5230\u4ee3\u8868\u539f\u4fe1\u606f\u7684\u4e8c\u8fdb\u5236\u4e32\uff0c\u5176\u4f4d\u6570\u5fc5\u4e3a 8 \u7684\u500d\u6570 \u63a5\u7740\u6211\u4eec\u5c06\u8be5\u4e8c\u8fdb\u5236\u4e32\u6309 4bit \u5212\u5206\u4e3a\u5c0f\u8282\uff0c\u6bcf\u4e00\u5c0f\u8282\u4ee3\u8868\u7684\u503c\u4fbf\u5bf9\u5e94 Base16 \u7801\u8868\u4e0b\u76f8\u5e94\u7684\u5b57\u7b26","title":"\u539f\u7406"},{"location":"ctf/ch5/#_3","text":"\u7531\u4e8e ASCII \u7801 8bit \u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff0cBase16 \u7801 4bit \u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff0c\u5373\u6bcf 1 \u4e2a ASCII \u5b57\u7b26\u4e00\u5b9a\u53ef\u4ee5\u7528 2 \u4e2aBase16 \u5b57\u7b26\u8868\u793a\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u77e5 Base16 \u7f16\u7801\u7684\u4fe1\u606f\u5b57\u7b26\u6570\u4e00\u822c\u4e3a\u5076\u6570\uff0c\u5e76\u4e14\u5f88\u5c11\u9700\u8981 '=' \u8865\u4f4d","title":"\u7279\u70b9"},{"location":"ctf/ch5/#_4","text":"\u4e2a\u4eba\u5b9e\u73b0 \u867d\u7136\u4e00\u822c\u7684 Base \u7f16\u7801\u90fd\u9700\u8981\u7801\u8868\uff0c\u4f46 Base16 \u7801\u503c\u5bf9\u5e94\u7684\u5b57\u7b26\u4fbf\u662f\u5176 16 \u8fdb\u5236\u4e0b\u7684\u8868\u8fbe\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u501f\u52a9\u524d\u6587\u7684\u8fdb\u5236\u8f6c\u6362\u51fd\u6570\u5b9e\u73b0 Base16 \u7f16\u7801 Python def my_hex ( input_str ): bstream = [ bin ( ord ( o ))[ 2 :] . zfill ( 8 ) for o in input_str ] tmp = [] for item in bstream : tmp . append ( hex ( int ( item [: 4 ], 2 ))[ 2 :]) tmp . append ( hex ( int ( item [ 4 :], 2 ))[ 2 :]) return '' . join ( tmp ) my_hex ( r 'crypto {4da_1s_7he_K3y} ' ) # '63727970746f7b3464615f31735f3768655f4b33797d' \u5176\u63a5\u6536 str \uff0c\u5e76\u8fd4\u56de\u5bf9\u5e94 Base16 \u7f16\u7801\u7684 str \u3002\u6b64\u5904 'crypto{4da_1s_7he_K3y}' \u7684 str \u5b57\u9762\u503c\u4e2d\u82b1\u62ec\u53f7\u4f1a\u88ab\u8f6c\u4e49\uff0c\u6545\u52a0\u4e0a r \u524d\u7f00\u8868\u793a\u539f\u59cb\u5b57\u7b26\u4e32 \u5185\u7f6e\u51fd\u6570 \u6bd4\u8f83\u5e38\u7528\u7684\u662f bytes \u7c7b\u578b\u4e0b\u7684 .hex() \u51fd\u6570\uff0c\u5b83\u5c06\u5176\u7f16\u7801\u4e3a str \u7c7b\u578b\u7684 Base16 \u7f16\u7801 Python b 'crypto {4da_1s_7he_K3y} ' . hex () # '63727970746f7b3464615f31735f3768655f4b33797d' \u4ee5\u53ca bytes.fromhex() \u51fd\u6570\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a str \u7c7b\u578b\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a bytes \u5bf9\u5e94\u539f\u59cb\u5b57\u7b26\u4e32 Python bytes . fromhex ( '63727970746f7b3464615f31735f3768655f4b33797d' ) # b'crypto{4da_1s_7he_K3y}'","title":"\u5de5\u5177"},{"location":"ctf/ch5/#base32-base64","text":"\u4e0e Base16 \u7f16\u7801\u7c7b\u4f3c\uff0cBase32 \u4e0e Base64 \u5206\u522b\u7528 32 \u4e2a\u5b57\u7b26\uff08\u5360\u4f4d 5bit\uff09\u4e0e 64 \u4e2a\u5b57\u7b26\uff08\u5360\u4f4d 6bit\uff09\u8868\u793a\u539f\u59cb\u5b57\u7b26","title":"Base32 &amp; Base64"},{"location":"ctf/ch5/#_5","text":"Base16\uff1a0-9\uff0cA-F \u5171 16 \u4e2a\u4ee5\u53ca\u8865\u4f4d\u7684 '=' Base32\uff1a2-7\uff0cA-Z \u5171 32 \u4e2a\u4ee5\u53ca\u8865\u4f4d\u7684 '=' Base64\uff1a0-9\uff0cA-Z\uff0ca-z\uff0c+\uff0c/ \u5171 64 \u4e2a\u4ee5\u53ca\u8865\u4f4d\u7684 '='","title":"\u5b57\u7b26\u96c6"},{"location":"ctf/ch5/#_6","text":"\u6bcf 5/3 \u4e2a\u539f\u59cb\u5b57\u7b26\u4e00\u5b9a\u80fd\u7528 8/4\u4e2a Base32/64 \u5b57\u7b26\u8868\u793a Base32 \u7f16\u7801\u957f\u5ea6\u5e38\u5e38\u662f 8 \u7684\u500d\u6570\uff0cBase64 \u7f16\u7801\u957f\u5ea6\u5e38\u5e38\u662f 4 \u7684\u500d\u6570\uff0c\u4e14\u65f6\u5e38\u6709 '=' \u8865\u4f4d","title":"\u7279\u70b9"},{"location":"ctf/ch5/#_7","text":"\u4e2a\u4eba\u5b9e\u73b0 \uff08Base64\uff09 \u9996\u5148\u9700\u8981\u51c6\u5907\u4e00\u4e2a Base64 \u7801\u8868 Python index = [ i for i in range ( 64 )] val = [ chr ( i ) for i in range ( ord ( 'A' ), ord ( 'A' ) + 26 )] + [ chr ( i ) for i in range ( ord ( 'a' ), ord ( 'a' ) + 26 )] + [ chr ( i ) for i in range ( ord ( '0' ), ord ( '0' ) + 10 )] + [ '+' , '/' ] b64map = dict ( zip ( index , val )) \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u9009\u7528\u79c1\u6709\u7801\u8868\uff0c\u5373\u79c1\u6709 Base64 \u7f16\u7801 Python def my_b64encode ( input_str , dct ): bstream = '' . join ([ bin ( ord ( o ))[ 2 :] . zfill ( 8 ) for o in input_str ]) pad = 0 if len ( bstream ) % 24 == 8 : pad = 2 if len ( bstream ) % 24 == 16 : pad = 1 tmp = [] if len ( bstream ) % 6 : bstream = bstream . ljust ( len ( bstream ) + 6 - len ( bstream ) % 6 , '0' ) for i in range ( len ( bstream ) // 6 ): tmp . append ( dct [ int ( bstream [ i * 6 :( i + 1 ) * 6 ], 2 )]) return '' . join ( tmp ) + pad * '=' my_b64encode() \u63a5\u6536 str \u4e0e\u4e00\u4e2a dict \uff0c\u8fd4\u56de\u7f16\u7801\u540e\u7684 str Python def my_b64decode ( input_str , dct ): offset = 0 if input_str . count ( '=' ) == 1 : offset = 2 input_str = input_str [: - 1 ] if input_str . count ( '=' ) == 2 : offset = 4 input_str = input_str [: - 2 ] if offset : bstream = '' . join ([ bin ( dct [ o ])[ 2 :] . zfill ( 6 ) for o in input_str ])[: - offset ] else : bstream = '' . join ([ bin ( dct [ o ])[ 2 :] . zfill ( 6 ) for o in input_str ]) tmp = [] for i in range ( len ( bstream ) // 8 ): tmp . append ( chr ( int ( bstream [ i * 8 :( i + 1 ) * 8 ], 2 ))) return '' . join ( tmp ) my_b64decode() \u63a5\u6536\u4e00\u4e2a str \u4e0e\u4e00\u4e2a\u9006\u5411\u7684\u7801\u8868 dict \uff0c\u8fd4\u56de\u89e3\u7801\u540e\u7684 str \u9006\u5411\u7801\u8868\u53ef\u7b80\u5355\u4ea4\u6362\u524d\u9762\u7801\u8868\u51c6\u5907\u8fc7\u7a0b\u4e2d\u7684 zip() \u53c2\u6570\u987a\u5e8f\u5f97\u5230 Python re_map = dict ( zip ( val , index )) \u5185\u7f6e\u51fd\u6570 Python \u7684\u6807\u51c6\u5e93 base64 \u63d0\u4f9b\u4e00\u7cfb\u5217 Base \u7f16\u7801\u51fd\u6570 base64.b16encode() \u63a5\u6536 bytes \uff0c\u5e76\u8fd4\u56de Base16 \u7f16\u7801\u540e\u7684 bytes Python base64 . b16encode ( b 'crypto {4da_1s_7he_K3y} ' ) # b'63727970746F7B3464615F31735F3768655F4B33797D' \u4e0e bytes \u5185\u7f6e\u7684\u51fd\u6570 .hex() \u4e0d\u540c\uff0c\u5b83\u8fd4\u56de\u7684\u662f bytes \uff0c\u5e76\u4e14\u6570\u503c\u4e2d\u7684\u5b57\u6bcd\u90fd\u662f\u5927\u5199 Python base64 . b16encode ( b 'crypto {4da_1s_7he_K3y} ' ) . decode () . lower () == b 'crypto {4da_1s_7he_K3y} ' . hex () # True \u4ee5\u53ca base64.b16decode() \uff0c\u5b83\u63a5\u6536 str \u6216 bytes \uff0c \u5e76\u8fd4\u56de\u5bf9\u5e94\u539f\u4fe1\u606f\u7684 bytes Python base64 . b16decode ( b '63727970746F7B3464615F31735F3768655F4B33797D' ) # b'crypto{4da_1s_7he_K3y}' \u540c\u6837\u5b83\u4e0e bytes.fromhex() \u4e0d\u540c\uff0c\u5bf9\u91cc\u9762\u5b57\u6bcd\u8981\u6c42\u5927\u5199 Base32\uff0cBase64 \u7684\u51fd\u6570\u5199\u6cd5\u7c7b\u4f3c\uff0c\u4e0d\u518d\u8d58\u8ff0 Pycryptodome \u8be5\u5e93\u63d0\u4f9b\u4e00\u4e2a\u65b9\u4fbf\u5feb\u6377\u7684\u51fd\u6570 bytes_to_long() \uff0c\u63a5\u6536\u4e00\u4e2a bytes \uff0c\u5e76\u8fd4\u56de\u5341\u8fdb\u5236\u4e0b\u7684 Base16 \u7f16\u7801\u503c int Python from Crypto.Util.number import * bytes_to_long ( b 'crypto {4da_1s_7he_K3y} ' ) # 37207601978879818689532919055604181433045365814425981 bytes_to_long ( b 'crypto {4da_1s_7he_K3y} ' ) == int ( base64 . b16encode ( b 'crypto {4da_1s_7he_K3y} ' ) . decode (), 16 ) # True","title":"\u5de5\u5177"},{"location":"others/blog/","text":"\u57fa\u4e8e mkdocs-material \u7684 Blog \u5de5\u4f5c\u6d41 \u00b6 \u665a\u4e0a\u8ddf\u5efa\u7b51\u7cfb\u5927\u795e\u804a\u5929\uff0c\u8c08\u5230\u5982\u4f55\u642d\u5efa\u8fd9\u4e2aBlog\u7684\uff0c\u4e8e\u662f\u8bb0\u5f55\u4e00\u4e0b\u81ea\u5df1\u6478\u7d22\u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u8bfb\u8005\u611f\u5174\u8da3\u4e5f\u53ef\u4ee5\u81ea\u5df1\u8bd5\u8bd5 \u521d\u8877 \u00b6 \u8ddf\u5927\u795e\u804a\u5929\u7684\u65f6\u95f4\uff0c\u662f\u6109\u5feb\u4e0e\u8f7b\u677e\u7684\uff0c\u4f46\u4e5f\u610f\u8bc6\u5230\u4e0d\u662f\u6240\u6709\u4eba\u90fd\u5bf9\u521b\u5efa\u4e00\u4e2a\u6258\u7ba1\u5728Gitub Pages\u4e0a\u7684\u9759\u6001\u9875\u9762\u611f\u5174\u8da3\u3002\u8fd9\u65e2\u4e0d\u662f\u7b80\u5386\u7684\u52a0\u5206\u9879\uff0c\u4e5f\u4e0d\u662fSRTP\u7684\u521b\u65b0\u70b9\uff0c\u66f4\u4e0d\u662f\u4fdd\u7814\u7684\u7ee9\u70b9\uff0c\u751a\u81f3\u5bf9\u4e8e\u975e\u8ba1\u7b97\u673a\u7c7b\u7684\u5b66\u751f\uff08\u4f8b\u5982\u5efa\u7b51\uff09\uff0c\u5927\u795e\u8bf4\u4ed6\u4eec\u66f4\u503e\u5411\u4e8e\u53bb\u4e13\u95e8\u7684\u7f51\u7ad9\u4e0e\u516c\u4f17\u53f7\u83b7\u53d6\u4e1a\u754c\u76f8\u5173\u7684\u8d44\u8baf \u4e8e\u662f\u6700\u540e\u4e00\u4e2a\u7acb\u610f\u2014\u2014\u7528\u4e8e\u5411\u4ed6\u4eba\u5c55\u793a\uff0c\u591a\u591a\u5c11\u5c11\u4e5f\u88ab\u5426\u51b3 \u4f46\u6211\u5f88\u559c\u6b22\uff0c\u56e0\u4e3a\u6211\u5199\u5b57\u5f88\u6162\uff0c\u6253\u5b57\u5c1a\u53ef\u3002\u914d\u5408 latex \u4e0e markdown \uff0c\u6211\u80fd\u4e00\u70b9\u70b9\u628a\u81ea\u5df1\u5728\u73b0\u5b9e\u4e0e\u7f51\u7edc\u7684\u6536\u83b7\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u6837\u5728\u5f88\u4e45\u5f88\u4e45\u4e4b\u540e\uff0c\u6211\u60f3\u62ff\u70b9\u4e1c\u897f\u8bc1\u660e\u81ea\u5df1\u505a\u4e86\u70b9\u4ec0\u4e48\u7684\u65f6\u5019\uff0c\u597d\u6b79\u8fd8\u6709\u4e2a\u8fd9\u4e2a \u5176\u5b9e\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u4e5f\u7b97\u804a\u4ee5\u81ea\u6170\u7684\u624b\u6bb5\uff0c\u4e5f\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6211\u79c1\u5fc3\u5e0c\u671b\u66f4\u591a\u7684\u4eba\u80fd\u770b\u5230\u8fd9\u4e2a\u535a\u5ba2\uff0c\u770b\u5230\u5bf9\u4e16\u754c\u65e0\u6b62\u65e0\u606f\u7684\u63a2\u7d22\u613f\u671b \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u57fa\u672c\u7684\u547d\u4ee4\u884c\u64cd\u4f5c Git\u4f7f\u7528 \u4efb\u610f\u4ee3\u7801\u7f16\u8f91\u5668\u7684\u4f7f\u7528 Github\u57fa\u672c\u4f7f\u7528 mkdocs-material \u5b89\u88c5 \u00b6 \u5177\u4f53\u53c2\u8003\u5b98\u7f51Installation\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/getting-started/ \u521b\u5efa\u4ed3\u5e93 \u00b6 \u5728GitHub\u4e0a\u521b\u5efa\u4e00\u4e2arepository \u5728Repository name\u4e00\u680f\u5199\u4e0a <\u4f60\u7684\u7528\u6237\u540d>.github.io \uff0c\u6b64\u65f6\u5b83\u5e94\u8be5\u4f1a\u63d0\u9192\u4f60\u81ea\u52a8\u542f\u52a8\u4e86github-pages\u670d\u52a1 Git\u540c\u6b65\u4ed3\u5e93\u5e76\u521b\u5efamkdocs\u9879\u76ee \u00b6 \u5728\u672c\u5730\u8fdb\u884cgit clone\uff0c\u5e76\u521d\u59cb\u5316\u9879\u76ee\uff0c\u5177\u4f53\u53c2\u8003Creating your site\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/creating-your-site/ \u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e \u00b6 \u9664\u5f00\u5b98\u7f51\u53c2\u8003\u7684\u8bbe\u7f6e YAML theme : name : material \u6709\u76f8\u5f53\u591a\u7684\u8bbe\u7f6e\u53ef\u4ee5\u81ea\u884c\u8c03\u8282\uff0c\u4e0b\u4e3a\u4e2a\u4eba\u4e60\u60ef\u7684\u7684 mkdocs.yml \u8bbe\u7f6e\uff0c\u5b8c\u6574\u6e90\u6587\u4ef6\u4e3a mkdocs.yml \u57fa\u7840\u754c\u9762 \u00b6 YAML site_name : MZY Blog theme : name : material custom_dir : overrides language : zh logo : assets/logo.png favicon : assets/favicon.png palette : - scheme : default primary : deep purple accent : deep purple toggle : name : Switch to light mode icon : material/brightness-7 - scheme : slate primary : deep purple accent : deep purple toggle : name : Switch to dark mode icon : material/brightness-4 features : - navigation.instant - navigation.tracking - navigation.tabs - navigation.expand - navigation.top - toc.follow # - header.autohide # - content.action.edit # - content.action.view repo_url : https://github.com/Alexair059/Alexair059.github.io repo_name : Alexair059.github.io edit_uri : edit/main/docs/ extra : social : - icon : fontawesome/brands/github link : https://github.com/Alexair059 name : My Github - icon : fontawesome/solid/paper-plane link : mailto:alexair059@gmail.com name : My Email copyright : Copyright &copy; 2020 - 2023 Alexair \u8bed\u6cd5\u652f\u6301 \u00b6 YAML markdown_extensions : # Python Markdown - abbr - admonition - attr_list - def_list - footnotes - md_in_html - toc : permalink : true # Python Markdown Extensions - pymdownx.arithmatex : generic : true - pymdownx.betterem - pymdownx.caret - pymdownx.mark - pymdownx.tilde - pymdownx.details - pymdownx.highlight : auto_title : true - pymdownx.superfences - pymdownx.inlinehilite - pymdownx.keys - pymdownx.smartsymbols - pymdownx.tabbed : alternate_style : true - pymdownx.tasklist : custom_checkbox : true \u81ea\u5b9a\u4e49CSS\u7c7b\u4e0eJS\u7c7b \u00b6 YAML extra_javascript : - javascripts/mathjax.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js extra_css : - css/custom.css \u81ea\u5b9a\u4e49\u63d2\u4ef6 \u00b6 YAML plugins : - search : {} - encryptcontent : title_prefix : '[\u9650\u5236]' summary : '[\u8be5\u5185\u5bb9\u5df2\u88ab\u52a0\u5bc6\u4fdd\u62a4]' encryption_info_message : '\u8054\u7cfb\u535a\u4e3b\u4ee5\u83b7\u5f97\u6743\u9650' placeholder : 'Password' decryption_failure_message : '\u5bc6\u7801\u9519\u8bef' # password_button: True # password_button_text: 'unlock' input_class : input-form # button_class: confirm-button - git-revision-date-localized : enable_creation_date : true type : timeago \u540c\u6b65\u7ad9\u70b9\u4e0e\u9879\u76ee\uff08\u624b\u52a8\uff09 \u00b6 \u5177\u4f53\u53ef\u53c2\u8003\u5b98\u7f51Publishing your site\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/publishing-your-site/ \u5728\u9879\u76ee\u6839\u76ee\u5f55\u8f93\u5165 Bash mkdocs gh-deploy \u540c\u6b65\u7ad9\u70b9\uff0c\u518d\u8fdb\u884cGit\u540c\u6b65\u5373\u53ef \u540c\u6b65\u7ad9\u70b9\u4e0e\u9879\u76ee\uff08\u81ea\u52a8 | \u57fa\u4e8eGithub Action\uff09 \u00b6 \u901a\u8fc7Github Action\u8bbe\u5b9a\u5de5\u4f5c\u6d41\uff0c\u53ef\u4ee5\u4ec5\u9700\u540c\u6b65repo\u800c\u4e0d\u7528\u81ea\u5df1\u7f16\u8bd1\uff0c\u5e76\u5728mkdocs-material\u4e0a\u8fd8\u63d0\u4f9b\u7f51\u9875\u7f16\u8f91\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u8bf4\u76f8\u5f53\u53cb\u597d\u4e86 \u5177\u4f53\u53ef\u53c2\u8003\u5b98\u7f51Publishing your site\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/publishing-your-site/ Warning \u4e2a\u4eba\u7ecf\u9a8c\u8868\u793a\uff0c\u5982\u679c\u4f60\u542f\u7528\u4e86\u57fa\u4e8eGithub Action\u7684\u90e8\u7f72\u65b9\u5f0f\uff0c\u9875\u5c3e\u7684\u6700\u540e\u521b\u5efa\u65f6\u95f4\u53ef\u80fd\u5f02\u5e38\uff0c\u53d8\u5f97\u4e0e\u6700\u540e\u66f4\u65b0\u65f6\u95f4\u4e00\u81f4\uff0c\u8bf7\u914c\u60c5\u8003\u8651\u542f\u7528","title":"Blog\u642d\u5efa"},{"location":"others/blog/#mkdocs-material-blog","text":"\u665a\u4e0a\u8ddf\u5efa\u7b51\u7cfb\u5927\u795e\u804a\u5929\uff0c\u8c08\u5230\u5982\u4f55\u642d\u5efa\u8fd9\u4e2aBlog\u7684\uff0c\u4e8e\u662f\u8bb0\u5f55\u4e00\u4e0b\u81ea\u5df1\u6478\u7d22\u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u8bfb\u8005\u611f\u5174\u8da3\u4e5f\u53ef\u4ee5\u81ea\u5df1\u8bd5\u8bd5","title":"\u57fa\u4e8e mkdocs-material \u7684 Blog \u5de5\u4f5c\u6d41"},{"location":"others/blog/#_1","text":"\u8ddf\u5927\u795e\u804a\u5929\u7684\u65f6\u95f4\uff0c\u662f\u6109\u5feb\u4e0e\u8f7b\u677e\u7684\uff0c\u4f46\u4e5f\u610f\u8bc6\u5230\u4e0d\u662f\u6240\u6709\u4eba\u90fd\u5bf9\u521b\u5efa\u4e00\u4e2a\u6258\u7ba1\u5728Gitub Pages\u4e0a\u7684\u9759\u6001\u9875\u9762\u611f\u5174\u8da3\u3002\u8fd9\u65e2\u4e0d\u662f\u7b80\u5386\u7684\u52a0\u5206\u9879\uff0c\u4e5f\u4e0d\u662fSRTP\u7684\u521b\u65b0\u70b9\uff0c\u66f4\u4e0d\u662f\u4fdd\u7814\u7684\u7ee9\u70b9\uff0c\u751a\u81f3\u5bf9\u4e8e\u975e\u8ba1\u7b97\u673a\u7c7b\u7684\u5b66\u751f\uff08\u4f8b\u5982\u5efa\u7b51\uff09\uff0c\u5927\u795e\u8bf4\u4ed6\u4eec\u66f4\u503e\u5411\u4e8e\u53bb\u4e13\u95e8\u7684\u7f51\u7ad9\u4e0e\u516c\u4f17\u53f7\u83b7\u53d6\u4e1a\u754c\u76f8\u5173\u7684\u8d44\u8baf \u4e8e\u662f\u6700\u540e\u4e00\u4e2a\u7acb\u610f\u2014\u2014\u7528\u4e8e\u5411\u4ed6\u4eba\u5c55\u793a\uff0c\u591a\u591a\u5c11\u5c11\u4e5f\u88ab\u5426\u51b3 \u4f46\u6211\u5f88\u559c\u6b22\uff0c\u56e0\u4e3a\u6211\u5199\u5b57\u5f88\u6162\uff0c\u6253\u5b57\u5c1a\u53ef\u3002\u914d\u5408 latex \u4e0e markdown \uff0c\u6211\u80fd\u4e00\u70b9\u70b9\u628a\u81ea\u5df1\u5728\u73b0\u5b9e\u4e0e\u7f51\u7edc\u7684\u6536\u83b7\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u6837\u5728\u5f88\u4e45\u5f88\u4e45\u4e4b\u540e\uff0c\u6211\u60f3\u62ff\u70b9\u4e1c\u897f\u8bc1\u660e\u81ea\u5df1\u505a\u4e86\u70b9\u4ec0\u4e48\u7684\u65f6\u5019\uff0c\u597d\u6b79\u8fd8\u6709\u4e2a\u8fd9\u4e2a \u5176\u5b9e\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u4e5f\u7b97\u804a\u4ee5\u81ea\u6170\u7684\u624b\u6bb5\uff0c\u4e5f\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6211\u79c1\u5fc3\u5e0c\u671b\u66f4\u591a\u7684\u4eba\u80fd\u770b\u5230\u8fd9\u4e2a\u535a\u5ba2\uff0c\u770b\u5230\u5bf9\u4e16\u754c\u65e0\u6b62\u65e0\u606f\u7684\u63a2\u7d22\u613f\u671b","title":"\u521d\u8877"},{"location":"others/blog/#_2","text":"\u57fa\u672c\u7684\u547d\u4ee4\u884c\u64cd\u4f5c Git\u4f7f\u7528 \u4efb\u610f\u4ee3\u7801\u7f16\u8f91\u5668\u7684\u4f7f\u7528 Github\u57fa\u672c\u4f7f\u7528","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"others/blog/#mkdocs-material","text":"\u5177\u4f53\u53c2\u8003\u5b98\u7f51Installation\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/getting-started/","title":"mkdocs-material \u5b89\u88c5"},{"location":"others/blog/#_3","text":"\u5728GitHub\u4e0a\u521b\u5efa\u4e00\u4e2arepository \u5728Repository name\u4e00\u680f\u5199\u4e0a <\u4f60\u7684\u7528\u6237\u540d>.github.io \uff0c\u6b64\u65f6\u5b83\u5e94\u8be5\u4f1a\u63d0\u9192\u4f60\u81ea\u52a8\u542f\u52a8\u4e86github-pages\u670d\u52a1","title":"\u521b\u5efa\u4ed3\u5e93"},{"location":"others/blog/#gitmkdocs","text":"\u5728\u672c\u5730\u8fdb\u884cgit clone\uff0c\u5e76\u521d\u59cb\u5316\u9879\u76ee\uff0c\u5177\u4f53\u53c2\u8003Creating your site\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/creating-your-site/","title":"Git\u540c\u6b65\u4ed3\u5e93\u5e76\u521b\u5efamkdocs\u9879\u76ee"},{"location":"others/blog/#_4","text":"\u9664\u5f00\u5b98\u7f51\u53c2\u8003\u7684\u8bbe\u7f6e YAML theme : name : material \u6709\u76f8\u5f53\u591a\u7684\u8bbe\u7f6e\u53ef\u4ee5\u81ea\u884c\u8c03\u8282\uff0c\u4e0b\u4e3a\u4e2a\u4eba\u4e60\u60ef\u7684\u7684 mkdocs.yml \u8bbe\u7f6e\uff0c\u5b8c\u6574\u6e90\u6587\u4ef6\u4e3a mkdocs.yml","title":"\u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e"},{"location":"others/blog/#_5","text":"YAML site_name : MZY Blog theme : name : material custom_dir : overrides language : zh logo : assets/logo.png favicon : assets/favicon.png palette : - scheme : default primary : deep purple accent : deep purple toggle : name : Switch to light mode icon : material/brightness-7 - scheme : slate primary : deep purple accent : deep purple toggle : name : Switch to dark mode icon : material/brightness-4 features : - navigation.instant - navigation.tracking - navigation.tabs - navigation.expand - navigation.top - toc.follow # - header.autohide # - content.action.edit # - content.action.view repo_url : https://github.com/Alexair059/Alexair059.github.io repo_name : Alexair059.github.io edit_uri : edit/main/docs/ extra : social : - icon : fontawesome/brands/github link : https://github.com/Alexair059 name : My Github - icon : fontawesome/solid/paper-plane link : mailto:alexair059@gmail.com name : My Email copyright : Copyright &copy; 2020 - 2023 Alexair","title":"\u57fa\u7840\u754c\u9762"},{"location":"others/blog/#_6","text":"YAML markdown_extensions : # Python Markdown - abbr - admonition - attr_list - def_list - footnotes - md_in_html - toc : permalink : true # Python Markdown Extensions - pymdownx.arithmatex : generic : true - pymdownx.betterem - pymdownx.caret - pymdownx.mark - pymdownx.tilde - pymdownx.details - pymdownx.highlight : auto_title : true - pymdownx.superfences - pymdownx.inlinehilite - pymdownx.keys - pymdownx.smartsymbols - pymdownx.tabbed : alternate_style : true - pymdownx.tasklist : custom_checkbox : true","title":"\u8bed\u6cd5\u652f\u6301"},{"location":"others/blog/#cssjs","text":"YAML extra_javascript : - javascripts/mathjax.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js extra_css : - css/custom.css","title":"\u81ea\u5b9a\u4e49CSS\u7c7b\u4e0eJS\u7c7b"},{"location":"others/blog/#_7","text":"YAML plugins : - search : {} - encryptcontent : title_prefix : '[\u9650\u5236]' summary : '[\u8be5\u5185\u5bb9\u5df2\u88ab\u52a0\u5bc6\u4fdd\u62a4]' encryption_info_message : '\u8054\u7cfb\u535a\u4e3b\u4ee5\u83b7\u5f97\u6743\u9650' placeholder : 'Password' decryption_failure_message : '\u5bc6\u7801\u9519\u8bef' # password_button: True # password_button_text: 'unlock' input_class : input-form # button_class: confirm-button - git-revision-date-localized : enable_creation_date : true type : timeago","title":"\u81ea\u5b9a\u4e49\u63d2\u4ef6"},{"location":"others/blog/#_8","text":"\u5177\u4f53\u53ef\u53c2\u8003\u5b98\u7f51Publishing your site\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/publishing-your-site/ \u5728\u9879\u76ee\u6839\u76ee\u5f55\u8f93\u5165 Bash mkdocs gh-deploy \u540c\u6b65\u7ad9\u70b9\uff0c\u518d\u8fdb\u884cGit\u540c\u6b65\u5373\u53ef","title":"\u540c\u6b65\u7ad9\u70b9\u4e0e\u9879\u76ee\uff08\u624b\u52a8\uff09"},{"location":"others/blog/#github-action","text":"\u901a\u8fc7Github Action\u8bbe\u5b9a\u5de5\u4f5c\u6d41\uff0c\u53ef\u4ee5\u4ec5\u9700\u540c\u6b65repo\u800c\u4e0d\u7528\u81ea\u5df1\u7f16\u8bd1\uff0c\u5e76\u5728mkdocs-material\u4e0a\u8fd8\u63d0\u4f9b\u7f51\u9875\u7f16\u8f91\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u8bf4\u76f8\u5f53\u53cb\u597d\u4e86 \u5177\u4f53\u53ef\u53c2\u8003\u5b98\u7f51Publishing your site\u4ecb\u7ecd https://squidfunk.github.io/mkdocs-material/publishing-your-site/ Warning \u4e2a\u4eba\u7ecf\u9a8c\u8868\u793a\uff0c\u5982\u679c\u4f60\u542f\u7528\u4e86\u57fa\u4e8eGithub Action\u7684\u90e8\u7f72\u65b9\u5f0f\uff0c\u9875\u5c3e\u7684\u6700\u540e\u521b\u5efa\u65f6\u95f4\u53ef\u80fd\u5f02\u5e38\uff0c\u53d8\u5f97\u4e0e\u6700\u540e\u66f4\u65b0\u65f6\u95f4\u4e00\u81f4\uff0c\u8bf7\u914c\u60c5\u8003\u8651\u542f\u7528","title":"\u540c\u6b65\u7ad9\u70b9\u4e0e\u9879\u76ee\uff08\u81ea\u52a8 | \u57fa\u4e8eGithub Action\uff09"},{"location":"web/ch1/","text":"Nginx \u00b6 Nginx\u4e3b\u8981\u5de5\u4f5c\u6d41\u6d89\u53ca conf \u6587\u4ef6\u7684\u914d\u7f6e\uff0cnginx\u7684\u91cd\u542f\uff0c\u5b9e\u73b0\u53cd\u5411\u4ee3\u7406 \u57fa\u672c\u8bbe\u7f6e \u00b6 conf \u6587\u4ef6\u7684\u914d\u7f6e \u00b6 Nginx\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff1a /usr/local/nginx/conf \uff0c\u6587\u4ef6\u540d\uff1a nginx.conf \u591a\u4f59\u914d\u7f6e\u81ea\u884c\u67e5\u627e\uff0c\u6b64\u5904\u7ed9\u51faserver\u5757\u7684\u5177\u4f53\u8bbe\u7f6e\uff1a \u5355\u7eaf\u9759\u6001\u8d44\u6e90\u4ee3\u7406 Text Only server { listen 80; server_name localhost; location / { root html; index river.pdf index.html; } location /Echo_of_Starsong/introduction { root /home/myweb; index introduction.html; } location /AI/Disco_Diffusion/Official_Guide/CH { root /home/myweb; index DD_CH_Basic.pdf; } location /AI/Disco_Diffusion/Official_Guide/EN { root /home/myweb; index DD_EN.pdf; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } } \u53cd\u5411\u4ee3\u7406\u81f3uWSGI\uff0c\u516c\u7f51\u7aef\u53e3\u4e3a8000\uff0c\u5185\u90e8\u7aef\u53e3\u4e3a5000 Text Only server { listen 8000; server_name localhost; location / { include uwsgi_params; uwsgi_pass 127.0.0.1:5000; } } nginx\u7684\u91cd\u542f \u00b6 https://blog.csdn.net/m290345792/article/details/78518360 \u9996\u5148\u5efa\u7acb\u4e00\u4e2a\u8f6f\u94fe\u63a5\uff0c\u4ee5\u4fbf\u5728\u9879\u76ee\u6839\u76ee\u5f55\u76f4\u63a5\u6267\u884cnginx\u7684bin\u6587\u4ef6: \u5f53\u524d\u6839\u76ee\u5f55\u4e3a\uff1a /home \uff0cnginx\u7684bin\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a /usr/local/nginx/sbin Bash ln -s /usr/local/nginx/sbin/nginx nginx \u66f4\u6539 conf \u6587\u4ef6\u540e\uff0c\u5bf9\u8bed\u6cd5\u8fdb\u884c\u68c0\u67e5\uff1a Bash ./nginx -t \u91cd\u542f\uff1a Bash ./nginx -s reload","title":"Nginx"},{"location":"web/ch1/#nginx","text":"Nginx\u4e3b\u8981\u5de5\u4f5c\u6d41\u6d89\u53ca conf \u6587\u4ef6\u7684\u914d\u7f6e\uff0cnginx\u7684\u91cd\u542f\uff0c\u5b9e\u73b0\u53cd\u5411\u4ee3\u7406","title":"Nginx"},{"location":"web/ch1/#_1","text":"","title":"\u57fa\u672c\u8bbe\u7f6e"},{"location":"web/ch1/#conf","text":"Nginx\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff1a /usr/local/nginx/conf \uff0c\u6587\u4ef6\u540d\uff1a nginx.conf \u591a\u4f59\u914d\u7f6e\u81ea\u884c\u67e5\u627e\uff0c\u6b64\u5904\u7ed9\u51faserver\u5757\u7684\u5177\u4f53\u8bbe\u7f6e\uff1a \u5355\u7eaf\u9759\u6001\u8d44\u6e90\u4ee3\u7406 Text Only server { listen 80; server_name localhost; location / { root html; index river.pdf index.html; } location /Echo_of_Starsong/introduction { root /home/myweb; index introduction.html; } location /AI/Disco_Diffusion/Official_Guide/CH { root /home/myweb; index DD_CH_Basic.pdf; } location /AI/Disco_Diffusion/Official_Guide/EN { root /home/myweb; index DD_EN.pdf; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } } \u53cd\u5411\u4ee3\u7406\u81f3uWSGI\uff0c\u516c\u7f51\u7aef\u53e3\u4e3a8000\uff0c\u5185\u90e8\u7aef\u53e3\u4e3a5000 Text Only server { listen 8000; server_name localhost; location / { include uwsgi_params; uwsgi_pass 127.0.0.1:5000; } }","title":"conf \u6587\u4ef6\u7684\u914d\u7f6e"},{"location":"web/ch1/#nginx_1","text":"https://blog.csdn.net/m290345792/article/details/78518360 \u9996\u5148\u5efa\u7acb\u4e00\u4e2a\u8f6f\u94fe\u63a5\uff0c\u4ee5\u4fbf\u5728\u9879\u76ee\u6839\u76ee\u5f55\u76f4\u63a5\u6267\u884cnginx\u7684bin\u6587\u4ef6: \u5f53\u524d\u6839\u76ee\u5f55\u4e3a\uff1a /home \uff0cnginx\u7684bin\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a /usr/local/nginx/sbin Bash ln -s /usr/local/nginx/sbin/nginx nginx \u66f4\u6539 conf \u6587\u4ef6\u540e\uff0c\u5bf9\u8bed\u6cd5\u8fdb\u884c\u68c0\u67e5\uff1a Bash ./nginx -t \u91cd\u542f\uff1a Bash ./nginx -s reload","title":"nginx\u7684\u91cd\u542f"},{"location":"web/ch2/","text":"uWSGI \u00b6 uWSGI\u662f Python \u8bed\u8a00\u5b9a\u4e49\u7684 Web \u670d\u52a1\u5668\u548c Web \u5e94\u7528\u7a0b\u5e8f\u6216\u6846\u67b6\u4e4b\u95f4\u7684\u4e00\u79cd\u7b80\u5355\u800c\u901a\u7528\u7684\u63a5\u53e3\uff0c\u5e38\u7528\u6765\u914d\u5408nginx\u5b9e\u73b0\u5ba2\u6237\u7aef\u54cd\u5e94 \u5b89\u88c5 \u00b6 pip \u5b89\u88c5\uff1a Bash pip install uwsgi \u57fa\u672c\u8bbe\u7f6e \u00b6 ini \u6587\u4ef6\u7684\u914d\u7f6e \u00b6 \u4ee5\u6211\u7684\u4e00\u4e2aflask\u9879\u76ee\u4e3a\u4f8b\uff0c\u9879\u76ee\u8def\u5f84\u4e3a /home/flask \uff0c\u5165\u53e3\u6587\u4ef6\u4e3a app.py \u9700\u8981\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u521b\u5efa uwsgi_conf.ini \u6587\u4ef6\uff1a INI [uwsgi] #\u76d1\u542c\u7aef\u53e3 socket = 127.0.0.1:5000 #\u8fdb\u7a0b processes = 8 #\u9879\u76ee\u8def\u5f84 chdir = /home/flask #\u9879\u76ee\u540d\u79f0 wsgi-file = app.py #\u56de\u8c03 callable = app \u5bf9 app.py \u7684\u5165\u53e3\u51fd\u6570\u8fdb\u884c\u4fee\u6539\uff1a Python if __name__ == '__main__' : app . run ( host = '127.0.0.1' , port = 5000 , debug = False ) \u6ce8\u610fflask\u63a5\u6536\u7684\u662f\u5185\u90e8\u7aef\u53e35000 uWSGI\u542f\u52a8 \u00b6 \u4e2a\u4eba\u4e60\u60ef\u4f7f\u7528tmux\u76f4\u63a5\u6302\u8d77\u4f1a\u8bdd\uff1a Bash uwsgi uwsgi_conf.ini CTRL + C \u5373\u53ef\u9000\u51fa","title":"uWSGI"},{"location":"web/ch2/#uwsgi","text":"uWSGI\u662f Python \u8bed\u8a00\u5b9a\u4e49\u7684 Web \u670d\u52a1\u5668\u548c Web \u5e94\u7528\u7a0b\u5e8f\u6216\u6846\u67b6\u4e4b\u95f4\u7684\u4e00\u79cd\u7b80\u5355\u800c\u901a\u7528\u7684\u63a5\u53e3\uff0c\u5e38\u7528\u6765\u914d\u5408nginx\u5b9e\u73b0\u5ba2\u6237\u7aef\u54cd\u5e94","title":"uWSGI"},{"location":"web/ch2/#_1","text":"pip \u5b89\u88c5\uff1a Bash pip install uwsgi","title":"\u5b89\u88c5"},{"location":"web/ch2/#_2","text":"","title":"\u57fa\u672c\u8bbe\u7f6e"},{"location":"web/ch2/#ini","text":"\u4ee5\u6211\u7684\u4e00\u4e2aflask\u9879\u76ee\u4e3a\u4f8b\uff0c\u9879\u76ee\u8def\u5f84\u4e3a /home/flask \uff0c\u5165\u53e3\u6587\u4ef6\u4e3a app.py \u9700\u8981\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u521b\u5efa uwsgi_conf.ini \u6587\u4ef6\uff1a INI [uwsgi] #\u76d1\u542c\u7aef\u53e3 socket = 127.0.0.1:5000 #\u8fdb\u7a0b processes = 8 #\u9879\u76ee\u8def\u5f84 chdir = /home/flask #\u9879\u76ee\u540d\u79f0 wsgi-file = app.py #\u56de\u8c03 callable = app \u5bf9 app.py \u7684\u5165\u53e3\u51fd\u6570\u8fdb\u884c\u4fee\u6539\uff1a Python if __name__ == '__main__' : app . run ( host = '127.0.0.1' , port = 5000 , debug = False ) \u6ce8\u610fflask\u63a5\u6536\u7684\u662f\u5185\u90e8\u7aef\u53e35000","title":"ini \u6587\u4ef6\u7684\u914d\u7f6e"},{"location":"web/ch2/#uwsgi_1","text":"\u4e2a\u4eba\u4e60\u60ef\u4f7f\u7528tmux\u76f4\u63a5\u6302\u8d77\u4f1a\u8bdd\uff1a Bash uwsgi uwsgi_conf.ini CTRL + C \u5373\u53ef\u9000\u51fa","title":"uWSGI\u542f\u52a8"}]}